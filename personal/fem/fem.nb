Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Finite", " ", "Element", " ", "Method"}], "*)"}]], "Input",
 CellChangeTimes->{{3.602430660669198*^9, 3.6024306814319735`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Parameter", " ", "initialization"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"elemFilename", "=", "\"\<chnlelems.dat\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nodeFilename", "=", "\"\<chnlnodes.dat\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"height", "=", "9"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "The", " ", "number", " ", "of", " ", "elements", " ", "on", " ", "the", 
      " ", "left", " ", "and", " ", "right", " ", "edge", " ", "of", " ", 
      "the", " ", "flow"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"origin", " ", "=", " ", "61"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Node", " ", "ID", " ", "of", " ", "the", " ", "location", " ", "of", 
      " ", "the", " ", "Dirichlet", " ", "boundary", " ", "singularity"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"inflow", "=", "1"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Flow", " ", "in", " ", "and", " ", "out", " ", "of", " ", "the", " ", 
      RowBox[{"left", "/", "right"}], " ", "edges"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"scale", "=", ".5"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Flow", " ", "field", " ", "arrow", " ", "display", " ", "scale"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]x", "=", ".01"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Streamline", " ", "resolution"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]y", "=", ".01"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Streamline", " ", "resolution"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.6032544679425087`*^9, 3.6032544812572203`*^9}, 
   3.6032555513469353`*^9, {3.603256132352234*^9, 3.603256142648071*^9}, {
   3.603333082443549*^9, 3.603333099066596*^9}, {3.603333208279872*^9, 
   3.6033332084389777`*^9}, {3.603333247768687*^9, 3.6033332581811113`*^9}, {
   3.603333376045599*^9, 3.60333341726759*^9}, {3.6033334813074064`*^9, 
   3.6033334978368177`*^9}, {3.603334211113865*^9, 3.6033342118893795`*^9}, {
   3.6033344379191985`*^9, 3.6033344383454833`*^9}, {3.603335709979246*^9, 
   3.6033357403924446`*^9}, {3.6033368059161167`*^9, 
   3.6033368087690105`*^9}, {3.6033452107825785`*^9, 
   3.6033452224996843`*^9}, {3.6033455106184187`*^9, 
   3.6033455108855963`*^9}, {3.6033457241901274`*^9, 
   3.6033457742229834`*^9}, {3.6033492124069705`*^9, 3.60334922986304*^9}, {
   3.603349318154834*^9, 3.6033493300587354`*^9}, {3.6033495448299584`*^9, 
   3.603349545636492*^9}, {3.603349631656266*^9, 3.6033496339918137`*^9}, {
   3.6033497342118025`*^9, 3.603349759323963*^9}, {3.6033889836868544`*^9, 
   3.6033889869160604`*^9}, 3.603391832607458*^9, 3.603393424846655*^9, {
   3.603393807215727*^9, 3.603393841941388*^9}, {3.603394906791182*^9, 
   3.603394908983307*^9}, {3.603395807208683*^9, 3.603395807592705*^9}, {
   3.6036346548660874`*^9, 3.6036346554504757`*^9}, {3.6036354081474085`*^9, 
   3.6036354114335904`*^9}, {3.603638276958845*^9, 3.6036382905596848`*^9}, {
   3.603639325341279*^9, 3.603639325563425*^9}, {3.6036409241573935`*^9, 
   3.6036409704981227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Geometry", " ", "initialization"}], "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"elementRecord", "[", 
     RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
    RowBox[{
    "The", " ", "node", " ", "element", " ", "array", " ", "for", " ", "the", 
     " ", "ith", " ", "element"}]}], "*)"}], "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"elementRecord", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"j", " ", "-", " ", "1"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
      "The", " ", "jth", " ", "node", " ", "of", " ", "element", " ", "i"}]}],
      ",", " ", 
     RowBox[{
     "counting", " ", "from", " ", "bottom", " ", "left", " ", "going", " ", 
      "counterclockwise"}]}], "*)"}],
   CellOpen->False], 
  RowBox[{"(*", 
   RowBox[{"Structure", ":", " ", 
    RowBox[{
    "The", " ", "elements", " ", "should", " ", "be", " ", "in", " ", "a", 
     " ", "grid", " ", "with", " ", "the", " ", "first", " ", "column", " ", 
     "where", " ", "the", " ", "flow", " ", "enters", " ", "and", " ", "the", 
     " ", "last", " ", "column", " ", "where", " ", "the", " ", "flow", " ", 
     RowBox[{"leaves", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"elementRecord", " ", "=", 
     RowBox[{"Import", "[", "elemFilename", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"nodeRecord", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
     RowBox[{
     "The", " ", "coordinates", " ", "array", " ", "for", " ", "the", " ", 
      "ith", " ", "node"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"nodeRecord", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
       RowBox[{
       "The", " ", "x", " ", "or", " ", "y", " ", "coordinate", " ", "of", 
        " ", "the", " ", "node"}]}], ";", " ", 
      RowBox[{
       RowBox[{"x", " ", "is", " ", "j"}], " ", "=", " ", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"y", " ", "is", " ", "j"}], " ", "=", " ", "3"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nodeRecord", "=", 
     RowBox[{"Import", "[", "nodeFilename", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Preliminary", " ", "node", " ", "layout"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getNodes", "[", "i_", "]"}], ":=", 
     RowBox[{"Delete", "[", 
      RowBox[{
       RowBox[{"elementRecord", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getNodes", "::", "usage"}], "=", 
     "\"\<Returns the nodes {N1, N2, N3, N4} of element i in counterclockwise \
order from the bottom left.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getLocation", "[", "i_", "]"}], ":=", 
     RowBox[{"Delete", "[", 
      RowBox[{
       RowBox[{"nodeRecord", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getLocation", "::", "usage"}], "=", 
     "\"\<Returns the coordinates {x, y} of node i.\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineArray", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "elementRecord", "]"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pointArray", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "nodeRecord", "]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"For", " ", "every", " ", "element"}], ",", " ", 
     RowBox[{
     "draw", " ", "the", " ", "edges", " ", "that", " ", "make", " ", "up", 
      " ", "the", " ", "element"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"elt", "=", "1"}], ",", 
     RowBox[{"elt", "\[LessEqual]", 
      RowBox[{"Length", "[", "elementRecord", "]"}]}], ",", 
     RowBox[{"elt", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Draw", " ", "the", " ", "rectangle", " ", "from", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], ")"}], " ", "to", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", ",", "\[Delta]"}], ")"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lineArray", "[", 
        RowBox[{"[", "elt", "]"}], "]"}], "=", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "\[Beta]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "\[Delta]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "\[Delta]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "}"}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"For", " ", "every", " ", "node"}], ",", " ", 
     RowBox[{
     "add", " ", "its", " ", "coordinates", " ", "to", " ", "be", " ", 
      "drawn"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"node", "=", "1"}], ",", 
     RowBox[{"node", "\[LessEqual]", 
      RowBox[{"Length", "[", "nodeRecord", "]"}]}], ",", 
     RowBox[{"node", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pointArray", "[", 
        RowBox[{"[", "node", "]"}], "]"}], "=", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"getLocation", "[", "node", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"getLocation", "[", "node", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "the", " ", "mesh"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", "lineArray", "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", "pointArray"}], "}"}], 
      "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.603034726460221*^9, 3.603034813494567*^9}, {
   3.603034865497401*^9, 3.6030348661138105`*^9}, {3.603034915940032*^9, 
   3.6030350169311733`*^9}, {3.603035083566141*^9, 3.603035105100437*^9}, {
   3.6030351390064487`*^9, 3.6030351593125467`*^9}, {3.6030352179562197`*^9, 
   3.603035256105734*^9}, {3.603035305906418*^9, 3.6030353466513853`*^9}, {
   3.603035488750264*^9, 3.603035538660021*^9}, {3.603035594267149*^9, 
   3.6030355945373297`*^9}, {3.6030356947048273`*^9, 3.603035708534088*^9}, {
   3.603035833119009*^9, 3.603035884203082*^9}, {3.603035958662116*^9, 
   3.6030359789692516`*^9}, {3.603036029398369*^9, 3.6030360798321114`*^9}, {
   3.603036188057501*^9, 3.603036189225276*^9}, {3.60303631700911*^9, 
   3.603036345657737*^9}, 3.603036392218996*^9, {3.6030364669872704`*^9, 
   3.6030365147409115`*^9}, {3.6030452595281725`*^9, 
   3.6030452748493414`*^9}, {3.603055588678186*^9, 3.603055623275155*^9}, {
   3.6030557210497384`*^9, 3.603055833649479*^9}, {3.603056062356977*^9, 
   3.603056066091457*^9}, 3.603056187025733*^9, {3.6030564798195143`*^9, 
   3.603056608532954*^9}, {3.603058076083331*^9, 3.6030581812602835`*^9}, {
   3.603058245732146*^9, 3.6030582748429413`*^9}, {3.603058442459572*^9, 
   3.6030584818677297`*^9}, 3.6030585232716675`*^9, {3.603064925516159*^9, 
   3.603064983604218*^9}, 3.6030726807158175`*^9, {3.603072983807087*^9, 
   3.6030730235497932`*^9}, {3.603073090211018*^9, 3.6030732060132217`*^9}, {
   3.6030733922024946`*^9, 3.6030735324058404`*^9}, {3.6030735741501813`*^9, 
   3.603073647900344*^9}, {3.6031295118834524`*^9, 3.603129525808695*^9}, 
   3.603129608986659*^9, 3.6031296932597675`*^9, {3.603129736741671*^9, 
   3.6031297417349854`*^9}, {3.603129772749874*^9, 3.6031297854819455`*^9}, {
   3.603129819209094*^9, 3.603129819746451*^9}, {3.603129861943328*^9, 
   3.6031298730026703`*^9}, {3.6031300946957994`*^9, 3.603130101041011*^9}, {
   3.603130136177335*^9, 3.6031301595004206`*^9}, {3.6031330889929523`*^9, 
   3.603133089183078*^9}, {3.603217585917641*^9, 3.6032176345025253`*^9}, 
   3.6032176695740495`*^9, {3.603217996835357*^9, 3.6032180130051966`*^9}, {
   3.603218168176367*^9, 3.603218169244074*^9}, {3.603218752009316*^9, 
   3.603218764170388*^9}, {3.603219123133345*^9, 3.603219164987327*^9}, {
   3.6032192138818126`*^9, 3.6032192286616635`*^9}, {3.603219259338027*^9, 
   3.603219259435092*^9}, {3.603219305581992*^9, 3.6032193130079203`*^9}, {
   3.6032194531755714`*^9, 3.603219615562792*^9}, {3.6032197501423883`*^9, 
   3.6032198765972943`*^9}, {3.6032221618551607`*^9, 3.60322217151322*^9}, {
   3.6032222029951973`*^9, 3.603222203089261*^9}, {3.6032544538158293`*^9, 
   3.6032544645302835`*^9}, {3.6032561504147453`*^9, 3.60325615388995*^9}, {
   3.6032564558521357`*^9, 3.60325645841784*^9}, {3.6033332035727463`*^9, 
   3.6033332052828817`*^9}, {3.603334194059884*^9, 3.6033341966895533`*^9}, {
   3.6033357181486225`*^9, 3.6033357285165043`*^9}, {3.603336799981205*^9, 
   3.6033368025072937`*^9}, {3.6033457800138283`*^9, 
   3.6033457864561043`*^9}, {3.603349335515357*^9, 3.6033493405827217`*^9}, 
   3.6033495250685253`*^9, {3.603349887877203*^9, 3.603349892309013*^9}, {
   3.603393465079126*^9, 3.6033934659683275`*^9}, {3.603393496341581*^9, 
   3.603393546620469*^9}, {3.6033938127537365`*^9, 3.603393857463415*^9}, {
   3.6036351236222563`*^9, 3.6036351803049774`*^9}, {3.603635420912823*^9, 
   3.603635421714357*^9}}],

Cell[BoxData[
 GraphicsBox[{{LineBox[{{-5, 0}, {-4., 0}, {-4., 0.5}, {-5, 0.5}, {-5, 0}}], 
    LineBox[{{-5, 0.5}, {-4., 0.5}, {-4., 1.}, {-5, 1.}, {-5, 0.5}}], 
    LineBox[{{-5, 1.}, {-4., 1.}, {-4., 1.5}, {-5, 1.5}, {-5, 1.}}], 
    LineBox[{{-5, 1.5}, {-4., 1.5}, {-4., 2.}, {-5, 2.}, {-5, 1.5}}], 
    LineBox[{{-5, 2.}, {-4., 2.}, {-4., 2.5}, {-5, 2.5}, {-5, 2.}}], 
    LineBox[{{-5, 2.5}, {-4., 2.5}, {-4., 3.}, {-5, 3.}, {-5, 2.5}}], 
    LineBox[{{-5, 3.}, {-4., 3.}, {-4., 3.5}, {-5, 3.5}, {-5, 3.}}], 
    LineBox[{{-5, 3.5}, {-4., 3.5}, {-4., 4.}, {-5, 4.}, {-5, 3.5}}], 
    LineBox[{{-5, 4.}, {-4., 4.}, {-4., 5.}, {-5, 5.}, {-5, 4.}}], 
    LineBox[{{-4., 0}, {-3., 0}, {-3., 0.5}, {-4., 0.5}, {-4., 0}}], 
    LineBox[{{-4., 0.5}, {-3., 0.5}, {-3., 1.}, {-4., 1.}, {-4., 0.5}}], 
    LineBox[{{-4., 1.}, {-3., 1.}, {-3., 1.5}, {-4., 1.5}, {-4., 1.}}], 
    LineBox[{{-4., 1.5}, {-3., 1.5}, {-3., 2.}, {-4., 2.}, {-4., 1.5}}], 
    LineBox[{{-4., 2.}, {-3., 2.}, {-3., 2.5}, {-4., 2.5}, {-4., 2.}}], 
    LineBox[{{-4., 2.5}, {-3., 2.5}, {-3., 3.}, {-4., 3.}, {-4., 2.5}}], 
    LineBox[{{-4., 3.}, {-3., 3.}, {-3., 3.5}, {-4., 3.5}, {-4., 3.}}], 
    LineBox[{{-4., 3.5}, {-3., 3.5}, {-3., 4.}, {-4., 4.}, {-4., 3.5}}], 
    LineBox[{{-4., 4.}, {-3., 4.}, {-3., 5.}, {-4., 5.}, {-4., 4.}}], 
    LineBox[{{-3., 0}, {-2., 0}, {-2., 0.5}, {-3., 0.5}, {-3., 0}}], 
    LineBox[{{-3., 0.5}, {-2., 0.5}, {-2., 1.}, {-3., 1.}, {-3., 0.5}}], 
    LineBox[{{-3., 1.}, {-2., 1.}, {-2., 1.5}, {-3., 1.5}, {-3., 1.}}], 
    LineBox[{{-3., 1.5}, {-2., 1.5}, {-2., 2.}, {-3., 2.}, {-3., 1.5}}], 
    LineBox[{{-3., 2.}, {-2., 2.}, {-2., 2.5}, {-3., 2.5}, {-3., 2.}}], 
    LineBox[{{-3., 2.5}, {-2., 2.5}, {-2., 3.}, {-3., 3.}, {-3., 2.5}}], 
    LineBox[{{-3., 3.}, {-2., 3.}, {-2., 3.5}, {-3., 3.5}, {-3., 3.}}], 
    LineBox[{{-3., 3.5}, {-2., 3.5}, {-2., 4.}, {-3., 4.}, {-3., 3.5}}], 
    LineBox[{{-3., 4.}, {-2., 4.}, {-2., 5.}, {-3., 5.}, {-3., 4.}}], 
    LineBox[{{-2., 0}, {-1., 0}, {-1., 0.5}, {-2., 0.5}, {-2., 0}}], 
    LineBox[{{-2., 0.5}, {-1., 0.5}, {-1., 1.}, {-2., 1.}, {-2., 0.5}}], 
    LineBox[{{-2., 1.}, {-1., 1.}, {-1., 1.5}, {-2., 1.5}, {-2., 1.}}], 
    LineBox[{{-2., 1.5}, {-1., 1.5}, {-1., 2.}, {-2., 2.}, {-2., 1.5}}], 
    LineBox[{{-2., 2.}, {-1., 2.}, {-1., 2.5}, {-2., 2.5}, {-2., 2.}}], 
    LineBox[{{-2., 2.5}, {-1., 2.5}, {-1., 3.}, {-2., 3.}, {-2., 2.5}}], 
    LineBox[{{-2., 3.}, {-1., 3.}, {-1., 3.5}, {-2., 3.5}, {-2., 3.}}], 
    LineBox[{{-2., 3.5}, {-1., 3.5}, {-1., 4.}, {-2., 4.}, {-2., 3.5}}], 
    LineBox[{{-2., 4.}, {-1., 4.}, {-1., 5.}, {-2., 5.}, {-2., 4.}}], 
    LineBox[{{-1., 0}, {-0.5, 0}, {-0.5, 0.5}, {-1., 0.5}, {-1., 0}}], 
    LineBox[{{-1., 0.5}, {-0.5, 0.5}, {-0.5, 1.}, {-1., 1.}, {-1., 0.5}}], 
    LineBox[{{-1., 1.}, {-0.5, 1.}, {-0.5, 1.5}, {-1., 1.5}, {-1., 1.}}], 
    LineBox[{{-1., 1.5}, {-0.5, 1.5}, {-0.5, 2.}, {-1., 2.}, {-1., 1.5}}], 
    LineBox[{{-1., 2.}, {-0.5, 2.}, {-0.5, 2.5}, {-1., 2.5}, {-1., 2.}}], 
    LineBox[{{-1., 2.5}, {-0.5, 2.5}, {-0.5, 3.}, {-1., 3.}, {-1., 2.5}}], 
    LineBox[{{-1., 3.}, {-0.5, 3.}, {-0.5, 3.5}, {-1., 3.5}, {-1., 3.}}], 
    LineBox[{{-1., 3.5}, {-0.5, 3.5}, {-0.5, 4.}, {-1., 4.}, {-1., 3.5}}], 
    LineBox[{{-1., 4.}, {-0.5, 4.}, {-0.5, 5.}, {-1., 5.}, {-1., 4.}}], 
    LineBox[{{-0.5, 0}, {0., 0}, {0., 0.5}, {-0.5, 0.5}, {-0.5, 0}}], 
    LineBox[{{-0.5, 0.5}, {0., 0.5}, {0., 1.}, {-0.5, 1.}, {-0.5, 0.5}}], 
    LineBox[{{-0.5, 1.}, {0., 1.}, {0., 1.5}, {-0.5, 1.5}, {-0.5, 1.}}], 
    LineBox[{{-0.5, 1.5}, {0., 1.5}, {0., 2.}, {-0.5, 2.}, {-0.5, 1.5}}], 
    LineBox[{{-0.5, 2.}, {0., 2.}, {0., 2.5}, {-0.5, 2.5}, {-0.5, 2.}}], 
    LineBox[{{-0.5, 2.5}, {0., 2.5}, {0., 3.}, {-0.5, 3.}, {-0.5, 2.5}}], 
    LineBox[{{-0.5, 3.}, {0., 3.}, {0., 3.5}, {-0.5, 3.5}, {-0.5, 3.}}], 
    LineBox[{{-0.5, 3.5}, {0., 3.5}, {0., 4.}, {-0.5, 4.}, {-0.5, 3.5}}], 
    LineBox[{{-0.5, 4.}, {0., 4.}, {0., 5.}, {-0.5, 5.}, {-0.5, 4.}}], 
    LineBox[{{0., 2.}, {0.5, 2.}, {0.5, 2.5}, {0., 2.5}, {0., 2.}}], 
    LineBox[{{0., 2.5}, {0.5, 2.5}, {0.5, 3.}, {0., 3.}, {0., 2.5}}], 
    LineBox[{{0., 3.}, {0.5, 3.}, {0.5, 3.5}, {0., 3.5}, {0., 3.}}], 
    LineBox[{{0., 3.5}, {0.5, 3.5}, {0.5, 4.}, {0., 4.}, {0., 3.5}}], 
    LineBox[{{0., 4.}, {0.5, 4.}, {0.5, 5.}, {0., 5.}, {0., 4.}}], 
    LineBox[{{0.5, 2.}, {1., 2.}, {1., 2.5}, {0.5, 2.5}, {0.5, 2.}}], 
    LineBox[{{0.5, 2.5}, {1., 2.5}, {1., 3.}, {0.5, 3.}, {0.5, 2.5}}], 
    LineBox[{{0.5, 3.}, {1., 3.}, {1., 3.5}, {0.5, 3.5}, {0.5, 3.}}], 
    LineBox[{{0.5, 3.5}, {1., 3.5}, {1., 4.}, {0.5, 4.}, {0.5, 3.5}}], 
    LineBox[{{0.5, 4.}, {1., 4.}, {1., 5.}, {0.5, 5.}, {0.5, 4.}}], 
    LineBox[{{1., 2.}, {1.5, 2.}, {1.5, 2.5}, {1., 2.5}, {1., 2.}}], 
    LineBox[{{1., 2.5}, {1.5, 2.5}, {1.5, 3.}, {1., 3.}, {1., 2.5}}], 
    LineBox[{{1., 3.}, {1.5, 3.}, {1.5, 3.5}, {1., 3.5}, {1., 3.}}], 
    LineBox[{{1., 3.5}, {1.5, 3.5}, {1.5, 4.}, {1., 4.}, {1., 3.5}}], 
    LineBox[{{1., 4.}, {1.5, 4.}, {1.5, 5.}, {1., 5.}, {1., 4.}}], 
    LineBox[{{1.5, 2.}, {2., 2.}, {2., 2.5}, {1.5, 2.5}, {1.5, 2.}}], 
    LineBox[{{1.5, 2.5}, {2., 2.5}, {2., 3.}, {1.5, 3.}, {1.5, 2.5}}], 
    LineBox[{{1.5, 3.}, {2., 3.}, {2., 3.5}, {1.5, 3.5}, {1.5, 3.}}], 
    LineBox[{{1.5, 3.5}, {2., 3.5}, {2., 4.}, {1.5, 4.}, {1.5, 3.5}}], 
    LineBox[{{1.5, 4.}, {2., 4.}, {2., 5.}, {1.5, 5.}, {1.5, 4.}}], 
    LineBox[{{2., 0}, {2.5, 0}, {2.5, 0.5}, {2., 0.5}, {2., 0}}], 
    LineBox[{{2., 0.5}, {2.5, 0.5}, {2.5, 1.}, {2., 1.}, {2., 0.5}}], 
    LineBox[{{2., 1.}, {2.5, 1.}, {2.5, 1.5}, {2., 1.5}, {2., 1.}}], 
    LineBox[{{2., 1.5}, {2.5, 1.5}, {2.5, 2.}, {2., 2.}, {2., 1.5}}], 
    LineBox[{{2., 2.}, {2.5, 2.}, {2.5, 2.5}, {2., 2.5}, {2., 2.}}], 
    LineBox[{{2., 2.5}, {2.5, 2.5}, {2.5, 3.}, {2., 3.}, {2., 2.5}}], 
    LineBox[{{2., 3.}, {2.5, 3.}, {2.5, 3.5}, {2., 3.5}, {2., 3.}}], 
    LineBox[{{2., 3.5}, {2.5, 3.5}, {2.5, 4.}, {2., 4.}, {2., 3.5}}], 
    LineBox[{{2., 4.}, {2.5, 4.}, {2.5, 5.}, {2., 5.}, {2., 4.}}], 
    LineBox[{{2.5, 0}, {3., 0}, {3., 0.5}, {2.5, 0.5}, {2.5, 0}}], 
    LineBox[{{2.5, 0.5}, {3., 0.5}, {3., 1.}, {2.5, 1.}, {2.5, 0.5}}], 
    LineBox[{{2.5, 1.}, {3., 1.}, {3., 1.5}, {2.5, 1.5}, {2.5, 1.}}], 
    LineBox[{{2.5, 1.5}, {3., 1.5}, {3., 2.}, {2.5, 2.}, {2.5, 1.5}}], 
    LineBox[{{2.5, 2.}, {3., 2.}, {3., 2.5}, {2.5, 2.5}, {2.5, 2.}}], 
    LineBox[{{2.5, 2.5}, {3., 2.5}, {3., 3.}, {2.5, 3.}, {2.5, 2.5}}], 
    LineBox[{{2.5, 3.}, {3., 3.}, {3., 3.5}, {2.5, 3.5}, {2.5, 3.}}], 
    LineBox[{{2.5, 3.5}, {3., 3.5}, {3., 4.}, {2.5, 4.}, {2.5, 3.5}}], 
    LineBox[{{2.5, 4.}, {3., 4.}, {3., 5.}, {2.5, 5.}, {2.5, 4.}}], 
    LineBox[{{3., 0}, {3.5, 0}, {3.5, 0.5}, {3., 0.5}, {3., 0}}], 
    LineBox[{{3., 0.5}, {3.5, 0.5}, {3.5, 1.}, {3., 1.}, {3., 0.5}}], 
    LineBox[{{3., 1.}, {3.5, 1.}, {3.5, 1.5}, {3., 1.5}, {3., 1.}}], 
    LineBox[{{3., 1.5}, {3.5, 1.5}, {3.5, 2.}, {3., 2.}, {3., 1.5}}], 
    LineBox[{{3., 2.}, {3.5, 2.}, {3.5, 2.5}, {3., 2.5}, {3., 2.}}], 
    LineBox[{{3., 2.5}, {3.5, 2.5}, {3.5, 3.}, {3., 3.}, {3., 2.5}}], 
    LineBox[{{3., 3.}, {3.5, 3.}, {3.5, 3.5}, {3., 3.5}, {3., 3.}}], 
    LineBox[{{3., 3.5}, {3.5, 3.5}, {3.5, 4.}, {3., 4.}, {3., 3.5}}], 
    LineBox[{{3., 4.}, {3.5, 4.}, {3.5, 5.}, {3., 5.}, {3., 4.}}], 
    LineBox[{{3.5, 0}, {4.5, 0}, {4.5, 0.5}, {3.5, 0.5}, {3.5, 0}}], 
    LineBox[{{3.5, 0.5}, {4.5, 0.5}, {4.5, 1.}, {3.5, 1.}, {3.5, 0.5}}], 
    LineBox[{{3.5, 1.}, {4.5, 1.}, {4.5, 1.5}, {3.5, 1.5}, {3.5, 1.}}], 
    LineBox[{{3.5, 1.5}, {4.5, 1.5}, {4.5, 2.}, {3.5, 2.}, {3.5, 1.5}}], 
    LineBox[{{3.5, 2.}, {4.5, 2.}, {4.5, 2.5}, {3.5, 2.5}, {3.5, 2.}}], 
    LineBox[{{3.5, 2.5}, {4.5, 2.5}, {4.5, 3.}, {3.5, 3.}, {3.5, 2.5}}], 
    LineBox[{{3.5, 3.}, {4.5, 3.}, {4.5, 3.5}, {3.5, 3.5}, {3.5, 3.}}], 
    LineBox[{{3.5, 3.5}, {4.5, 3.5}, {4.5, 4.}, {3.5, 4.}, {3.5, 3.5}}], 
    LineBox[{{3.5, 4.}, {4.5, 4.}, {4.5, 5.}, {3.5, 5.}, {3.5, 4.}}], 
    LineBox[{{4.5, 0}, {5.5, 0}, {5.5, 0.5}, {4.5, 0.5}, {4.5, 0}}], 
    LineBox[{{4.5, 0.5}, {5.5, 0.5}, {5.5, 1.}, {4.5, 1.}, {4.5, 0.5}}], 
    LineBox[{{4.5, 1.}, {5.5, 1.}, {5.5, 1.5}, {4.5, 1.5}, {4.5, 1.}}], 
    LineBox[{{4.5, 1.5}, {5.5, 1.5}, {5.5, 2.}, {4.5, 2.}, {4.5, 1.5}}], 
    LineBox[{{4.5, 2.}, {5.5, 2.}, {5.5, 2.5}, {4.5, 2.5}, {4.5, 2.}}], 
    LineBox[{{4.5, 2.5}, {5.5, 2.5}, {5.5, 3.}, {4.5, 3.}, {4.5, 2.5}}], 
    LineBox[{{4.5, 3.}, {5.5, 3.}, {5.5, 3.5}, {4.5, 3.5}, {4.5, 3.}}], 
    LineBox[{{4.5, 3.5}, {5.5, 3.5}, {5.5, 4.}, {4.5, 4.}, {4.5, 3.5}}], 
    LineBox[{{4.5, 4.}, {5.5, 4.}, {5.5, 5.}, {4.5, 5.}, {4.5, 4.}}], 
    LineBox[{{5.5, 0}, {6.5, 0}, {6.5, 0.5}, {5.5, 0.5}, {5.5, 0}}], 
    LineBox[{{5.5, 0.5}, {6.5, 0.5}, {6.5, 1.}, {5.5, 1.}, {5.5, 0.5}}], 
    LineBox[{{5.5, 1.}, {6.5, 1.}, {6.5, 1.5}, {5.5, 1.5}, {5.5, 1.}}], 
    LineBox[{{5.5, 1.5}, {6.5, 1.5}, {6.5, 2.}, {5.5, 2.}, {5.5, 1.5}}], 
    LineBox[{{5.5, 2.}, {6.5, 2.}, {6.5, 2.5}, {5.5, 2.5}, {5.5, 2.}}], 
    LineBox[{{5.5, 2.5}, {6.5, 2.5}, {6.5, 3.}, {5.5, 3.}, {5.5, 2.5}}], 
    LineBox[{{5.5, 3.}, {6.5, 3.}, {6.5, 3.5}, {5.5, 3.5}, {5.5, 3.}}], 
    LineBox[{{5.5, 3.5}, {6.5, 3.5}, {6.5, 4.}, {5.5, 4.}, {5.5, 3.5}}], 
    LineBox[{{5.5, 4.}, {6.5, 4.}, {6.5, 5.}, {5.5, 5.}, {5.5, 4.}}], 
    LineBox[{{6.5, 0}, {7.5, 0}, {7.5, 0.5}, {6.5, 0.5}, {6.5, 0}}], 
    LineBox[{{6.5, 0.5}, {7.5, 0.5}, {7.5, 1.}, {6.5, 1.}, {6.5, 0.5}}], 
    LineBox[{{6.5, 1.}, {7.5, 1.}, {7.5, 1.5}, {6.5, 1.5}, {6.5, 1.}}], 
    LineBox[{{6.5, 1.5}, {7.5, 1.5}, {7.5, 2.}, {6.5, 2.}, {6.5, 1.5}}], 
    LineBox[{{6.5, 2.}, {7.5, 2.}, {7.5, 2.5}, {6.5, 2.5}, {6.5, 2.}}], 
    LineBox[{{6.5, 2.5}, {7.5, 2.5}, {7.5, 3.}, {6.5, 3.}, {6.5, 2.5}}], 
    LineBox[{{6.5, 3.}, {7.5, 3.}, {7.5, 3.5}, {6.5, 3.5}, {6.5, 3.}}], 
    LineBox[{{6.5, 3.5}, {7.5, 3.5}, {7.5, 4.}, {6.5, 4.}, {6.5, 3.5}}], 
    LineBox[{{6.5, 4.}, {7.5, 4.}, {7.5, 5.}, {6.5, 5.}, {6.5, 4.}}], 
    LineBox[{{7.5, 0}, {8.5, 0}, {8.5, 0.5}, {7.5, 0.5}, {7.5, 0}}], 
    LineBox[{{7.5, 0.5}, {8.5, 0.5}, {8.5, 1.}, {7.5, 1.}, {7.5, 0.5}}], 
    LineBox[{{7.5, 1.}, {8.5, 1.}, {8.5, 1.5}, {7.5, 1.5}, {7.5, 1.}}], 
    LineBox[{{7.5, 1.5}, {8.5, 1.5}, {8.5, 2.}, {7.5, 2.}, {7.5, 1.5}}], 
    LineBox[{{7.5, 2.}, {8.5, 2.}, {8.5, 2.5}, {7.5, 2.5}, {7.5, 2.}}], 
    LineBox[{{7.5, 2.5}, {8.5, 2.5}, {8.5, 3.}, {7.5, 3.}, {7.5, 2.5}}], 
    LineBox[{{7.5, 3.}, {8.5, 3.}, {8.5, 3.5}, {7.5, 3.5}, {7.5, 3.}}], 
    LineBox[{{7.5, 3.5}, {8.5, 3.5}, {8.5, 4.}, {7.5, 4.}, {7.5, 3.5}}], 
    LineBox[{{7.5, 4.}, {8.5, 4.}, {8.5, 5.}, {7.5, 5.}, {7.5, 4.}}], 
    LineBox[{{8.5, 0}, {9.5, 0}, {9.5, 0.5}, {8.5, 0.5}, {8.5, 0}}], 
    LineBox[{{8.5, 0.5}, {9.5, 0.5}, {9.5, 1.}, {8.5, 1.}, {8.5, 0.5}}], 
    LineBox[{{8.5, 1.}, {9.5, 1.}, {9.5, 1.5}, {8.5, 1.5}, {8.5, 1.}}], 
    LineBox[{{8.5, 1.5}, {9.5, 1.5}, {9.5, 2.}, {8.5, 2.}, {8.5, 1.5}}], 
    LineBox[{{8.5, 2.}, {9.5, 2.}, {9.5, 2.5}, {8.5, 2.5}, {8.5, 2.}}], 
    LineBox[{{8.5, 2.5}, {9.5, 2.5}, {9.5, 3.}, {8.5, 3.}, {8.5, 2.5}}], 
    LineBox[{{8.5, 3.}, {9.5, 3.}, {9.5, 3.5}, {8.5, 3.5}, {8.5, 3.}}], 
    LineBox[{{8.5, 3.5}, {9.5, 3.5}, {9.5, 4.}, {8.5, 4.}, {8.5, 3.5}}], 
    LineBox[{{8.5, 4.}, {9.5, 4.}, {9.5, 5.}, {8.5, 5.}, {8.5, 4.}}]}, 
   {PointSize[Large], PointBox[{-5, 0}], PointBox[{-5, 0.5}], 
    PointBox[{-5, 1.}], PointBox[{-5, 1.5}], PointBox[{-5, 2.}], 
    PointBox[{-5, 2.5}], PointBox[{-5, 3.}], PointBox[{-5, 3.5}], 
    PointBox[{-5, 4.}], PointBox[{-5, 5.}], PointBox[{-4., 0}], 
    PointBox[{-4., 0.5}], PointBox[{-4., 1.}], PointBox[{-4., 1.5}], 
    PointBox[{-4., 2.}], PointBox[{-4., 2.5}], PointBox[{-4., 3.}], 
    PointBox[{-4., 3.5}], PointBox[{-4., 4.}], PointBox[{-4., 5.}], 
    PointBox[{-3., 0}], PointBox[{-3., 0.5}], PointBox[{-3., 1.}], 
    PointBox[{-3., 1.5}], PointBox[{-3., 2.}], PointBox[{-3., 2.5}], 
    PointBox[{-3., 3.}], PointBox[{-3., 3.5}], PointBox[{-3., 4.}], 
    PointBox[{-3., 5.}], PointBox[{-2., 0}], PointBox[{-2., 0.5}], 
    PointBox[{-2., 1.}], PointBox[{-2., 1.5}], PointBox[{-2., 2.}], 
    PointBox[{-2., 2.5}], PointBox[{-2., 3.}], PointBox[{-2., 3.5}], 
    PointBox[{-2., 4.}], PointBox[{-2., 5.}], PointBox[{-1., 0}], 
    PointBox[{-1., 0.5}], PointBox[{-1., 1.}], PointBox[{-1., 1.5}], 
    PointBox[{-1., 2.}], PointBox[{-1., 2.5}], PointBox[{-1., 3.}], 
    PointBox[{-1., 3.5}], PointBox[{-1., 4.}], PointBox[{-1., 5.}], 
    PointBox[{-0.5, 0}], PointBox[{-0.5, 0.5}], PointBox[{-0.5, 1.}], 
    PointBox[{-0.5, 1.5}], PointBox[{-0.5, 2.}], PointBox[{-0.5, 2.5}], 
    PointBox[{-0.5, 3.}], PointBox[{-0.5, 3.5}], PointBox[{-0.5, 4.}], 
    PointBox[{-0.5, 5.}], PointBox[{0., 0}], PointBox[{0., 0.5}], 
    PointBox[{0., 1.}], PointBox[{0., 1.5}], PointBox[{0., 2.}], 
    PointBox[{0., 2.5}], PointBox[{0., 3.}], PointBox[{0., 3.5}], 
    PointBox[{0., 4.}], PointBox[{0., 5.}], PointBox[{0.5, 2.}], 
    PointBox[{0.5, 2.5}], PointBox[{0.5, 3.}], PointBox[{0.5, 3.5}], 
    PointBox[{0.5, 4.}], PointBox[{0.5, 5.}], PointBox[{1., 2.}], 
    PointBox[{1., 2.5}], PointBox[{1., 3.}], PointBox[{1., 3.5}], 
    PointBox[{1., 4.}], PointBox[{1., 5.}], PointBox[{1.5, 2.}], 
    PointBox[{1.5, 2.5}], PointBox[{1.5, 3.}], PointBox[{1.5, 3.5}], 
    PointBox[{1.5, 4.}], PointBox[{1.5, 5.}], PointBox[{2., 0}], 
    PointBox[{2., 0.5}], PointBox[{2., 1.}], PointBox[{2., 1.5}], 
    PointBox[{2., 2.}], PointBox[{2., 2.5}], PointBox[{2., 3.}], 
    PointBox[{2., 3.5}], PointBox[{2., 4.}], PointBox[{2., 5.}], 
    PointBox[{2.5, 0}], PointBox[{2.5, 0.5}], PointBox[{2.5, 1.}], 
    PointBox[{2.5, 1.5}], PointBox[{2.5, 2.}], PointBox[{2.5, 2.5}], 
    PointBox[{2.5, 3.}], PointBox[{2.5, 3.5}], PointBox[{2.5, 4.}], 
    PointBox[{2.5, 5.}], PointBox[{3., 0}], PointBox[{3., 0.5}], 
    PointBox[{3., 1.}], PointBox[{3., 1.5}], PointBox[{3., 2.}], 
    PointBox[{3., 2.5}], PointBox[{3., 3.}], PointBox[{3., 3.5}], 
    PointBox[{3., 4.}], PointBox[{3., 5.}], PointBox[{3.5, 0}], 
    PointBox[{3.5, 0.5}], PointBox[{3.5, 1.}], PointBox[{3.5, 1.5}], 
    PointBox[{3.5, 2.}], PointBox[{3.5, 2.5}], PointBox[{3.5, 3.}], 
    PointBox[{3.5, 3.5}], PointBox[{3.5, 4.}], PointBox[{3.5, 5.}], 
    PointBox[{4.5, 0}], PointBox[{4.5, 0.5}], PointBox[{4.5, 1.}], 
    PointBox[{4.5, 1.5}], PointBox[{4.5, 2.}], PointBox[{4.5, 2.5}], 
    PointBox[{4.5, 3.}], PointBox[{4.5, 3.5}], PointBox[{4.5, 4.}], 
    PointBox[{4.5, 5.}], PointBox[{5.5, 0}], PointBox[{5.5, 0.5}], 
    PointBox[{5.5, 1.}], PointBox[{5.5, 1.5}], PointBox[{5.5, 2.}], 
    PointBox[{5.5, 2.5}], PointBox[{5.5, 3.}], PointBox[{5.5, 3.5}], 
    PointBox[{5.5, 4.}], PointBox[{5.5, 5.}], PointBox[{6.5, 0}], 
    PointBox[{6.5, 0.5}], PointBox[{6.5, 1.}], PointBox[{6.5, 1.5}], 
    PointBox[{6.5, 2.}], PointBox[{6.5, 2.5}], PointBox[{6.5, 3.}], 
    PointBox[{6.5, 3.5}], PointBox[{6.5, 4.}], PointBox[{6.5, 5.}], 
    PointBox[{7.5, 0}], PointBox[{7.5, 0.5}], PointBox[{7.5, 1.}], 
    PointBox[{7.5, 1.5}], PointBox[{7.5, 2.}], PointBox[{7.5, 2.5}], 
    PointBox[{7.5, 3.}], PointBox[{7.5, 3.5}], PointBox[{7.5, 4.}], 
    PointBox[{7.5, 5.}], PointBox[{8.5, 0}], PointBox[{8.5, 0.5}], 
    PointBox[{8.5, 1.}], PointBox[{8.5, 1.5}], PointBox[{8.5, 2.}], 
    PointBox[{8.5, 2.5}], PointBox[{8.5, 3.}], PointBox[{8.5, 3.5}], 
    PointBox[{8.5, 4.}], PointBox[{8.5, 5.}], PointBox[{9.5, 0}], 
    PointBox[{9.5, 0.5}], PointBox[{9.5, 1.}], PointBox[{9.5, 1.5}], 
    PointBox[{9.5, 2.}], PointBox[{9.5, 2.5}], PointBox[{9.5, 3.}], 
    PointBox[{9.5, 3.5}], PointBox[{9.5, 4.}], PointBox[{9.5, 5.}]}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{
  3.6033510300213923`*^9, 3.60339397972083*^9, 3.6033958433397493`*^9, 
   3.6034085929226055`*^9, 3.603414929741911*^9, 3.6034158827089777`*^9, 
   3.603435701589126*^9, 3.603633578453336*^9, {3.6036351331809473`*^9, 
   3.603635180883362*^9}, {3.6036354225899363`*^9, 3.6036354280155396`*^9}, 
   3.603635587181182*^9, 3.6036366021210713`*^9, 3.603636666101522*^9, 
   3.6036384160797796`*^9, 3.6036393389180627`*^9, 3.6036405048936477`*^9, 
   3.6036406390002775`*^9, 3.6036407153458633`*^9, 3.6036407900923185`*^9, {
   3.603640966343752*^9, 3.6036409718730354`*^9}, 3.603641006906296*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Basis", " ", "polynomials"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Ne", "[", 
     RowBox[{
     "i_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Gamma]_", ",", 
      "\[Delta]_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"i", "\[Equal]", "1"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Alpha]"}], ")"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "y"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "\[Beta]"}], ")"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"i", "\[Equal]", "2"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Alpha]"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Alpha]"}], ")"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "y"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "\[Beta]"}], ")"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"i", "\[Equal]", "3"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Alpha]"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Alpha]"}], ")"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "\[Beta]"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "\[Beta]"}], ")"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"i", "\[Equal]", "4"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Alpha]"}], ")"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "\[Beta]"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "\[Beta]"}], ")"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ne", "::", "usage"}], "=", 
     "\"\<Basis polynomial. i is the corner index, starting at the bottom \
left and proceeding counterclockwise. (\[Alpha],\[Beta]) is the coordinate of \
the lower-left point, (\[Gamma],\[Delta]) is the upper-right point\>\""}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.603037271122284*^9, 3.6030375420212307`*^9}, {
   3.603037579970043*^9, 3.6030375850603924`*^9}, {3.6030376410645742`*^9, 
   3.603037784524352*^9}, {3.6030378577064614`*^9, 3.603037983933235*^9}, {
   3.603038095058115*^9, 3.603038099888321*^9}, {3.6030411468716598`*^9, 
   3.6030411655370502`*^9}, {3.6030412688649645`*^9, 3.603041453117771*^9}, {
   3.603045281947053*^9, 3.6030452849180255`*^9}, 3.603345817920926*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Matrix", " ", "initialization"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Kij", " ", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "nodeRecord", "]"}], ",", 
         RowBox[{"Length", "[", "nodeRecord", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Element", " ", 
     RowBox[{"loop", ":", " ", 
      RowBox[{"establish", " ", "the", " ", "square", " ", "matrix"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"elt", "=", "1"}], ",", 
     RowBox[{"elt", "\[LessEqual]", 
      RowBox[{"Length", "[", "elementRecord", "]"}]}], ",", 
     RowBox[{"elt", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"For", " ", "any", " ", "given", " ", "element"}], ",", " ", 
       RowBox[{
       "initialize", " ", "the", " ", "coordinates", " ", "of", " ", "the", 
        " ", "corners"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Calculate", " ", "the", " ", "integral", " ", "for", " ", "each", " ",
         "pair", " ", 
        RowBox[{"(", 
         RowBox[{"i", ",", " ", "j"}], ")"}], " ", "of", " ", "basis", " ", 
        "polynomials"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "4"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "4"}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Kij", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"getNodes", "[", "elt", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"getNodes", "[", "elt", "]"}], "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], "+=", 
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{"Integrate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"Ne", "[", 
                    RowBox[{
                    "i", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", 
                    ",", "\[Delta]", ",", "x", ",", "y"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], ".", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"Ne", "[", 
                    RowBox[{
                    "j", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", 
                    ",", "\[Delta]", ",", "x", ",", "y"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "\[Alpha]", ",", "\[Gamma]"}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"y", ",", "\[Beta]", ",", "\[Delta]"}], "}"}]}], 
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6030380721822987`*^9, 3.603038082721249*^9}, {
   3.603038449571451*^9, 3.6030385199761243`*^9}, {3.60303856446075*^9, 
   3.6030385976930895`*^9}, {3.6030386601349883`*^9, 3.603038694047388*^9}, {
   3.6030387297553463`*^9, 3.603038730020522*^9}, 3.6030422959184837`*^9, {
   3.603042341036383*^9, 3.603042347247505*^9}, {3.603042389711975*^9, 
   3.603042440553115*^9}, {3.6030426476092167`*^9, 3.603042653472109*^9}, {
   3.6030426958671637`*^9, 3.6030428074228735`*^9}, {3.603042944696455*^9, 
   3.6030429797223897`*^9}, {3.6030430923961444`*^9, 
   3.6030431123998957`*^9}, {3.603043209746172*^9, 3.6030432671199512`*^9}, {
   3.603043309502333*^9, 3.6030433108802505`*^9}, {3.603043368619186*^9, 
   3.603043376871664*^9}, {3.603043990152562*^9, 3.6030439955261316`*^9}, {
   3.6030445935907965`*^9, 3.60304459834902*^9}, {3.6030447999714603`*^9, 
   3.603044803137561*^9}, {3.6030448625486574`*^9, 3.603044885652664*^9}, {
   3.603045202218298*^9, 3.6030452026365757`*^9}, {3.6030452894400263`*^9, 
   3.6030452997228804`*^9}, {3.603045536650268*^9, 3.603045546228176*^9}, {
   3.603045590825649*^9, 3.603045623735637*^9}, {3.6030551897503595`*^9, 
   3.603055250892598*^9}, {3.6030553671767874`*^9, 3.6030553695343533`*^9}, {
   3.603055507298802*^9, 3.6030555642636137`*^9}, 3.603055762233074*^9, {
   3.6030566405351963`*^9, 3.603056647392748*^9}, {3.603126805478024*^9, 
   3.60312682927382*^9}, {3.60321993099708*^9, 3.603220170041568*^9}, {
   3.6032203951716614`*^9, 3.6032203963974752`*^9}, {3.6032221138655043`*^9, 
   3.6032221426769247`*^9}, {3.6032237678859653`*^9, 3.60322377727544*^9}, {
   3.6032566484388824`*^9, 3.6032566843918886`*^9}, {3.603256870980586*^9, 
   3.603256874928207*^9}, {3.603257302175415*^9, 3.603257317917254*^9}, {
   3.603257793872006*^9, 3.6032578094936314`*^9}, {3.6032579976996098`*^9, 
   3.6032580278106008`*^9}, {3.6032584487717915`*^9, 
   3.6032584591154633`*^9}, {3.603258531774593*^9, 3.603258536924677*^9}, 
   3.603332771173519*^9, 3.6033499060122824`*^9, {3.6033935220660257`*^9, 
   3.603393557072488*^9}, {3.603393889973872*^9, 3.603393898085887*^9}, {
   3.6036354375698805`*^9, 3.603635454346016*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Vector", " ", "initialization"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Ri", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "nodeRecord", "]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Element", " ", 
     RowBox[{"loop", ":", " ", 
      RowBox[{
      "establish", " ", "left", " ", "and", " ", "right", " ", "edge", " ", 
       "conditions"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "For", " ", "every", " ", "element", " ", "on", " ", "the", " ", "left", 
     " ", "input", " ", "edge", " ", "compute", " ", "Ri", " ", "for", " ", 
     "each", " ", "node", " ", "i"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"elt", "=", "1"}], ",", 
     RowBox[{"elt", "\[LessEqual]", "height"}], ",", 
     RowBox[{"elt", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Integral", " ", "of", " ", "left", " ", "edge"}], ";", " ", 
        RowBox[{
         RowBox[{"-", " ", "is"}], " ", "because", " ", "of", " ", "outward", 
         " ", "pointing", " ", "normal"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ri", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "+=", 
       RowBox[{"-", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{"inflow", "*", 
           RowBox[{"Ne", "[", 
            RowBox[{
            "1", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
             "\[Delta]", ",", "\[Alpha]", ",", "y"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "\[Beta]", ",", "\[Delta]"}], "}"}]}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ri", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "+=", 
       RowBox[{"-", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{"inflow", "*", 
           RowBox[{"Ne", "[", 
            RowBox[{
            "4", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
             "\[Delta]", ",", "\[Alpha]", ",", "y"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "\[Beta]", ",", "\[Delta]"}], "}"}]}], "]"}]}]}],
       ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "For", " ", "every", " ", "element", " ", "on", " ", "the", " ", "right", 
     " ", "input", " ", "edge", " ", "compute", " ", "Ri", " ", "for", " ", 
     "each", " ", "node", " ", "i"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"elt", "=", 
      RowBox[{"Length", "[", "elementRecord", "]"}]}], ",", 
     RowBox[{"elt", "\[GreaterEqual]", 
      RowBox[{
       RowBox[{"Length", "[", "elementRecord", "]"}], "-", "height", "+", 
       "1"}]}], ",", 
     RowBox[{"elt", "--"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Integral", " ", "of", " ", "right", " ", "edge"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ri", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "+=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"inflow", "*", 
          RowBox[{"Ne", "[", 
           RowBox[{
           "2", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
            "\[Delta]", ",", "\[Gamma]", ",", "y"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "\[Beta]", ",", "\[Delta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ri", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "+=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"inflow", "*", 
          RowBox[{"Ne", "[", 
           RowBox[{
           "3", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
            "\[Delta]", ",", "\[Gamma]", ",", "y"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "\[Beta]", ",", "\[Delta]"}], "}"}]}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.603045662649928*^9, 3.6030457795152597`*^9}, {
   3.6030561925974293`*^9, 3.603056257121262*^9}, {3.6030563070524054`*^9, 
   3.603056360830104*^9}, {3.603056735935525*^9, 3.603056756146939*^9}, {
   3.6030568205096617`*^9, 3.603056828726117*^9}, {3.603057023553442*^9, 
   3.6030570241268225`*^9}, {3.6030582872966595`*^9, 
   3.6030583202045035`*^9}, {3.6030583661832743`*^9, 
   3.6030584349279327`*^9}, {3.6030585323502607`*^9, 
   3.6030585350691156`*^9}, {3.6030585694145403`*^9, 3.603058580883835*^9}, {
   3.6030586219002657`*^9, 3.6030586241459637`*^9}, {3.6030587796937456`*^9, 
   3.6030588369934225`*^9}, {3.603073245647271*^9, 3.6030732496524024`*^9}, {
   3.6030734217130303`*^9, 3.603073427093602*^9}, {3.6030738199921355`*^9, 
   3.603073822178587*^9}, {3.6030741884521723`*^9, 3.6030743887013264`*^9}, {
   3.6030745002989836`*^9, 3.6030746969422135`*^9}, {3.603074764308982*^9, 
   3.6030748083132095`*^9}, {3.6030749198172894`*^9, 3.603075017912406*^9}, {
   3.6030751970739365`*^9, 3.6030753240774927`*^9}, {3.603075492568083*^9, 
   3.603075517521351*^9}, {3.603076890290168*^9, 3.603076904974331*^9}, {
   3.603130225459238*^9, 3.603130258055874*^9}, {3.6031303251928396`*^9, 
   3.603130345215309*^9}, {3.6031304085323095`*^9, 3.603130411134036*^9}, {
   3.6031318148871098`*^9, 3.60313190637584*^9}, {3.603131944530404*^9, 
   3.6031319507715473`*^9}, {3.6031321513968925`*^9, 3.603132200440447*^9}, {
   3.6031322368093853`*^9, 3.6031322414724793`*^9}, {3.603132284584935*^9, 
   3.603132307158184*^9}, {3.6031331090184455`*^9, 3.60313313427421*^9}, {
   3.603133166936287*^9, 3.603133207182002*^9}, {3.603133254983349*^9, 
   3.6031332685553565`*^9}, {3.6031333230677757`*^9, 3.603133329910319*^9}, {
   3.603133415471833*^9, 3.603133527878397*^9}, 3.6032200163639812`*^9, {
   3.60322037085245*^9, 3.603220374480155*^9}, {3.6032204183449273`*^9, 
   3.603220463833133*^9}, {3.603220531969656*^9, 3.6032206038740025`*^9}, {
   3.603220697620861*^9, 3.6032208979981256`*^9}, {3.6032209696977835`*^9, 
   3.6032209839547367`*^9}, {3.603221024655938*^9, 3.6032210252883587`*^9}, {
   3.6032220184843435`*^9, 3.6032220185253706`*^9}, {3.6032220639853215`*^9, 
   3.6032220923429375`*^9}, {3.6032236069115133`*^9, 3.6032236840168266`*^9}, 
   3.6032237535371284`*^9, {3.603223818212284*^9, 3.6032238712665014`*^9}, {
   3.6032239266542683`*^9, 3.6032240071701565`*^9}, {3.6032240413032465`*^9, 
   3.603224284280016*^9}, {3.603224366790885*^9, 3.603224415451868*^9}, {
   3.60325218889247*^9, 3.603252254262049*^9}, {3.6032527027414837`*^9, 
   3.6032527841566505`*^9}, {3.603252893152503*^9, 3.603253028281934*^9}, {
   3.603253387521574*^9, 3.6032534391476717`*^9}, {3.6032534842860537`*^9, 
   3.603253488026539*^9}, {3.6032535446813164`*^9, 3.6032535981200056`*^9}, {
   3.603253677036544*^9, 3.6032536778729167`*^9}, {3.6032538018974304`*^9, 
   3.603253821970518*^9}, {3.6032541436468635`*^9, 3.6032541654010477`*^9}, {
   3.6032543440077353`*^9, 3.6032544164298573`*^9}, {3.6032568800946345`*^9, 
   3.6032569078641634`*^9}, {3.603257768670434*^9, 3.60325778878463*^9}, {
   3.6032583948483686`*^9, 3.603258399748376*^9}, {3.6032587331140842`*^9, 
   3.6032587871627054`*^9}, {3.603324721638644*^9, 3.6033247381133337`*^9}, {
   3.6033262038769207`*^9, 3.6033262066921425`*^9}, {3.6033317901493206`*^9, 
   3.60333198839447*^9}, {3.603332047164193*^9, 3.6033321350609393`*^9}, {
   3.6033327809752226`*^9, 3.6033327902138166`*^9}, {3.6033451877409267`*^9, 
   3.603345203582905*^9}, {3.6033454530151205`*^9, 3.603345455583825*^9}, {
   3.603349552849245*^9, 3.6033496125938454`*^9}, {3.6033935689753084`*^9, 
   3.6033935923909492`*^9}, {3.603393665867079*^9, 3.6033936861315145`*^9}, 
   3.6033937969509087`*^9, 3.603393867494233*^9, {3.603393907539503*^9, 
   3.603393922328329*^9}, {3.6034085775325036`*^9, 3.603408589288306*^9}, {
   3.603414918565959*^9, 3.603414924124214*^9}, {3.603415874354394*^9, 
   3.603415876973133*^9}, {3.6034356926461906`*^9, 3.603435693380678*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Set", " ", "Dirichlet", " ", "condition", " ", "to", " ", "arrive", " ", 
     "at", " ", "an", " ", "analytical", " ", 
     RowBox[{"solution", ":", " ", 
      RowBox[{
      "place", " ", "the", " ", "identity", " ", "matrix", " ", "row", " ", 
       "at", " ", "some", " ", "node", " ", "entry", " ", "and", " ", 
       "similarly", " ", "replace", " ", "that", " ", "row", " ", "of", " ", 
       "R", " ", "with", " ", "what", " ", "we", " ", "desire"}], ":", " ", 
      RowBox[{"in", " ", "this", " ", "case"}]}]}], ",", " ", "zero"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DirichletRow", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "nodeRecord", "]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DirichletRow", "[", 
      RowBox[{"[", "origin", "]"}], "]"}], " ", "=", " ", "1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Kij", "[", 
      RowBox[{"[", "origin", "]"}], "]"}], "=", "DirichletRow"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ri", "[", 
      RowBox[{"[", "origin", "]"}], "]"}], "=", "0"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6030588504471726`*^9, 3.6030589201380496`*^9}, {
   3.6030756600788937`*^9, 3.6030757229690304`*^9}, {3.6031290111997466`*^9, 
   3.603129024562617*^9}, {3.603129538836345*^9, 3.603129563147482*^9}, {
   3.60313028197795*^9, 3.6031303076952243`*^9}, {3.6031303910819917`*^9, 
   3.603130393453568*^9}, {3.6031305537277403`*^9, 3.6031305592474065`*^9}, {
   3.6031306198024645`*^9, 3.6031306220679665`*^9}, {3.6031306751523542`*^9, 
   3.603130689150647*^9}, {3.6031319946478863`*^9, 3.603132121491664*^9}, {
   3.6031322637295675`*^9, 3.603132267122822*^9}, {3.603133183232105*^9, 
   3.6031331905009303`*^9}, {3.6032206165103655`*^9, 
   3.6032206350673018`*^9}, {3.603332942283098*^9, 3.6033329444758897`*^9}, {
   3.603333052997456*^9, 3.6033330552737384`*^9}, {3.603333463052002*^9, 
   3.603333465292197*^9}, {3.6033335066606865`*^9, 3.603333508163685*^9}, {
   3.603333580769364*^9, 3.603333584837912*^9}, {3.6033337098345222`*^9, 
   3.6033337126293783`*^9}, {3.603334635113429*^9, 3.603334665677768*^9}, {
   3.6033346958924785`*^9, 3.6033348320814304`*^9}, {3.603335266152067*^9, 
   3.6033352946244626`*^9}, 3.6034084877550325`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Solve", " ", "the", " ", "linear", " ", "system"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"Kij", ",", "Ri"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Postprocessing", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Flow", " ", "field"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vectorArray", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "elementRecord", "]"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Given", " ", "an", " ", "element"}], ",", " ", 
     RowBox[{
     "plot", " ", "the", " ", "vector", " ", "from", " ", "the", " ", 
      "centroid", " ", "of", " ", "the", " ", "element", " ", "given", " ", 
      "by", " ", 
      RowBox[{"\[Del]", "\[Phi]"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"elt", "=", "1"}], ",", 
     RowBox[{"elt", "\[LessEqual]", 
      RowBox[{"Length", "[", "elementRecord", "]"}]}], ",", 
     RowBox[{"elt", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "elt", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cx", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "\[Gamma]"}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cy", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Polynomial", " ", "interpolation", " ", "of", " ", "the", " ", 
        "vector", " ", "potential"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"getNodes", "[", "elt", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Ne", "[", 
           RowBox[{
           "i", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
            "\[Delta]", ",", "x", ",", "y"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"flow", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", " ", "cx"}], ",", 
          RowBox[{"y", "\[Rule]", " ", "cy"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vectorArray", "[", 
        RowBox[{"[", "elt", "]"}], "]"}], " ", "=", " ", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cx", ",", " ", "cy"}], "}"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cx", ",", "cy"}], "}"}], "+", 
           RowBox[{"flow", "*", "scale"}]}]}], "}"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Streamline", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotPoints", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "height"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "For", " ", "each", " ", "element", " ", "on", " ", "the", " ", "left", 
      " ", "edge"}], ",", " ", 
     RowBox[{"draw", " ", "a", " ", "streamline", " ", "across"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"lineIndex", "=", "1"}], ",", 
     RowBox[{"lineIndex", " ", "\[LessEqual]", "height"}], ",", 
     RowBox[{"lineIndex", "++"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lastElement", "=", 
       RowBox[{
        RowBox[{"Length", "[", "elementRecord", "]"}], "+", "1", "-", 
        "lineIndex"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "lastElement", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "lastElement", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"endx", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "\[Gamma]"}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"currentElement", "=", "lineIndex"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "lineIndex", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "lineIndex", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "lineIndex", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"getLocation", "[", 
         RowBox[{
          RowBox[{"getNodes", "[", "lineIndex", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Xi]", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "\[Gamma]"}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Eta]", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Iterate", " ", "from", " ", "left", " ", "to", " ", "right"}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"\[Xi]", "<", "endx"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"elt", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plotPoints", "[", 
           RowBox[{"[", "lineIndex", "]"}], "]"}], "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"plotPoints", "[", 
             RowBox[{"[", "lineIndex", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Xi]", ",", "\[Eta]"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "*", 
             RowBox[{"Ne", "[", 
              RowBox[{
              "i", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
               "\[Delta]", ",", "x", ",", "y"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[CapitalDelta]\[Xi]", ",", "\[CapitalDelta]\[Eta]"}], 
           "}"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[CapitalDelta]x", ",", "\[CapitalDelta]y"}], "}"}], 
            "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "\[Rule]", " ", "\[Xi]"}], ",", 
             RowBox[{"y", "\[Rule]", "\[Eta]"}]}], "}"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "}"}], "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Xi]", ",", "\[Eta]"}], "}"}], "+", 
           RowBox[{"{", 
            RowBox[{"\[CapitalDelta]\[Xi]", ",", "\[CapitalDelta]\[Eta]"}], 
            "}"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Continuing", " ", "the", " ", "streamline", " ", "through", " ", 
           "element", " ", "boundaries"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Xi]", ">", "\[Gamma]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Find", " ", "the", " ", "element", " ", "to", " ", "the", " ", 
             "right", " ", "of", " ", "this", " ", "one"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getNodes", "[", "elt", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
               RowBox[{
                RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"elt", ">", 
                  RowBox[{"Length", "[", "elementRecord", "]"}]}], ",", 
                 RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"elt", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"currentElement", "=", "elt"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Eta]", ">", "\[Delta]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Find", " ", "the", " ", "element", " ", "above", " ", "this", 
             " ", "one"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getNodes", "[", "elt", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
               RowBox[{
                RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"elt", ">", 
                  RowBox[{"Length", "[", "elementRecord", "]"}]}], ",", 
                 RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"elt", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"currentElement", "=", "elt"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Eta]", "<", "\[Beta]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Find", " ", "the", " ", "element", " ", "below", " ", "this", 
             " ", "one"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getNodes", "[", "elt", "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}], "\[NotEqual]", 
               RowBox[{
                RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"elt", ">", 
                  RowBox[{"Length", "[", "elementRecord", "]"}]}], ",", 
                 RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"elt", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"currentElement", "=", "elt"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Alpha]", "=", 
          RowBox[{
           RowBox[{"getLocation", "[", 
            RowBox[{
             RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Beta]", "=", 
          RowBox[{
           RowBox[{"getLocation", "[", 
            RowBox[{
             RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Gamma]", "=", 
          RowBox[{
           RowBox[{"getLocation", "[", 
            RowBox[{
             RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Delta]", "=", 
          RowBox[{
           RowBox[{"getLocation", "[", 
            RowBox[{
             RowBox[{"getNodes", "[", "currentElement", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Flow", " ", "field", " ", "plot"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"flowField", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", "Small", "]"}], ",", "vectorArray"}], 
         "}"}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".3", "]"}], ",", "lineArray"}], "}"}], 
        "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<flowfield.eps\>\"", ",", " ", "flowField"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"flowField", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Full"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Streamlines", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"streamLines", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".3", "]"}], ",", "lineArray"}], "}"}], 
        "]"}], ",", 
       RowBox[{"ListCurvePathPlot", "[", 
        RowBox[{"plotPoints", ",", " ", 
         RowBox[{"PlotStyle", " ", "\[Rule]", " ", "Blue"}]}], "]"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<streamlines.eps\>\"", ",", "streamLines"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"streamLines", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Full"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6030758477681847`*^9, 3.6030763730790052`*^9}, {
   3.6030765188207707`*^9, 3.603076616308505*^9}, {3.6030766490373006`*^9, 
   3.603076682452622*^9}, {3.6030767232436886`*^9, 3.6030767245645657`*^9}, {
   3.6030769712527246`*^9, 3.603077059728343*^9}, {3.6031261407338734`*^9, 
   3.603126151361929*^9}, {3.603126471358547*^9, 3.6031264753031597`*^9}, 
   3.60312895295183*^9, {3.603133377897358*^9, 3.603133378091487*^9}, 
   3.6032200232485523`*^9, {3.603222997460215*^9, 3.603223068835422*^9}, {
   3.6032231101692085`*^9, 3.603223180607932*^9}, {3.6032232437885*^9, 
   3.6032232740279827`*^9}, {3.6032234916955547`*^9, 3.603223500506402*^9}, 
   3.603223787349289*^9, {3.6032556789491253`*^9, 3.603255702659671*^9}, {
   3.603255760367837*^9, 3.6032558224605713`*^9}, {3.6032558613320704`*^9, 
   3.6032558704158716`*^9}, {3.603255967632055*^9, 3.6032559931063433`*^9}, {
   3.603256069071977*^9, 3.6032560777840347`*^9}, {3.6032561124553385`*^9, 
   3.6032561237248917`*^9}, {3.603256175791485*^9, 3.603256219119876*^9}, {
   3.603336974513192*^9, 3.6033370047087665`*^9}, {3.603344907983823*^9, 
   3.60334491378866*^9}, {3.6033449451912203`*^9, 3.6033449494552965`*^9}, {
   3.603345038481531*^9, 3.6033450397199645`*^9}, {3.603345116021186*^9, 
   3.6033451390450363`*^9}, {3.6033453203554535`*^9, 
   3.6033453209126005`*^9}, {3.603345537059307*^9, 3.6033457193252087`*^9}, {
   3.6033458286080227`*^9, 3.603345835309467*^9}, {3.6033458698998165`*^9, 
   3.6033466269704895`*^9}, {3.603346874948187*^9, 3.6033469075449953`*^9}, {
   3.603346975942505*^9, 3.6033471625927367`*^9}, {3.603347215186952*^9, 
   3.603347220261468*^9}, {3.603347258798665*^9, 3.603347260042492*^9}, {
   3.603347479753959*^9, 3.603347762498298*^9}, {3.603347814848559*^9, 
   3.6033478451904187`*^9}, {3.603347970492914*^9, 3.603347980250391*^9}, {
   3.603348107502554*^9, 3.6033481090986147`*^9}, 3.603348158294854*^9, {
   3.603348202954048*^9, 3.6033482040834618`*^9}, {3.6033482907323017`*^9, 
   3.603348333631606*^9}, {3.60334839632332*^9, 3.6033484031193447`*^9}, {
   3.603348459438919*^9, 3.6033484615783396`*^9}, 3.6033484934135075`*^9, {
   3.603348540595644*^9, 3.603348575094923*^9}, {3.603348637753474*^9, 
   3.603348678522275*^9}, {3.6033487180111012`*^9, 3.6033487182962914`*^9}, {
   3.603348761681396*^9, 3.603348809175091*^9}, {3.603348868404663*^9, 
   3.6033488981085463`*^9}, {3.603348930214325*^9, 3.6033490114707937`*^9}, {
   3.603349053037081*^9, 3.603349159697592*^9}, {3.6033492060842404`*^9, 
   3.6033492068857727`*^9}, 3.6033492381244583`*^9, {3.6033492763407726`*^9, 
   3.603349281606268*^9}, {3.6033889518471985`*^9, 3.6033889547176037`*^9}, {
   3.603389053356577*^9, 3.603389054417379*^9}, {3.603391447477182*^9, 
   3.6033914892072554`*^9}, {3.603391522669314*^9, 3.6033915918554354`*^9}, {
   3.6033916284062996`*^9, 3.603391727560074*^9}, {3.603391813403825*^9, 
   3.6033918223738403`*^9}, {3.603391921699215*^9, 3.603391925505622*^9}, {
   3.603392501209033*^9, 3.603392504017038*^9}, {3.6033925397723007`*^9, 
   3.6033925430015063`*^9}, {3.6033926325768633`*^9, 3.603392644439685*^9}, {
   3.6033929181889653`*^9, 3.603392927221381*^9}, {3.6033929866886854`*^9, 
   3.6033929956119013`*^9}, {3.603393180035425*^9, 3.603393214651886*^9}, {
   3.603393245773941*^9, 3.6033932526847525`*^9}, {3.6033933789669747`*^9, 
   3.603393383584583*^9}, {3.6033936938223276`*^9, 3.603393786576891*^9}, {
   3.6033939324683475`*^9, 3.603393953543984*^9}, {3.6033946491180058`*^9, 
   3.6033947626550055`*^9}, {3.6036366531072445`*^9, 
   3.6036366569527955`*^9}, {3.6036382632919874`*^9, 3.603638273656226*^9}, {
   3.603638305929573*^9, 3.6036383068481817`*^9}, {3.603639363887847*^9, 
   3.603639364009929*^9}, {3.60364052087152*^9, 3.603640577317151*^9}, {
   3.6036406285107603`*^9, 3.6036406332909327`*^9}, {3.6036406799652767`*^9, 
   3.60364071198055*^9}, {3.6036407721769342`*^9, 3.603640846276094*^9}, {
   3.6036409883609543`*^9, 3.6036409915951443`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Arrowheads[Small], 
    ArrowBox[{{-4.5, 0.25}, {-4.011620888324683, 0.25608401393850766`}}], 
    ArrowBox[{{-4.5, 0.75}, {-4.010359127575475, 0.7675783457357208}}], 
    ArrowBox[{{-4.5, 1.25}, {-4.0080049698028875`, 1.2771663975445007`}}], 
    ArrowBox[{{-4.5, 1.75}, {-4.004862781697399, 1.7838509582325668`}}], 
    ArrowBox[{{-4.5, 2.25}, {-4.001313237866962, 2.287027742282567}}], 
    ArrowBox[{{-4.5, 2.75}, {-3.9977486051921582`, 2.786482459661599}}], 
    ArrowBox[{{-4.5, 3.25}, {-3.9945209145823126`, 3.2824126346973963`}}], 
    ArrowBox[{{-4.5, 3.75}, {-3.9919010547161173`, 3.7753216745982336`}}], 
    ArrowBox[{{-4.5, 4.5}, {-3.9898342200035053`, 4.510791162308005}}], 
    ArrowBox[{{-3.5, 0.25}, {-3.0405906771511217`, 0.2591178270348622}}], 
    ArrowBox[{{-3.5, 0.75}, {-3.035988228963497, 0.7762729505130311}}], 
    ArrowBox[{{-3.5, 1.25}, {-3.02745907699723, 1.2902384122449004`}}], 
    ArrowBox[{{-3.5, 1.75}, {-3.016215375567513, 1.7995507226025766`}}], 
    ArrowBox[{{-3.5, 2.25}, {-3.0037524748918547`, 2.3033528669247483`}}], 
    ArrowBox[{{-3.5, 2.75}, {-2.9915414175807813`, 2.8017087149911726`}}], 
    ArrowBox[{{-3.5, 3.25}, {-2.9807691391164877`, 3.295186317516102}}], 
    ArrowBox[{{-3.5, 3.75}, {-2.9722550878169898`, 3.7848158141109147`}}], 
    ArrowBox[{{-3.5, 4.5}, {-2.965714278054536, 4.514651737026729}}], 
    ArrowBox[{{-2.5, 0.25}, {-2.0909256220427617`, 0.2676048831888157}}], 
    ArrowBox[{{-2.5, 0.75}, {-2.079436047570267, 0.7999699396793154}}], 
    ArrowBox[{{-2.5, 1.25}, {-2.0586511771388034`, 1.3251694678740786`}}], 
    ArrowBox[{{-2.5, 1.75}, {-2.0321694810539146`, 1.8400704620026098`}}], 
    ArrowBox[{{-2.5, 2.25}, {-2.003987081644448, 2.344123727694964}}], 
    ArrowBox[{{-2.5, 2.75}, {-1.977760162937745, 2.8378138062565097`}}], 
    ArrowBox[{{-2.5, 3.25}, {-1.9562565987446523`, 3.3236329115655368`}}], 
    ArrowBox[{{-2.5, 3.75}, {-1.9407350825133802`, 3.8044403551230213`}}], 
    ArrowBox[{{-2.5, 4.5}, {-1.93003938481752, 4.52207597397899}}], 
    ArrowBox[{{-1.5, 0.25}, {-1.1923446916505196`, 0.2854476113766683}}], 
    ArrowBox[{{-1.5, 0.75}, {-1.167816998826687, 0.8541617460841163}}], 
    ArrowBox[{{-1.5, 1.25}, {-1.1193230793368598`, 1.4095352413118598`}}], 
    ArrowBox[{{-1.5, 1.75}, {-1.054119058633606, 1.939076122141114}}], 
    ArrowBox[{{-1.5, 2.25}, {-0.9877016398715386, 2.434317703899527}}], 
    ArrowBox[{{-1.5, 2.75}, {-0.9353810898678445, 2.904714767472741}}], 
    ArrowBox[{{-1.5, 3.25}, {-0.902713750327516, 3.3650737578161474`}}], 
    ArrowBox[{{-1.5, 3.75}, {-0.8858748188121057, 3.8277204043657753`}}], 
    ArrowBox[{{-1.5, 4.5}, {-0.8773624421576307, 4.529644023707948}}], 
    ArrowBox[{{-0.75, 0.25}, {-0.5720718130581178, 0.30280235552465673`}}], 
    ArrowBox[{{-0.75, 0.75}, {-0.5460668873427639, 0.9118673132991468}}], 
    ArrowBox[{{-0.75, 1.25}, {-0.46244191493502496`, 1.5324424854842225`}}], 
    ArrowBox[{{-0.75, 1.75}, {-0.32393798185931877`, 2.0850808524509654`}}], 
    ArrowBox[{{-0.75, 2.25}, {-0.18416461302280052`, 2.5609211799503284`}}], 
    ArrowBox[{{-0.75, 2.75}, {-0.09949553574044212, 2.9674214687116867`}}], 
    ArrowBox[{{-0.75, 3.25}, {-0.07737781763656981, 3.3898194537617314`}}], 
    ArrowBox[{{-0.75, 3.75}, {-0.07637376113303163, 3.8376566279545505`}}], 
    ArrowBox[{{-0.75, 4.5}, {-0.07903483870906192, 4.53185774978002}}], 
    ArrowBox[{{-0.25, 0.25}, {-0.18780116814174036`, 0.3106889728806909}}], 
    ArrowBox[{{-0.25, 0.75}, {-0.175620068354868, 0.9421667214453391}}], 
    ArrowBox[{{-0.25, 1.25}, {-0.1480496428049588, 1.6133384752956783`}}], 
    ArrowBox[{{-0.25, 1.75}, {0.14908417871475643`, 2.439822617234931}}], 
    ArrowBox[{{-0.25, 2.25}, {0.48379876149531686`, 2.6806673667834415`}}], 
    ArrowBox[{{-0.25, 2.75}, {0.5186644454363638, 2.967210043101979}}], 
    ArrowBox[{{-0.25, 3.25}, {0.48697845752828184`, 3.380462609567229}}], 
    ArrowBox[{{-0.25, 3.75}, {0.4674277385248904, 3.828466809649199}}], 
    ArrowBox[{{-0.25, 4.5}, {0.4527586511988704, 4.52778757648167}}], 
    ArrowBox[{{0.25, 2.25}, {1.380875267675501, 2.5101739535592067`}}], 
    ArrowBox[{{0.25, 2.75}, {1.1132366975560806`, 2.9049305701478403`}}], 
    ArrowBox[{{0.25, 3.25}, {1.0454643453026835`, 3.3432837423598887`}}], 
    ArrowBox[{{0.25, 3.75}, {1.0042815480786762`, 3.804912160629141}}], 
    ArrowBox[{{0.25, 4.5}, {0.9780710762375633, 4.519125121408133}}], 
    ArrowBox[{{0.75, 2.25}, {1.7424727047561375`, 2.2672510776429977`}}], 
    ArrowBox[{{0.75, 2.75}, {1.6688428960545099`, 2.8065850672430015`}}], 
    ArrowBox[{{0.75, 3.25}, {1.578796703376787, 3.283810700333608}}], 
    ArrowBox[{{0.75, 3.75}, {1.525486275861919, 3.7698919779165467`}}], 
    ArrowBox[{{0.75, 4.5}, {1.4922007182183594`, 4.506887198022094}}], 
    ArrowBox[{{1.25, 2.25}, {2.242357261074571, 2.2328692943405333`}}], 
    ArrowBox[{{1.25, 2.75}, {2.1687642820818223`, 2.6937440628510894`}}], 
    ArrowBox[{{1.25, 3.25}, {2.078775905708323, 3.2166171356742974`}}], 
    ArrowBox[{{1.25, 3.75}, {2.0255216762544412`, 3.7305208856071075`}}], 
    ArrowBox[{{1.25, 4.5}, {1.9922904481840753`, 4.493314351319851}}], 
    ArrowBox[{{1.75, 2.25}, {2.880472716236062, 1.9900559534172744`}}], 
    ArrowBox[{{1.75, 2.75}, {2.6130028078113625`, 2.5954945163569}}], 
    ArrowBox[{{1.75, 3.25}, {2.545393260456816, 3.1572687584404404`}}], 
    ArrowBox[{{1.75, 3.75}, {2.5043993435560745`, 3.6956211164863415`}}], 
    ArrowBox[{{1.75, 4.5}, {2.4783659490151244`, 4.481131924574576}}], 
    ArrowBox[{{2.25, 0.25}, {2.312208762371202, 0.18930815908050613`}}], 
    ArrowBox[{{2.25, 0.75}, {2.324419867223384, 0.5577864230517338}}], 
    ArrowBox[{{2.25, 1.25}, {2.3519450620890487`, 0.8865239932022182}}], 
    ArrowBox[{{2.25, 1.75}, {2.648808051444532, 1.0602269080491498`}}], 
    ArrowBox[{{2.25, 2.25}, {2.98325106432502, 1.81959930439215}}], 
    ArrowBox[{{2.25, 2.75}, {3.018180040009025, 2.5334102326413297`}}], 
    ArrowBox[{{2.25, 3.25}, {2.986827934046201, 3.12039138883864}}], 
    ArrowBox[{{2.25, 3.75}, {2.9676740939132475`, 3.672350729054447}}], 
    ArrowBox[{{2.25, 4.5}, {2.9533425771853556`, 4.472584662656102}}], 
    ArrowBox[{{2.75, 0.25}, {2.9278543107869095`, 0.19742103075173345`}}], 
    ArrowBox[{{2.75, 0.75}, {2.954170239982443, 0.588200585428222}}], 
    ArrowBox[{{2.75, 1.25}, {3.0377542544453537`, 0.9672190401543053}}], 
    ArrowBox[{{2.75, 1.75}, {3.1755810676531997`, 1.414221663660392}}], 
    ArrowBox[{{2.75, 2.25}, {3.314685853728319, 1.9391523477365151`}}], 
    ArrowBox[{{2.75, 2.75}, {3.3994683029591726`, 2.533568614211823}}], 
    ArrowBox[{{2.75, 3.25}, {3.422338378863499, 3.1117509772096494`}}], 
    ArrowBox[{{2.75, 3.75}, {3.4241672446468145`, 3.6636661663337993`}}], 
    ArrowBox[{{2.75, 4.5}, {3.4219901898959235`, 4.468672658277034}}], 
    ArrowBox[{{3.25, 0.25}, {3.521132081022328, 0.20971157811503538`}}], 
    ArrowBox[{{3.25, 0.75}, {3.549708381916563, 0.6308022681546888}}], 
    ArrowBox[{{3.25, 1.25}, {3.608339200738272, 1.066832190712458}}], 
    ArrowBox[{{3.25, 1.75}, {3.689062164426435, 1.5331582899982479`}}], 
    ArrowBox[{{3.25, 2.25}, {3.770802890515776, 2.0410612335631195`}}], 
    ArrowBox[{{3.25, 2.75}, {3.8323332495295976`, 2.577972536629894}}], 
    ArrowBox[{{3.25, 3.25}, {3.8673270123319763`, 3.125210893498284}}], 
    ArrowBox[{{3.25, 3.75}, {3.882729153116424, 3.667437256612928}}], 
    ArrowBox[{{3.25, 4.5}, {3.8892829514136418`, 4.468975484910634}}], 
    ArrowBox[{{4., 0.25}, {4.364291669896245, 0.22516251270821552`}}], 
    ArrowBox[{{4., 0.75}, {4.38174955162384, 0.678843397910935}}], 
    ArrowBox[{{4., 1.25}, {4.414322219849424, 1.1425672162290885`}}], 
    ArrowBox[{{4., 1.75}, {4.456548773511004, 1.622599335492941}}], 
    ArrowBox[{{4., 2.25}, {4.500476377027878, 2.1212161211915155`}}], 
    ArrowBox[{{4., 2.75}, {4.538568158921839, 2.6355315718032415`}}], 
    ArrowBox[{{4., 3.25}, {4.566711654457358, 3.158932612198353}}], 
    ArrowBox[{{4., 3.75}, {4.584871143340904, 3.685436656464397}}], 
    ArrowBox[{{4., 4.5}, {4.596230246924552, 4.474611787717157}}], 
    ArrowBox[{{5., 0.25}, {5.433364796479841, 0.23825996603218869`}}], 
    ArrowBox[{{5., 0.75}, {5.441228918388433, 0.7163899518593349}}], 
    ArrowBox[{{5., 1.25}, {5.455671455797285, 1.199051073549561}}], 
    ArrowBox[{{5., 1.75}, {5.474472346272348, 1.688170366445756}}], 
    ArrowBox[{{5., 2.25}, {5.4950047945893115`, 2.1845651939063764`}}], 
    ArrowBox[{{5., 2.75}, {5.5147546094675, 2.6878656926326796`}}], 
    ArrowBox[{{5., 3.25}, {5.531748496385416, 3.1968732562757847`}}], 
    ArrowBox[{{5., 3.75}, {5.544789681806938, 3.7098973609971004`}}], 
    ArrowBox[{{5., 4.5}, {5.5544824760602545`, 4.4834333332877705`}}], 
    ArrowBox[{{6., 0.25}, {6.466522234459435, 0.2442343127102422}}], 
    ArrowBox[{{6., 0.75}, {6.470143637832072, 0.733386655743737}}], 
    ArrowBox[{{6., 1.25}, {6.476908268220706, 1.2244687052601302`}}], 
    ArrowBox[{{6., 1.75}, {6.485950532957611, 1.7184390451591245`}}], 
    ArrowBox[{{6., 2.25}, {6.496177849318261, 2.2158160445482347`}}], 
    ArrowBox[{{6., 2.75}, {6.506458796463509, 2.716676366037693}}], 
    ArrowBox[{{6., 3.25}, {6.515783344613618, 3.220699453006823}}], 
    ArrowBox[{{6., 3.75}, {6.523361856087005, 3.7273105580558807`}}], 
    ArrowBox[{{6., 4.5}, {6.529346770367356, 4.490404443292048}}], 
    ArrowBox[{{7., 0.25}, {7.483231249104744, 0.24700212873045224`}}], 
    ArrowBox[{{7., 0.75}, {7.484965305809694, 0.7413297598787008}}], 
    ArrowBox[{{7., 1.25}, {7.48823157319451, 1.236587396672066}}], 
    ArrowBox[{{7., 1.75}, {7.492658320349733, 1.7332583775314445`}}], 
    ArrowBox[{{7., 2.25}, {7.497759844339704, 2.2316543928771573`}}], 
    ArrowBox[{{7., 2.75}, {7.503003107282634, 2.731886437885124}}], 
    ArrowBox[{{7., 3.25}, {7.507872066831501, 3.2338763965573465`}}], 
    ArrowBox[{{7., 3.75}, {7.511917981810036, 3.737382467409204}}], 
    ArrowBox[{{7., 4.5}, {7.515180310815701, 4.494615731901401}}], 
    ArrowBox[{{8., 0.25}, {8.492220373749838, 0.2482998014378106}}], 
    ArrowBox[{{8., 0.75}, {8.493007479629759, 0.7450744123410855}}], 
    ArrowBox[{{8., 1.25}, {8.4944965616127, 1.2423534429451948`}}], 
    ArrowBox[{{8., 1.75}, {8.496528645793028, 1.7404099939294158`}}], 
    ArrowBox[{{8., 2.25}, {8.498891257586898, 2.23943104804687}}], 
    ArrowBox[{{8., 2.75}, {8.50134406769146, 2.739501928810391}}], 
    ArrowBox[{{8., 3.25}, {8.503645346810375, 3.2406013829676468`}}], 
    ArrowBox[{{8., 3.75}, {8.505575718103763, 3.7426100535427524`}}], 
    ArrowBox[{{8., 4.5}, {8.507145314598274, 4.496833864334802}}], 
    ArrowBox[{{9., 0.25}, {9.497738850354768, 0.24882089347831116`}}], 
    ArrowBox[{{9., 0.75}, {9.497965674856898, 0.7465811810646903}}], 
    ArrowBox[{{9., 1.25}, {9.498395529928262, 1.2446845483301958`}}], 
    ArrowBox[{{9., 1.75}, {9.498983723228344, 1.7433194435052357`}}], 
    ArrowBox[{{9., 2.25}, {9.499669960003946, 2.2426192956099955`}}], 
    ArrowBox[{{9., 2.75}, {9.500385155557863, 2.742649692564221}}], 
    ArrowBox[{{9., 3.25}, {9.50105878831582, 3.2434034429675656`}}], 
    ArrowBox[{{9., 3.75}, {9.501625813729847, 3.7448027869576617`}}], 
    ArrowBox[{{9., 4.5}, {9.502088297043292, 4.497769577435304}}]}, 
   {Opacity[0.3], 
    LineBox[{{-5, 0}, {-4., 0}, {-4., 0.5}, {-5, 0.5}, {-5, 0}}], 
    LineBox[{{-5, 0.5}, {-4., 0.5}, {-4., 1.}, {-5, 1.}, {-5, 0.5}}], 
    LineBox[{{-5, 1.}, {-4., 1.}, {-4., 1.5}, {-5, 1.5}, {-5, 1.}}], 
    LineBox[{{-5, 1.5}, {-4., 1.5}, {-4., 2.}, {-5, 2.}, {-5, 1.5}}], 
    LineBox[{{-5, 2.}, {-4., 2.}, {-4., 2.5}, {-5, 2.5}, {-5, 2.}}], 
    LineBox[{{-5, 2.5}, {-4., 2.5}, {-4., 3.}, {-5, 3.}, {-5, 2.5}}], 
    LineBox[{{-5, 3.}, {-4., 3.}, {-4., 3.5}, {-5, 3.5}, {-5, 3.}}], 
    LineBox[{{-5, 3.5}, {-4., 3.5}, {-4., 4.}, {-5, 4.}, {-5, 3.5}}], 
    LineBox[{{-5, 4.}, {-4., 4.}, {-4., 5.}, {-5, 5.}, {-5, 4.}}], 
    LineBox[{{-4., 0}, {-3., 0}, {-3., 0.5}, {-4., 0.5}, {-4., 0}}], 
    LineBox[{{-4., 0.5}, {-3., 0.5}, {-3., 1.}, {-4., 1.}, {-4., 0.5}}], 
    LineBox[{{-4., 1.}, {-3., 1.}, {-3., 1.5}, {-4., 1.5}, {-4., 1.}}], 
    LineBox[{{-4., 1.5}, {-3., 1.5}, {-3., 2.}, {-4., 2.}, {-4., 1.5}}], 
    LineBox[{{-4., 2.}, {-3., 2.}, {-3., 2.5}, {-4., 2.5}, {-4., 2.}}], 
    LineBox[{{-4., 2.5}, {-3., 2.5}, {-3., 3.}, {-4., 3.}, {-4., 2.5}}], 
    LineBox[{{-4., 3.}, {-3., 3.}, {-3., 3.5}, {-4., 3.5}, {-4., 3.}}], 
    LineBox[{{-4., 3.5}, {-3., 3.5}, {-3., 4.}, {-4., 4.}, {-4., 3.5}}], 
    LineBox[{{-4., 4.}, {-3., 4.}, {-3., 5.}, {-4., 5.}, {-4., 4.}}], 
    LineBox[{{-3., 0}, {-2., 0}, {-2., 0.5}, {-3., 0.5}, {-3., 0}}], 
    LineBox[{{-3., 0.5}, {-2., 0.5}, {-2., 1.}, {-3., 1.}, {-3., 0.5}}], 
    LineBox[{{-3., 1.}, {-2., 1.}, {-2., 1.5}, {-3., 1.5}, {-3., 1.}}], 
    LineBox[{{-3., 1.5}, {-2., 1.5}, {-2., 2.}, {-3., 2.}, {-3., 1.5}}], 
    LineBox[{{-3., 2.}, {-2., 2.}, {-2., 2.5}, {-3., 2.5}, {-3., 2.}}], 
    LineBox[{{-3., 2.5}, {-2., 2.5}, {-2., 3.}, {-3., 3.}, {-3., 2.5}}], 
    LineBox[{{-3., 3.}, {-2., 3.}, {-2., 3.5}, {-3., 3.5}, {-3., 3.}}], 
    LineBox[{{-3., 3.5}, {-2., 3.5}, {-2., 4.}, {-3., 4.}, {-3., 3.5}}], 
    LineBox[{{-3., 4.}, {-2., 4.}, {-2., 5.}, {-3., 5.}, {-3., 4.}}], 
    LineBox[{{-2., 0}, {-1., 0}, {-1., 0.5}, {-2., 0.5}, {-2., 0}}], 
    LineBox[{{-2., 0.5}, {-1., 0.5}, {-1., 1.}, {-2., 1.}, {-2., 0.5}}], 
    LineBox[{{-2., 1.}, {-1., 1.}, {-1., 1.5}, {-2., 1.5}, {-2., 1.}}], 
    LineBox[{{-2., 1.5}, {-1., 1.5}, {-1., 2.}, {-2., 2.}, {-2., 1.5}}], 
    LineBox[{{-2., 2.}, {-1., 2.}, {-1., 2.5}, {-2., 2.5}, {-2., 2.}}], 
    LineBox[{{-2., 2.5}, {-1., 2.5}, {-1., 3.}, {-2., 3.}, {-2., 2.5}}], 
    LineBox[{{-2., 3.}, {-1., 3.}, {-1., 3.5}, {-2., 3.5}, {-2., 3.}}], 
    LineBox[{{-2., 3.5}, {-1., 3.5}, {-1., 4.}, {-2., 4.}, {-2., 3.5}}], 
    LineBox[{{-2., 4.}, {-1., 4.}, {-1., 5.}, {-2., 5.}, {-2., 4.}}], 
    LineBox[{{-1., 0}, {-0.5, 0}, {-0.5, 0.5}, {-1., 0.5}, {-1., 0}}], 
    LineBox[{{-1., 0.5}, {-0.5, 0.5}, {-0.5, 1.}, {-1., 1.}, {-1., 0.5}}], 
    LineBox[{{-1., 1.}, {-0.5, 1.}, {-0.5, 1.5}, {-1., 1.5}, {-1., 1.}}], 
    LineBox[{{-1., 1.5}, {-0.5, 1.5}, {-0.5, 2.}, {-1., 2.}, {-1., 1.5}}], 
    LineBox[{{-1., 2.}, {-0.5, 2.}, {-0.5, 2.5}, {-1., 2.5}, {-1., 2.}}], 
    LineBox[{{-1., 2.5}, {-0.5, 2.5}, {-0.5, 3.}, {-1., 3.}, {-1., 2.5}}], 
    LineBox[{{-1., 3.}, {-0.5, 3.}, {-0.5, 3.5}, {-1., 3.5}, {-1., 3.}}], 
    LineBox[{{-1., 3.5}, {-0.5, 3.5}, {-0.5, 4.}, {-1., 4.}, {-1., 3.5}}], 
    LineBox[{{-1., 4.}, {-0.5, 4.}, {-0.5, 5.}, {-1., 5.}, {-1., 4.}}], 
    LineBox[{{-0.5, 0}, {0., 0}, {0., 0.5}, {-0.5, 0.5}, {-0.5, 0}}], 
    LineBox[{{-0.5, 0.5}, {0., 0.5}, {0., 1.}, {-0.5, 1.}, {-0.5, 0.5}}], 
    LineBox[{{-0.5, 1.}, {0., 1.}, {0., 1.5}, {-0.5, 1.5}, {-0.5, 1.}}], 
    LineBox[{{-0.5, 1.5}, {0., 1.5}, {0., 2.}, {-0.5, 2.}, {-0.5, 1.5}}], 
    LineBox[{{-0.5, 2.}, {0., 2.}, {0., 2.5}, {-0.5, 2.5}, {-0.5, 2.}}], 
    LineBox[{{-0.5, 2.5}, {0., 2.5}, {0., 3.}, {-0.5, 3.}, {-0.5, 2.5}}], 
    LineBox[{{-0.5, 3.}, {0., 3.}, {0., 3.5}, {-0.5, 3.5}, {-0.5, 3.}}], 
    LineBox[{{-0.5, 3.5}, {0., 3.5}, {0., 4.}, {-0.5, 4.}, {-0.5, 3.5}}], 
    LineBox[{{-0.5, 4.}, {0., 4.}, {0., 5.}, {-0.5, 5.}, {-0.5, 4.}}], 
    LineBox[{{0., 2.}, {0.5, 2.}, {0.5, 2.5}, {0., 2.5}, {0., 2.}}], 
    LineBox[{{0., 2.5}, {0.5, 2.5}, {0.5, 3.}, {0., 3.}, {0., 2.5}}], 
    LineBox[{{0., 3.}, {0.5, 3.}, {0.5, 3.5}, {0., 3.5}, {0., 3.}}], 
    LineBox[{{0., 3.5}, {0.5, 3.5}, {0.5, 4.}, {0., 4.}, {0., 3.5}}], 
    LineBox[{{0., 4.}, {0.5, 4.}, {0.5, 5.}, {0., 5.}, {0., 4.}}], 
    LineBox[{{0.5, 2.}, {1., 2.}, {1., 2.5}, {0.5, 2.5}, {0.5, 2.}}], 
    LineBox[{{0.5, 2.5}, {1., 2.5}, {1., 3.}, {0.5, 3.}, {0.5, 2.5}}], 
    LineBox[{{0.5, 3.}, {1., 3.}, {1., 3.5}, {0.5, 3.5}, {0.5, 3.}}], 
    LineBox[{{0.5, 3.5}, {1., 3.5}, {1., 4.}, {0.5, 4.}, {0.5, 3.5}}], 
    LineBox[{{0.5, 4.}, {1., 4.}, {1., 5.}, {0.5, 5.}, {0.5, 4.}}], 
    LineBox[{{1., 2.}, {1.5, 2.}, {1.5, 2.5}, {1., 2.5}, {1., 2.}}], 
    LineBox[{{1., 2.5}, {1.5, 2.5}, {1.5, 3.}, {1., 3.}, {1., 2.5}}], 
    LineBox[{{1., 3.}, {1.5, 3.}, {1.5, 3.5}, {1., 3.5}, {1., 3.}}], 
    LineBox[{{1., 3.5}, {1.5, 3.5}, {1.5, 4.}, {1., 4.}, {1., 3.5}}], 
    LineBox[{{1., 4.}, {1.5, 4.}, {1.5, 5.}, {1., 5.}, {1., 4.}}], 
    LineBox[{{1.5, 2.}, {2., 2.}, {2., 2.5}, {1.5, 2.5}, {1.5, 2.}}], 
    LineBox[{{1.5, 2.5}, {2., 2.5}, {2., 3.}, {1.5, 3.}, {1.5, 2.5}}], 
    LineBox[{{1.5, 3.}, {2., 3.}, {2., 3.5}, {1.5, 3.5}, {1.5, 3.}}], 
    LineBox[{{1.5, 3.5}, {2., 3.5}, {2., 4.}, {1.5, 4.}, {1.5, 3.5}}], 
    LineBox[{{1.5, 4.}, {2., 4.}, {2., 5.}, {1.5, 5.}, {1.5, 4.}}], 
    LineBox[{{2., 0}, {2.5, 0}, {2.5, 0.5}, {2., 0.5}, {2., 0}}], 
    LineBox[{{2., 0.5}, {2.5, 0.5}, {2.5, 1.}, {2., 1.}, {2., 0.5}}], 
    LineBox[{{2., 1.}, {2.5, 1.}, {2.5, 1.5}, {2., 1.5}, {2., 1.}}], 
    LineBox[{{2., 1.5}, {2.5, 1.5}, {2.5, 2.}, {2., 2.}, {2., 1.5}}], 
    LineBox[{{2., 2.}, {2.5, 2.}, {2.5, 2.5}, {2., 2.5}, {2., 2.}}], 
    LineBox[{{2., 2.5}, {2.5, 2.5}, {2.5, 3.}, {2., 3.}, {2., 2.5}}], 
    LineBox[{{2., 3.}, {2.5, 3.}, {2.5, 3.5}, {2., 3.5}, {2., 3.}}], 
    LineBox[{{2., 3.5}, {2.5, 3.5}, {2.5, 4.}, {2., 4.}, {2., 3.5}}], 
    LineBox[{{2., 4.}, {2.5, 4.}, {2.5, 5.}, {2., 5.}, {2., 4.}}], 
    LineBox[{{2.5, 0}, {3., 0}, {3., 0.5}, {2.5, 0.5}, {2.5, 0}}], 
    LineBox[{{2.5, 0.5}, {3., 0.5}, {3., 1.}, {2.5, 1.}, {2.5, 0.5}}], 
    LineBox[{{2.5, 1.}, {3., 1.}, {3., 1.5}, {2.5, 1.5}, {2.5, 1.}}], 
    LineBox[{{2.5, 1.5}, {3., 1.5}, {3., 2.}, {2.5, 2.}, {2.5, 1.5}}], 
    LineBox[{{2.5, 2.}, {3., 2.}, {3., 2.5}, {2.5, 2.5}, {2.5, 2.}}], 
    LineBox[{{2.5, 2.5}, {3., 2.5}, {3., 3.}, {2.5, 3.}, {2.5, 2.5}}], 
    LineBox[{{2.5, 3.}, {3., 3.}, {3., 3.5}, {2.5, 3.5}, {2.5, 3.}}], 
    LineBox[{{2.5, 3.5}, {3., 3.5}, {3., 4.}, {2.5, 4.}, {2.5, 3.5}}], 
    LineBox[{{2.5, 4.}, {3., 4.}, {3., 5.}, {2.5, 5.}, {2.5, 4.}}], 
    LineBox[{{3., 0}, {3.5, 0}, {3.5, 0.5}, {3., 0.5}, {3., 0}}], 
    LineBox[{{3., 0.5}, {3.5, 0.5}, {3.5, 1.}, {3., 1.}, {3., 0.5}}], 
    LineBox[{{3., 1.}, {3.5, 1.}, {3.5, 1.5}, {3., 1.5}, {3., 1.}}], 
    LineBox[{{3., 1.5}, {3.5, 1.5}, {3.5, 2.}, {3., 2.}, {3., 1.5}}], 
    LineBox[{{3., 2.}, {3.5, 2.}, {3.5, 2.5}, {3., 2.5}, {3., 2.}}], 
    LineBox[{{3., 2.5}, {3.5, 2.5}, {3.5, 3.}, {3., 3.}, {3., 2.5}}], 
    LineBox[{{3., 3.}, {3.5, 3.}, {3.5, 3.5}, {3., 3.5}, {3., 3.}}], 
    LineBox[{{3., 3.5}, {3.5, 3.5}, {3.5, 4.}, {3., 4.}, {3., 3.5}}], 
    LineBox[{{3., 4.}, {3.5, 4.}, {3.5, 5.}, {3., 5.}, {3., 4.}}], 
    LineBox[{{3.5, 0}, {4.5, 0}, {4.5, 0.5}, {3.5, 0.5}, {3.5, 0}}], 
    LineBox[{{3.5, 0.5}, {4.5, 0.5}, {4.5, 1.}, {3.5, 1.}, {3.5, 0.5}}], 
    LineBox[{{3.5, 1.}, {4.5, 1.}, {4.5, 1.5}, {3.5, 1.5}, {3.5, 1.}}], 
    LineBox[{{3.5, 1.5}, {4.5, 1.5}, {4.5, 2.}, {3.5, 2.}, {3.5, 1.5}}], 
    LineBox[{{3.5, 2.}, {4.5, 2.}, {4.5, 2.5}, {3.5, 2.5}, {3.5, 2.}}], 
    LineBox[{{3.5, 2.5}, {4.5, 2.5}, {4.5, 3.}, {3.5, 3.}, {3.5, 2.5}}], 
    LineBox[{{3.5, 3.}, {4.5, 3.}, {4.5, 3.5}, {3.5, 3.5}, {3.5, 3.}}], 
    LineBox[{{3.5, 3.5}, {4.5, 3.5}, {4.5, 4.}, {3.5, 4.}, {3.5, 3.5}}], 
    LineBox[{{3.5, 4.}, {4.5, 4.}, {4.5, 5.}, {3.5, 5.}, {3.5, 4.}}], 
    LineBox[{{4.5, 0}, {5.5, 0}, {5.5, 0.5}, {4.5, 0.5}, {4.5, 0}}], 
    LineBox[{{4.5, 0.5}, {5.5, 0.5}, {5.5, 1.}, {4.5, 1.}, {4.5, 0.5}}], 
    LineBox[{{4.5, 1.}, {5.5, 1.}, {5.5, 1.5}, {4.5, 1.5}, {4.5, 1.}}], 
    LineBox[{{4.5, 1.5}, {5.5, 1.5}, {5.5, 2.}, {4.5, 2.}, {4.5, 1.5}}], 
    LineBox[{{4.5, 2.}, {5.5, 2.}, {5.5, 2.5}, {4.5, 2.5}, {4.5, 2.}}], 
    LineBox[{{4.5, 2.5}, {5.5, 2.5}, {5.5, 3.}, {4.5, 3.}, {4.5, 2.5}}], 
    LineBox[{{4.5, 3.}, {5.5, 3.}, {5.5, 3.5}, {4.5, 3.5}, {4.5, 3.}}], 
    LineBox[{{4.5, 3.5}, {5.5, 3.5}, {5.5, 4.}, {4.5, 4.}, {4.5, 3.5}}], 
    LineBox[{{4.5, 4.}, {5.5, 4.}, {5.5, 5.}, {4.5, 5.}, {4.5, 4.}}], 
    LineBox[{{5.5, 0}, {6.5, 0}, {6.5, 0.5}, {5.5, 0.5}, {5.5, 0}}], 
    LineBox[{{5.5, 0.5}, {6.5, 0.5}, {6.5, 1.}, {5.5, 1.}, {5.5, 0.5}}], 
    LineBox[{{5.5, 1.}, {6.5, 1.}, {6.5, 1.5}, {5.5, 1.5}, {5.5, 1.}}], 
    LineBox[{{5.5, 1.5}, {6.5, 1.5}, {6.5, 2.}, {5.5, 2.}, {5.5, 1.5}}], 
    LineBox[{{5.5, 2.}, {6.5, 2.}, {6.5, 2.5}, {5.5, 2.5}, {5.5, 2.}}], 
    LineBox[{{5.5, 2.5}, {6.5, 2.5}, {6.5, 3.}, {5.5, 3.}, {5.5, 2.5}}], 
    LineBox[{{5.5, 3.}, {6.5, 3.}, {6.5, 3.5}, {5.5, 3.5}, {5.5, 3.}}], 
    LineBox[{{5.5, 3.5}, {6.5, 3.5}, {6.5, 4.}, {5.5, 4.}, {5.5, 3.5}}], 
    LineBox[{{5.5, 4.}, {6.5, 4.}, {6.5, 5.}, {5.5, 5.}, {5.5, 4.}}], 
    LineBox[{{6.5, 0}, {7.5, 0}, {7.5, 0.5}, {6.5, 0.5}, {6.5, 0}}], 
    LineBox[{{6.5, 0.5}, {7.5, 0.5}, {7.5, 1.}, {6.5, 1.}, {6.5, 0.5}}], 
    LineBox[{{6.5, 1.}, {7.5, 1.}, {7.5, 1.5}, {6.5, 1.5}, {6.5, 1.}}], 
    LineBox[{{6.5, 1.5}, {7.5, 1.5}, {7.5, 2.}, {6.5, 2.}, {6.5, 1.5}}], 
    LineBox[{{6.5, 2.}, {7.5, 2.}, {7.5, 2.5}, {6.5, 2.5}, {6.5, 2.}}], 
    LineBox[{{6.5, 2.5}, {7.5, 2.5}, {7.5, 3.}, {6.5, 3.}, {6.5, 2.5}}], 
    LineBox[{{6.5, 3.}, {7.5, 3.}, {7.5, 3.5}, {6.5, 3.5}, {6.5, 3.}}], 
    LineBox[{{6.5, 3.5}, {7.5, 3.5}, {7.5, 4.}, {6.5, 4.}, {6.5, 3.5}}], 
    LineBox[{{6.5, 4.}, {7.5, 4.}, {7.5, 5.}, {6.5, 5.}, {6.5, 4.}}], 
    LineBox[{{7.5, 0}, {8.5, 0}, {8.5, 0.5}, {7.5, 0.5}, {7.5, 0}}], 
    LineBox[{{7.5, 0.5}, {8.5, 0.5}, {8.5, 1.}, {7.5, 1.}, {7.5, 0.5}}], 
    LineBox[{{7.5, 1.}, {8.5, 1.}, {8.5, 1.5}, {7.5, 1.5}, {7.5, 1.}}], 
    LineBox[{{7.5, 1.5}, {8.5, 1.5}, {8.5, 2.}, {7.5, 2.}, {7.5, 1.5}}], 
    LineBox[{{7.5, 2.}, {8.5, 2.}, {8.5, 2.5}, {7.5, 2.5}, {7.5, 2.}}], 
    LineBox[{{7.5, 2.5}, {8.5, 2.5}, {8.5, 3.}, {7.5, 3.}, {7.5, 2.5}}], 
    LineBox[{{7.5, 3.}, {8.5, 3.}, {8.5, 3.5}, {7.5, 3.5}, {7.5, 3.}}], 
    LineBox[{{7.5, 3.5}, {8.5, 3.5}, {8.5, 4.}, {7.5, 4.}, {7.5, 3.5}}], 
    LineBox[{{7.5, 4.}, {8.5, 4.}, {8.5, 5.}, {7.5, 5.}, {7.5, 4.}}], 
    LineBox[{{8.5, 0}, {9.5, 0}, {9.5, 0.5}, {8.5, 0.5}, {8.5, 0}}], 
    LineBox[{{8.5, 0.5}, {9.5, 0.5}, {9.5, 1.}, {8.5, 1.}, {8.5, 0.5}}], 
    LineBox[{{8.5, 1.}, {9.5, 1.}, {9.5, 1.5}, {8.5, 1.5}, {8.5, 1.}}], 
    LineBox[{{8.5, 1.5}, {9.5, 1.5}, {9.5, 2.}, {8.5, 2.}, {8.5, 1.5}}], 
    LineBox[{{8.5, 2.}, {9.5, 2.}, {9.5, 2.5}, {8.5, 2.5}, {8.5, 2.}}], 
    LineBox[{{8.5, 2.5}, {9.5, 2.5}, {9.5, 3.}, {8.5, 3.}, {8.5, 2.5}}], 
    LineBox[{{8.5, 3.}, {9.5, 3.}, {9.5, 3.5}, {8.5, 3.5}, {8.5, 3.}}], 
    LineBox[{{8.5, 3.5}, {9.5, 3.5}, {9.5, 4.}, {8.5, 4.}, {8.5, 3.5}}], 
    LineBox[{{8.5, 4.}, {9.5, 4.}, {9.5, 5.}, {8.5, 5.}, {8.5, 4.}}]}},
  ImageSize->Full]], "Output",
 CellChangeTimes->{3.603641834375391*^9}],

Cell[BoxData["\<\"streamlines.eps\"\>"], "Output",
 CellChangeTimes->{3.6036418507887516`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0.3], 
    LineBox[{{-5, 0}, {-4., 0}, {-4., 0.5}, {-5, 0.5}, {-5, 0}}], 
    LineBox[{{-5, 0.5}, {-4., 0.5}, {-4., 1.}, {-5, 1.}, {-5, 0.5}}], 
    LineBox[{{-5, 1.}, {-4., 1.}, {-4., 1.5}, {-5, 1.5}, {-5, 1.}}], 
    LineBox[{{-5, 1.5}, {-4., 1.5}, {-4., 2.}, {-5, 2.}, {-5, 1.5}}], 
    LineBox[{{-5, 2.}, {-4., 2.}, {-4., 2.5}, {-5, 2.5}, {-5, 2.}}], 
    LineBox[{{-5, 2.5}, {-4., 2.5}, {-4., 3.}, {-5, 3.}, {-5, 2.5}}], 
    LineBox[{{-5, 3.}, {-4., 3.}, {-4., 3.5}, {-5, 3.5}, {-5, 3.}}], 
    LineBox[{{-5, 3.5}, {-4., 3.5}, {-4., 4.}, {-5, 4.}, {-5, 3.5}}], 
    LineBox[{{-5, 4.}, {-4., 4.}, {-4., 5.}, {-5, 5.}, {-5, 4.}}], 
    LineBox[{{-4., 0}, {-3., 0}, {-3., 0.5}, {-4., 0.5}, {-4., 0}}], 
    LineBox[{{-4., 0.5}, {-3., 0.5}, {-3., 1.}, {-4., 1.}, {-4., 0.5}}], 
    LineBox[{{-4., 1.}, {-3., 1.}, {-3., 1.5}, {-4., 1.5}, {-4., 1.}}], 
    LineBox[{{-4., 1.5}, {-3., 1.5}, {-3., 2.}, {-4., 2.}, {-4., 1.5}}], 
    LineBox[{{-4., 2.}, {-3., 2.}, {-3., 2.5}, {-4., 2.5}, {-4., 2.}}], 
    LineBox[{{-4., 2.5}, {-3., 2.5}, {-3., 3.}, {-4., 3.}, {-4., 2.5}}], 
    LineBox[{{-4., 3.}, {-3., 3.}, {-3., 3.5}, {-4., 3.5}, {-4., 3.}}], 
    LineBox[{{-4., 3.5}, {-3., 3.5}, {-3., 4.}, {-4., 4.}, {-4., 3.5}}], 
    LineBox[{{-4., 4.}, {-3., 4.}, {-3., 5.}, {-4., 5.}, {-4., 4.}}], 
    LineBox[{{-3., 0}, {-2., 0}, {-2., 0.5}, {-3., 0.5}, {-3., 0}}], 
    LineBox[{{-3., 0.5}, {-2., 0.5}, {-2., 1.}, {-3., 1.}, {-3., 0.5}}], 
    LineBox[{{-3., 1.}, {-2., 1.}, {-2., 1.5}, {-3., 1.5}, {-3., 1.}}], 
    LineBox[{{-3., 1.5}, {-2., 1.5}, {-2., 2.}, {-3., 2.}, {-3., 1.5}}], 
    LineBox[{{-3., 2.}, {-2., 2.}, {-2., 2.5}, {-3., 2.5}, {-3., 2.}}], 
    LineBox[{{-3., 2.5}, {-2., 2.5}, {-2., 3.}, {-3., 3.}, {-3., 2.5}}], 
    LineBox[{{-3., 3.}, {-2., 3.}, {-2., 3.5}, {-3., 3.5}, {-3., 3.}}], 
    LineBox[{{-3., 3.5}, {-2., 3.5}, {-2., 4.}, {-3., 4.}, {-3., 3.5}}], 
    LineBox[{{-3., 4.}, {-2., 4.}, {-2., 5.}, {-3., 5.}, {-3., 4.}}], 
    LineBox[{{-2., 0}, {-1., 0}, {-1., 0.5}, {-2., 0.5}, {-2., 0}}], 
    LineBox[{{-2., 0.5}, {-1., 0.5}, {-1., 1.}, {-2., 1.}, {-2., 0.5}}], 
    LineBox[{{-2., 1.}, {-1., 1.}, {-1., 1.5}, {-2., 1.5}, {-2., 1.}}], 
    LineBox[{{-2., 1.5}, {-1., 1.5}, {-1., 2.}, {-2., 2.}, {-2., 1.5}}], 
    LineBox[{{-2., 2.}, {-1., 2.}, {-1., 2.5}, {-2., 2.5}, {-2., 2.}}], 
    LineBox[{{-2., 2.5}, {-1., 2.5}, {-1., 3.}, {-2., 3.}, {-2., 2.5}}], 
    LineBox[{{-2., 3.}, {-1., 3.}, {-1., 3.5}, {-2., 3.5}, {-2., 3.}}], 
    LineBox[{{-2., 3.5}, {-1., 3.5}, {-1., 4.}, {-2., 4.}, {-2., 3.5}}], 
    LineBox[{{-2., 4.}, {-1., 4.}, {-1., 5.}, {-2., 5.}, {-2., 4.}}], 
    LineBox[{{-1., 0}, {-0.5, 0}, {-0.5, 0.5}, {-1., 0.5}, {-1., 0}}], 
    LineBox[{{-1., 0.5}, {-0.5, 0.5}, {-0.5, 1.}, {-1., 1.}, {-1., 0.5}}], 
    LineBox[{{-1., 1.}, {-0.5, 1.}, {-0.5, 1.5}, {-1., 1.5}, {-1., 1.}}], 
    LineBox[{{-1., 1.5}, {-0.5, 1.5}, {-0.5, 2.}, {-1., 2.}, {-1., 1.5}}], 
    LineBox[{{-1., 2.}, {-0.5, 2.}, {-0.5, 2.5}, {-1., 2.5}, {-1., 2.}}], 
    LineBox[{{-1., 2.5}, {-0.5, 2.5}, {-0.5, 3.}, {-1., 3.}, {-1., 2.5}}], 
    LineBox[{{-1., 3.}, {-0.5, 3.}, {-0.5, 3.5}, {-1., 3.5}, {-1., 3.}}], 
    LineBox[{{-1., 3.5}, {-0.5, 3.5}, {-0.5, 4.}, {-1., 4.}, {-1., 3.5}}], 
    LineBox[{{-1., 4.}, {-0.5, 4.}, {-0.5, 5.}, {-1., 5.}, {-1., 4.}}], 
    LineBox[{{-0.5, 0}, {0., 0}, {0., 0.5}, {-0.5, 0.5}, {-0.5, 0}}], 
    LineBox[{{-0.5, 0.5}, {0., 0.5}, {0., 1.}, {-0.5, 1.}, {-0.5, 0.5}}], 
    LineBox[{{-0.5, 1.}, {0., 1.}, {0., 1.5}, {-0.5, 1.5}, {-0.5, 1.}}], 
    LineBox[{{-0.5, 1.5}, {0., 1.5}, {0., 2.}, {-0.5, 2.}, {-0.5, 1.5}}], 
    LineBox[{{-0.5, 2.}, {0., 2.}, {0., 2.5}, {-0.5, 2.5}, {-0.5, 2.}}], 
    LineBox[{{-0.5, 2.5}, {0., 2.5}, {0., 3.}, {-0.5, 3.}, {-0.5, 2.5}}], 
    LineBox[{{-0.5, 3.}, {0., 3.}, {0., 3.5}, {-0.5, 3.5}, {-0.5, 3.}}], 
    LineBox[{{-0.5, 3.5}, {0., 3.5}, {0., 4.}, {-0.5, 4.}, {-0.5, 3.5}}], 
    LineBox[{{-0.5, 4.}, {0., 4.}, {0., 5.}, {-0.5, 5.}, {-0.5, 4.}}], 
    LineBox[{{0., 2.}, {0.5, 2.}, {0.5, 2.5}, {0., 2.5}, {0., 2.}}], 
    LineBox[{{0., 2.5}, {0.5, 2.5}, {0.5, 3.}, {0., 3.}, {0., 2.5}}], 
    LineBox[{{0., 3.}, {0.5, 3.}, {0.5, 3.5}, {0., 3.5}, {0., 3.}}], 
    LineBox[{{0., 3.5}, {0.5, 3.5}, {0.5, 4.}, {0., 4.}, {0., 3.5}}], 
    LineBox[{{0., 4.}, {0.5, 4.}, {0.5, 5.}, {0., 5.}, {0., 4.}}], 
    LineBox[{{0.5, 2.}, {1., 2.}, {1., 2.5}, {0.5, 2.5}, {0.5, 2.}}], 
    LineBox[{{0.5, 2.5}, {1., 2.5}, {1., 3.}, {0.5, 3.}, {0.5, 2.5}}], 
    LineBox[{{0.5, 3.}, {1., 3.}, {1., 3.5}, {0.5, 3.5}, {0.5, 3.}}], 
    LineBox[{{0.5, 3.5}, {1., 3.5}, {1., 4.}, {0.5, 4.}, {0.5, 3.5}}], 
    LineBox[{{0.5, 4.}, {1., 4.}, {1., 5.}, {0.5, 5.}, {0.5, 4.}}], 
    LineBox[{{1., 2.}, {1.5, 2.}, {1.5, 2.5}, {1., 2.5}, {1., 2.}}], 
    LineBox[{{1., 2.5}, {1.5, 2.5}, {1.5, 3.}, {1., 3.}, {1., 2.5}}], 
    LineBox[{{1., 3.}, {1.5, 3.}, {1.5, 3.5}, {1., 3.5}, {1., 3.}}], 
    LineBox[{{1., 3.5}, {1.5, 3.5}, {1.5, 4.}, {1., 4.}, {1., 3.5}}], 
    LineBox[{{1., 4.}, {1.5, 4.}, {1.5, 5.}, {1., 5.}, {1., 4.}}], 
    LineBox[{{1.5, 2.}, {2., 2.}, {2., 2.5}, {1.5, 2.5}, {1.5, 2.}}], 
    LineBox[{{1.5, 2.5}, {2., 2.5}, {2., 3.}, {1.5, 3.}, {1.5, 2.5}}], 
    LineBox[{{1.5, 3.}, {2., 3.}, {2., 3.5}, {1.5, 3.5}, {1.5, 3.}}], 
    LineBox[{{1.5, 3.5}, {2., 3.5}, {2., 4.}, {1.5, 4.}, {1.5, 3.5}}], 
    LineBox[{{1.5, 4.}, {2., 4.}, {2., 5.}, {1.5, 5.}, {1.5, 4.}}], 
    LineBox[{{2., 0}, {2.5, 0}, {2.5, 0.5}, {2., 0.5}, {2., 0}}], 
    LineBox[{{2., 0.5}, {2.5, 0.5}, {2.5, 1.}, {2., 1.}, {2., 0.5}}], 
    LineBox[{{2., 1.}, {2.5, 1.}, {2.5, 1.5}, {2., 1.5}, {2., 1.}}], 
    LineBox[{{2., 1.5}, {2.5, 1.5}, {2.5, 2.}, {2., 2.}, {2., 1.5}}], 
    LineBox[{{2., 2.}, {2.5, 2.}, {2.5, 2.5}, {2., 2.5}, {2., 2.}}], 
    LineBox[{{2., 2.5}, {2.5, 2.5}, {2.5, 3.}, {2., 3.}, {2., 2.5}}], 
    LineBox[{{2., 3.}, {2.5, 3.}, {2.5, 3.5}, {2., 3.5}, {2., 3.}}], 
    LineBox[{{2., 3.5}, {2.5, 3.5}, {2.5, 4.}, {2., 4.}, {2., 3.5}}], 
    LineBox[{{2., 4.}, {2.5, 4.}, {2.5, 5.}, {2., 5.}, {2., 4.}}], 
    LineBox[{{2.5, 0}, {3., 0}, {3., 0.5}, {2.5, 0.5}, {2.5, 0}}], 
    LineBox[{{2.5, 0.5}, {3., 0.5}, {3., 1.}, {2.5, 1.}, {2.5, 0.5}}], 
    LineBox[{{2.5, 1.}, {3., 1.}, {3., 1.5}, {2.5, 1.5}, {2.5, 1.}}], 
    LineBox[{{2.5, 1.5}, {3., 1.5}, {3., 2.}, {2.5, 2.}, {2.5, 1.5}}], 
    LineBox[{{2.5, 2.}, {3., 2.}, {3., 2.5}, {2.5, 2.5}, {2.5, 2.}}], 
    LineBox[{{2.5, 2.5}, {3., 2.5}, {3., 3.}, {2.5, 3.}, {2.5, 2.5}}], 
    LineBox[{{2.5, 3.}, {3., 3.}, {3., 3.5}, {2.5, 3.5}, {2.5, 3.}}], 
    LineBox[{{2.5, 3.5}, {3., 3.5}, {3., 4.}, {2.5, 4.}, {2.5, 3.5}}], 
    LineBox[{{2.5, 4.}, {3., 4.}, {3., 5.}, {2.5, 5.}, {2.5, 4.}}], 
    LineBox[{{3., 0}, {3.5, 0}, {3.5, 0.5}, {3., 0.5}, {3., 0}}], 
    LineBox[{{3., 0.5}, {3.5, 0.5}, {3.5, 1.}, {3., 1.}, {3., 0.5}}], 
    LineBox[{{3., 1.}, {3.5, 1.}, {3.5, 1.5}, {3., 1.5}, {3., 1.}}], 
    LineBox[{{3., 1.5}, {3.5, 1.5}, {3.5, 2.}, {3., 2.}, {3., 1.5}}], 
    LineBox[{{3., 2.}, {3.5, 2.}, {3.5, 2.5}, {3., 2.5}, {3., 2.}}], 
    LineBox[{{3., 2.5}, {3.5, 2.5}, {3.5, 3.}, {3., 3.}, {3., 2.5}}], 
    LineBox[{{3., 3.}, {3.5, 3.}, {3.5, 3.5}, {3., 3.5}, {3., 3.}}], 
    LineBox[{{3., 3.5}, {3.5, 3.5}, {3.5, 4.}, {3., 4.}, {3., 3.5}}], 
    LineBox[{{3., 4.}, {3.5, 4.}, {3.5, 5.}, {3., 5.}, {3., 4.}}], 
    LineBox[{{3.5, 0}, {4.5, 0}, {4.5, 0.5}, {3.5, 0.5}, {3.5, 0}}], 
    LineBox[{{3.5, 0.5}, {4.5, 0.5}, {4.5, 1.}, {3.5, 1.}, {3.5, 0.5}}], 
    LineBox[{{3.5, 1.}, {4.5, 1.}, {4.5, 1.5}, {3.5, 1.5}, {3.5, 1.}}], 
    LineBox[{{3.5, 1.5}, {4.5, 1.5}, {4.5, 2.}, {3.5, 2.}, {3.5, 1.5}}], 
    LineBox[{{3.5, 2.}, {4.5, 2.}, {4.5, 2.5}, {3.5, 2.5}, {3.5, 2.}}], 
    LineBox[{{3.5, 2.5}, {4.5, 2.5}, {4.5, 3.}, {3.5, 3.}, {3.5, 2.5}}], 
    LineBox[{{3.5, 3.}, {4.5, 3.}, {4.5, 3.5}, {3.5, 3.5}, {3.5, 3.}}], 
    LineBox[{{3.5, 3.5}, {4.5, 3.5}, {4.5, 4.}, {3.5, 4.}, {3.5, 3.5}}], 
    LineBox[{{3.5, 4.}, {4.5, 4.}, {4.5, 5.}, {3.5, 5.}, {3.5, 4.}}], 
    LineBox[{{4.5, 0}, {5.5, 0}, {5.5, 0.5}, {4.5, 0.5}, {4.5, 0}}], 
    LineBox[{{4.5, 0.5}, {5.5, 0.5}, {5.5, 1.}, {4.5, 1.}, {4.5, 0.5}}], 
    LineBox[{{4.5, 1.}, {5.5, 1.}, {5.5, 1.5}, {4.5, 1.5}, {4.5, 1.}}], 
    LineBox[{{4.5, 1.5}, {5.5, 1.5}, {5.5, 2.}, {4.5, 2.}, {4.5, 1.5}}], 
    LineBox[{{4.5, 2.}, {5.5, 2.}, {5.5, 2.5}, {4.5, 2.5}, {4.5, 2.}}], 
    LineBox[{{4.5, 2.5}, {5.5, 2.5}, {5.5, 3.}, {4.5, 3.}, {4.5, 2.5}}], 
    LineBox[{{4.5, 3.}, {5.5, 3.}, {5.5, 3.5}, {4.5, 3.5}, {4.5, 3.}}], 
    LineBox[{{4.5, 3.5}, {5.5, 3.5}, {5.5, 4.}, {4.5, 4.}, {4.5, 3.5}}], 
    LineBox[{{4.5, 4.}, {5.5, 4.}, {5.5, 5.}, {4.5, 5.}, {4.5, 4.}}], 
    LineBox[{{5.5, 0}, {6.5, 0}, {6.5, 0.5}, {5.5, 0.5}, {5.5, 0}}], 
    LineBox[{{5.5, 0.5}, {6.5, 0.5}, {6.5, 1.}, {5.5, 1.}, {5.5, 0.5}}], 
    LineBox[{{5.5, 1.}, {6.5, 1.}, {6.5, 1.5}, {5.5, 1.5}, {5.5, 1.}}], 
    LineBox[{{5.5, 1.5}, {6.5, 1.5}, {6.5, 2.}, {5.5, 2.}, {5.5, 1.5}}], 
    LineBox[{{5.5, 2.}, {6.5, 2.}, {6.5, 2.5}, {5.5, 2.5}, {5.5, 2.}}], 
    LineBox[{{5.5, 2.5}, {6.5, 2.5}, {6.5, 3.}, {5.5, 3.}, {5.5, 2.5}}], 
    LineBox[{{5.5, 3.}, {6.5, 3.}, {6.5, 3.5}, {5.5, 3.5}, {5.5, 3.}}], 
    LineBox[{{5.5, 3.5}, {6.5, 3.5}, {6.5, 4.}, {5.5, 4.}, {5.5, 3.5}}], 
    LineBox[{{5.5, 4.}, {6.5, 4.}, {6.5, 5.}, {5.5, 5.}, {5.5, 4.}}], 
    LineBox[{{6.5, 0}, {7.5, 0}, {7.5, 0.5}, {6.5, 0.5}, {6.5, 0}}], 
    LineBox[{{6.5, 0.5}, {7.5, 0.5}, {7.5, 1.}, {6.5, 1.}, {6.5, 0.5}}], 
    LineBox[{{6.5, 1.}, {7.5, 1.}, {7.5, 1.5}, {6.5, 1.5}, {6.5, 1.}}], 
    LineBox[{{6.5, 1.5}, {7.5, 1.5}, {7.5, 2.}, {6.5, 2.}, {6.5, 1.5}}], 
    LineBox[{{6.5, 2.}, {7.5, 2.}, {7.5, 2.5}, {6.5, 2.5}, {6.5, 2.}}], 
    LineBox[{{6.5, 2.5}, {7.5, 2.5}, {7.5, 3.}, {6.5, 3.}, {6.5, 2.5}}], 
    LineBox[{{6.5, 3.}, {7.5, 3.}, {7.5, 3.5}, {6.5, 3.5}, {6.5, 3.}}], 
    LineBox[{{6.5, 3.5}, {7.5, 3.5}, {7.5, 4.}, {6.5, 4.}, {6.5, 3.5}}], 
    LineBox[{{6.5, 4.}, {7.5, 4.}, {7.5, 5.}, {6.5, 5.}, {6.5, 4.}}], 
    LineBox[{{7.5, 0}, {8.5, 0}, {8.5, 0.5}, {7.5, 0.5}, {7.5, 0}}], 
    LineBox[{{7.5, 0.5}, {8.5, 0.5}, {8.5, 1.}, {7.5, 1.}, {7.5, 0.5}}], 
    LineBox[{{7.5, 1.}, {8.5, 1.}, {8.5, 1.5}, {7.5, 1.5}, {7.5, 1.}}], 
    LineBox[{{7.5, 1.5}, {8.5, 1.5}, {8.5, 2.}, {7.5, 2.}, {7.5, 1.5}}], 
    LineBox[{{7.5, 2.}, {8.5, 2.}, {8.5, 2.5}, {7.5, 2.5}, {7.5, 2.}}], 
    LineBox[{{7.5, 2.5}, {8.5, 2.5}, {8.5, 3.}, {7.5, 3.}, {7.5, 2.5}}], 
    LineBox[{{7.5, 3.}, {8.5, 3.}, {8.5, 3.5}, {7.5, 3.5}, {7.5, 3.}}], 
    LineBox[{{7.5, 3.5}, {8.5, 3.5}, {8.5, 4.}, {7.5, 4.}, {7.5, 3.5}}], 
    LineBox[{{7.5, 4.}, {8.5, 4.}, {8.5, 5.}, {7.5, 5.}, {7.5, 4.}}], 
    LineBox[{{8.5, 0}, {9.5, 0}, {9.5, 0.5}, {8.5, 0.5}, {8.5, 0}}], 
    LineBox[{{8.5, 0.5}, {9.5, 0.5}, {9.5, 1.}, {8.5, 1.}, {8.5, 0.5}}], 
    LineBox[{{8.5, 1.}, {9.5, 1.}, {9.5, 1.5}, {8.5, 1.5}, {8.5, 1.}}], 
    LineBox[{{8.5, 1.5}, {9.5, 1.5}, {9.5, 2.}, {8.5, 2.}, {8.5, 1.5}}], 
    LineBox[{{8.5, 2.}, {9.5, 2.}, {9.5, 2.5}, {8.5, 2.5}, {8.5, 2.}}], 
    LineBox[{{8.5, 2.5}, {9.5, 2.5}, {9.5, 3.}, {8.5, 3.}, {8.5, 2.5}}], 
    LineBox[{{8.5, 3.}, {9.5, 3.}, {9.5, 3.5}, {8.5, 3.5}, {8.5, 3.}}], 
    LineBox[{{8.5, 3.5}, {9.5, 3.5}, {9.5, 4.}, {8.5, 4.}, {8.5, 3.5}}], 
    LineBox[{{8.5, 4.}, {9.5, 4.}, {9.5, 5.}, {8.5, 5.}, {8.5, 
     4.}}]}, {{}, {}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwkV3k4Vd/3vu41zzSSITNREklS6xCiQpTMQwqlFBUNpjIkpCJShuRDmTJG
KLVPyZjhXtc8z/M8z373+/zOP+d5n73XXmu9613rnC1id8fInkggEPYzEQj/
e///w4v//5sMxI3PntuLPPgpUyWrLToyXObZs7o1zoM3urfWbJLIYCF6wW2r
lwf/cmXacIuBDC48RrObzTx4ppD76DYTGRZwAefNGh688qtzBJGVDFo7skc2
SnjwackmI0Z2MvwZY7u2UcSD7/TOEmfjJEOVzOHu9SweXAGtsvBwk6E4V8B8
/RMPjs3kEffykmHJkdKwFkPDe3o59+8kQ4usvsFaGA9+RNX7kMxuMuA94ZWr
gTw4v82LK4p7ycB+I/70qhcPTnjBlnKKnwwCyfd+rtzjwWfK1unOCZBB34vr
2MoNHnx5l9UdUyEy0NXezV624cGlfORnHPaTIcIjTmbZmAePYL7n7y5KBvvr
r/5bOseDXy6UkgsUJwPVXWffkjoP/jxCb/idJBlOBlW8WTzGg+skDuSnS9P4
8+ViXzzIgxeMTUShA2R4clrQf0GMB19zcQhtkCPD7uzZ9Xk+HlxFzfDt2CEy
iKW9uDfPxYPHGmXk0imQgWHn1NgcAw9+6fvjPj5FWvzkXXZz69x42KMiCcWj
ZCjFSa2zs9z487c3PPWOkcG2osBgdpgbd90TMnT9OBnOVSqUzXRy48+IQtcC
TpBh8JOr2gyVG2ewFl387yQZQrEHudOV3Lj84XfvfwMZ/vPQkJ5G3LiOj49h
rzoZfI9T46byufF3hi0CRE0yvLCU2TGVzo07Zfy3LqZNBqFyzeeTCdw4+/uu
SW0dMkRZSGxORHHjtfwv5p3O0vSyUeU6EUrzdzyd/fV5MnwPOTo07seNs6yd
OP5NnwwiE9fMxx9x40rXTj3qvECGsW3T2rE73PiAV241w0Uy3Evl0Riz58Yf
671TlDem5f/vZf6oBTdu3jqdYWZChtNnyNKjhtz4uFTRiQAzMmgTmmJGztDi
hYWOHAsy+LfEc46c5MbrJBPCuq3IYJl78OmwIjdON4DMOG3JcNDFZ35Ihhv/
z+vC0VN2ZDBeiLAfEubGZdaMxO9cI4OiyO3mwV3cOI9tuWSCAxkkW1l1B9m4
8eb8DLWG6zQ+tpy+D9Bx45t0jA7MN8kQOCxgUjHNhTOeI/930pkM8wlP8aUO
LnykVl3N/Q4ZEu/ISktUceFtRoM+ua5k+O225+XFAi5c6OAP57l7ZHjUqjH3
NIkL988rYVB2J8MiSruUHcaFO2HbZ7we0uqrfz6/y5sL/yl9W6niMRkGUsV3
ctziwldKuf/t9iJD+vJh1xNmXLiE6zDbDR8ydFverr6hzYW3+80t/XpKhtSt
Vol3ilw4ZnrkxV5/Wn5EV6+y/Vw4i27yP7dnZPj04jB1gYMLf5hjmN/0nAzS
JbukxNY5cetJBd0TITT9VAk+MhzhxPeZ6QQmhpKBVKlV6dPIiccaRt7hek2G
tL7gPZl/OHErJT6iTzhN/yfHrnZkceLXbRpOzUWQ4cimbSZrHCduolAucSOK
DFd0JpZUgjnxCyxz3/rfkyH/dNBJxwecOPMZ47krsbR67DzqG3mNEy85O9vc
/4EMjt0Tf0sMOfGLbmWONxLIwF2VwTB3ihPfK92YMJdIBvfV+5r75ThxulLB
Zz6fyYDC4ak+HycekvlxJ3cqGbh+sBZ7MnLiv89Y6yWlkyE4irqQNs+Bn1y4
fFgtk+ZPL0q2tYcDl9ob8rM5m9b/dBdtmWo5cKW96wvuX8ng1Ep6c/QHB55m
ltzE940M66ufS66mcOAWGq/t8ELa+vPjc2GRHHiqyrd3Tj/I0JZaKIT7cuB+
iXyP9v4iwy0/Ed2pOxy449h3UhVO06+qq6uAFQdu5xat4lNChqfzSVFnz3Lg
nBmFe1TKyHCmoejHw2MceMTaroSFCjIU0GV0fhbnwNPLcxvy/pFh9qPHZgMP
B/7e+1Xuw1raPGkW3UfaZscVgr+oYhTavK2MV1aYYMebjFmd2RrIEB87bWDT
yo4/0kvVbWui+XfncgwtY8ffdQaRv7SSwdBjw+PHV3Zc/d4XOr8OMgyTv74c
/ciOc3nydFp20+ZT7JH4PS/ZcTmHIjvVPjKIE90ztDzY8Qsfk8L3DZKBWdqj
6N51dvzPe+otwggZJo5ASYIxO27yR3t2ZIwMk2dQVZ0GO343eEu4cZKmrxcr
dZvy7DjD1fWVvzO0+SA+Ui8ryI6/+nnSs3CeVj/lEKoZKzsuzF6WmrVEBqPh
LkrgMhtu+DviadoqGV5Z9NTkD9DwhTRS6gYZwgpflPdT2PBmOabD6du0+SHW
+4sHseFy/9IZc4gUMPjd9hW+sOESH98FfmegABS4f3Z+z4ZLitTmljNTwOpA
7tuYZ2y46N/zz1vYKPAHgv0r77Hh0ds7mSc5KRAosHFn2ZYN/3BW6ggDLwVK
B+nNJPTZ8H8C/owiuygQgSfAxRNsuN6UbAC2lwLs9XViT6XZ8K5jwplX91FA
E14wZO1iw8vvWj8NFqLAxYMNAx1ENrx779hWnggFLvxO+s06w4qHJP2R7Ben
gNH+9RiVTlYcvR5Z2SlNgdt3Gu45VLHim6aWbmdlKfCdelA3ooAVN34kFOt3
iALn7tIL/ElixR1uyzvjChRQdjGemA5jxa3yX40QjlLg9Zzgd0EfVnzxH3Bq
qVDAWcgi4NwtVvzhYazrxQkK9Oxl1X9kxor/uhJm2nKKApuM0juTtVnxQ92K
XlIaFGjmyG1uUGTFi6Wlzz/WosATo0/viCKs+Piv26VkHQqwrm1dPszJiteI
Mo8eOE/jS6aY13qdBSc2LXx7bkABFsa2fyEjLHiB+VH5MSMKJOQZ+xY1suBp
ilWGBpcpYGMupzz8hwWXGPgqVGhG40fAYnhnNgtONzMXKW5FgVDh7kiNOBb8
U3tgQYQtBQSD8tVdgllwZrl7fszXKMDj3T4W94AFz3TIX/VxpMBDMf2wf9dY
8FQeA/51JwrYfmA9umrIgkd/xQYf3abls4OzSRJY8GxqsPmGKwXGUozvX5Kj
7V89+NjXjQLJvl1cvnwsOCXjgCb7IwrwlX1KyWKk5fPoaeF7TwrovUs51TnP
jH8aONJ84AkF9IUGKKy9zHj2Y/iI/Cgg7WVsp1LLjKeWJu8wDaTAUOvqtP0P
Zjzpwi2FhWAKhJvVPn6TwoyfTg5dffOSVi8RMvF3JDP+zZj91rFwCrQbbwRO
+TLjxSMjz7siKRAicIFVwIUZ/29S7ELQe5q/6IogXSua/dzP38fiKHBwwY7x
wVlmnCWgoHP0IwXkDQSeJB1jxieUeJLikyhgSZ5doogz4/fC/u00S6HAj9ge
p20eZjz3wLD87i80vbUOtsttM+F6YdcWm7IokEdJZrw+xYRfWaJ+ivlKgfib
XTKJnUz4+6GB79cLaHy2PtTqqmbCk6RjlE79oMBJPQczvmIm/F3IGq8AotDm
caT9pXQmfGmI8TKxhALq3Ms3XkUz4Sn8fzdnyihQW/LQoSqICSdwKbOOVNH6
Q5vVguERE/49z9ZjuJbWf5XRZ7DrTPg6vY7hdD3N3xM+OQ8TJtyQbiZku4kC
h2LdmL9pM+F5Xy1l97ZTQNHgQ8fMUSbc71C4/PFuCtz555siK8GEB72IeGfX
T4FWDd5bDjuZ8JUZR4eIYZrehk9IJZCY8FuB3O9rxykwMjbV2j7HiI/7hR/m
maHx4cPvv7uPEe8XnZOzXKDAvaYMCUMKI34wVfFl1goF9oq++xWCM+Is1ywu
sW1SgCGiQr8sixEXTXX2uUNXD0tWh5oI8Yz4i6bbXB0M9fAhp/DSiZeM+F+j
q/SGrPWQjF+ucvNixHNeGFjXctZDbvGycvYtRvy/9WOCl3bUg2lzcPSYBSNu
KCyi3renHqQ1thfEzzHivT5cVQ8F6iH1kKa2jSoj3pXBVLhHpB5ManVevpdh
xE9pcLIhCdr5RhvV1L2MuG2XVMntA/VAmtQjcjIz4uxyZj2S8vVQUyt3SGeZ
AXfr/Gw3rFgPVjLPL/gOMeDHMnadzVapB7pDBjeKGxnwy9Zpb5+erIctDteH
S38ZcI3iGzoWGvXwaq3D63AeA06NNrU5eaYehsR9HzklMuDnmjzapc7Xg+wv
g5tJ4TT7iy3F/Ib14LWsdLHrKQPOvH2XtPtyPUzTiSjsdWXAe2svZPFZ1MML
ThKDkS0DXoW74xK29XBJv6o2xIAB39U+qqxqXw+n5uxflp5iwL3ksnhNnOpB
Wbb09PZBBlym+t9Fzzv1IHSgeUpFkAFPadVcS71Py0845NVddgZ83lOYsedR
PfCcJEt8WafHbw/ZPhDyqYeM3MicwTF6fFCfU9/evx7Mc6qOCLfR46+X5YLz
guqh9IZ1qmklPc554I8s+6t6CGfHdoUX0uM3VahHbkXQ9ldZu/9Lpsf3ednH
N7yvh3RqajV9FD2+Ye7tqhVfD8xm3HtPPaPHL58US/2VVA9jwU9NH7jR4x1R
ZtpYWj38ej8Rmn2NHk8dktStyqqH4XyscPQiPa6Z+TrHMr8efnI5N4uepsc/
eMT6LH+n8dNsO25xhB7nHjD4Go3XQ+RJtoUIEXrcJiD7vHZZPXDetZit4abH
vzP8Pbf2rx5EPmH9jAR6vGjH6+xvlHqYYkyrhGkSbuPA7+HRXA9B5c+SHnaR
8L0/r6frdNbD+u6yezk1JLy4+4m6UH89YBImx8aKSfiLD9dPbozUg66ozLTo
FxKuWC8R3zdF239SNsYihoSXW/xyoCzUg0LK+RMRwSS8QlwlomKtHgpfe9ZV
PyLhIsLvpSoIVDCSSjNhuEHCJbWG95MZqZAf85d60pSEv30v/aSHnQohgj9O
u58h4dFSV7VWeang2uGZnKlMO58Y58LPR4U1ptWtIQkSzn+mg05TmArpdUJn
hXeR8I29UqtuElTYtOt8bkJPwuGT3+VsWSpYzor9eDVPxEVFVvjmFaggk9bb
U95HxM9XBZ8+pUKFwmKGtW0KEScPqVPDTlHB0NSHUeU3EZctFauc1KTCwS8n
GV2yibhWsbKE0TkqeAzLrybHE3EX2afDvwxp5x/X6u5+ScRvPGbhVjKlwiD5
VuEebyJuwtf0IceaCoKdkf4GzkS85snkm2P2VNh6kXU60JKIVyhcni69SQV3
rtTFX+eIeFb+7hzLu1RweOMavaRKxI0/HG1df0iFj2dWFA4dIOLLAUWOiT5U
GDeXK7bnI+InuVItLz6jAmFjQyWOmYifGGQtZAulQrCZWUrDMh3u/GPwUfUb
Kkj9d5iVfZgO/6mH/RcZTQVH+rvWp5vocG9bEQXHBCrUZrJ/elxKh9/GX0mq
p1CBXDfdmZNHhxdohPuKZVGhKZKVZTSRDp/6K6/F+Y0Kx+XPS+5/Q4fzHLxz
m+4nFbSrEo+a+NLhL26YbG2UUOFEJOHYS1c6XMl1eoHwjwo6vwwPlNrS4bqn
Txlx1FPh9b1nXBsGdPjD4bO7RVupINkfOnQE6PBmZwF16KECzwmTrBuH6PCR
qaL6a8NU0E2l3PgoSIe/DznwL3yKCgUWE7ua2enw085uByoXqXDsyduvHBsE
2vc1YYZpkwqRmkhDc5yAr9V+EzSgb4DXTcYlj9sIOOXfj5wPbA3QclX3aE4l
AVdiKvyyxNsAnPxB74YLCXhEQy6nCX8D/JWknxRMIeA1r742I5EG8ClIPXIp
ioBLx/1mUpBpgK+r128EPyPgpjcGPqQdboByfoUw3I2Ae9wQi5NTaQBendnU
pWsEXHDfM2IBNEBH5ruvcpdo/uh31umeaQAbz92ZdqcJuMjXBuKgPs1fp9n7
d0cIeM6vurjnlxtAimDkVitCsy9j/6hk3QBvuKfU6XkIOKvrG5ZR+wagVxPc
Pk4g4EF3brZ9cm6AOus4s+6ubbTrcSzvTbcGUGPl4Qkq3UaRae4XMa8GiEO6
L4582UZG/7x/iwTQ4usarWoP30amtRRLrlBafCVvqv0fbaPc+hcSLJENYFk7
+vqg7TZyEq/ZxxVH22/+ck+T9jYKUcumzZIGiPkjZut9cBsJ/74YBhkNkGN3
3kly5zY6EtDI7ZRPiz8i7Wjt2hYiP7/46+PPBhjP6vnt1ruFGFfH3/eXNgCJ
M4xTsGILDcr/TDxS2wDBDNb7/mZuIZ+8wfbQJtp5E6PDTpFbaETVX2OxqwF+
7W2+x+O5hY4nFTRfH24A5q7yXwV2W+jl1oeYkekGWHllXWGlu4WYAsxe3l9p
AKanJ1+TDm+hinjGbHa6RigmMu1O3b2F1vtLCTksjZBub2Wmv7mJyDsKnlzh
bYT7q31m8/2byFNoTV5oXyOUsKvueVe1iVT3Z3EOizXC2Un6MLWcTaRntyRQ
LNcIZcODZT1Rm2jLfMY87mgjrJzxKfT33kTxGT8rgk81QrLpPXtp+00UfMDH
wf9MI3y4eq3m37lNJFpnrBR8oRFScxambx/ZRNRSuyOxZo3wNrismodvE/E6
lNt+t2sExaOeV/O2N5CN0ic0cLMRzi8XfL08tIE0+wQN9rnR7HcJ/Fyp3kAm
+he5rL0bgavhrE/01w103N+RkBHYCGpuQ6snojdQVLGnKHNYI4yohsl1PtlA
slb5bneiG+G3/eRub8cNVLyiuNaX2Ai3jsYVCulvIGGDfdl2GY3gP6LBg5Q2
kLLey6ipb40QWfxkv82+DTTPnp39DG8E4amVwS26DXS5MXH9QFUjhBfqXfkw
so7u8Ic+bKc2gt5lkfCTdevI2uuV1LtOWv6E3Q878tfRpepa5ivDjYCma3g9
YtdROPGOgPJsIzSZj1/h81tHt3Qi7PasN8LcA277ghvrSGferp2eoQnYPbv3
GV9YR/EB28+2OJuAGLMWMKe8jjYyX9rT8zVBNBN94ivBdbR17uiD3WJN4D0f
d1eOfh2ZOewtVjrYBCdeOS1UjK2hRiUrJZtjTYCxskvbU9aQ4T6Znkj1JugM
F+egK1xDeFoCajlHW798OTH2wxqSS5iol7rcBG5PTo8dC1hD30bl+f1sm8Be
7WVv/c01FBUbFjnm1AQNX1ueOxutof3bx7Ss3ZrAhqu0m+n4GvrupyvT5dME
Xu6LgwnCa2i4ckLdKbgJHnOxx5xgXEOaH3ReESNpeDttq2FiFQWu+fEkxzfB
Paf73Lepq+gpQ1mFSVoTyN9jJTN+X0XCO5Tzd+Y3ge4JrpPxH1eRU9J6Uydq
goP94ibHAlfRM8dTh75WNcHu4EnBOudVVHBM8kdEI40/fbYwh0uryFKw3cu3
pwkGzu3P3lRdRfN6Ae6e402gFl/7OEJkFfHJ6X3yXaLFa1c4c4B5FYWcsWCN
pGuGlkwfnt9TK0jSquXTV/Zm0Iot67jcuIKGLk8+6NrTDE/U5Y0mfqyg0XMl
T3aJNQNrnoXr0/9WkMsTP9z0UDNIMU8d3x20gjrsTY6lHG+GjgvP09PurKCv
0dcHSVrNMBVfXXrq8gr6MNZTdfNCM/QwWD2vV1tBTvpjw90WzTAf1j5nL7aC
mCcy1Wwdm0HcaIx+lWUFvdptVjlxtxkOXJT9FTKzjNT0d7wM8G4G94+YkFDz
MrqHMYccCG6Gw5rV4tk/lxEqt8PbI5vh2BkXinrSMqof1zv0PqEZhHJqxajB
yyiwd6HBLqMZDj0P2nfNdRn1sfrlqRQ1wxWKRuGCyTLiXhar4S9tBrvXsav+
p5aRkx1JmIXSDCHlKt07JZbRXWW9NFJnMww9KLqexLaMmoMO3mEdpcWXgEcq
zi2hex/JzoKLzVCoPmP/p2UJ6Y/bfVaja4HYy2MtF9ASimPm4bvO0QIh7Rem
uj4toT8lTGXxfC3QV1X66daLJXRh1/2MfokWSBIc31q9u4SYxPzqFI+0wKN/
dqvPzJZQK9jJvT7VAl+qaiN2YEtoePzU35WzLXCAm0KOl1xCAQ3aUc4mLfD0
FVuGLMcSUmlI/jR1tQW6VPfLFMwvosK5V9MeLi3AQcrR1GhbRDPXDrrt8mqB
B80229X4Itp+kan8I6gFhD/XmpokL6Lja+pKzm9bINEi/kJv6CKSurH7tmxi
CxzvvzfkdH8RPS8xH1jMaoFMySm+BfNFZLT/VFR1cQs4cGaPeaovotyS6WdZ
lS1g9tTClEF6EXEKx3/90NQCvPbhdqGci4hE8RCM7qfZxy0x71pcQDc+5f9N
mGmBNo4D52LbF5BhpGdq/mYLNLytlRb7s4CYygnVjaytYL/3WUJqygLa8fKu
HHFvKwy4zOXJv1pAx28S/6lKtIKSV75dvtsCesTem+xzpBXQXtc0VcsFxKsH
JWRohceC5SFIYwE9OaoveEivFbqvmjFqyiwg7/VT36LMW2H6TyVfBdcCYiae
fslxvRUOcX8vPbc0j8xaQz69cmuFJOFqlrqOeTR16tyGoF8rtJckDBqWzKMA
wa/hha9puKbDtCF1HgmHLl63+dAKBzmEr15+PY8IVE0f3i+t0GTASt/iPo9y
rlAbKUWtYGKHnTCzmkdbLdRbceWtkMl1lbnt9DxaY3ik6dbYChdEdt40PzCP
NvsWLc36W+GAzaJdG/c8+hzl9U13thUSXqVMmy3Poc6Hpw21t1vh1YM67tbO
OURh9jhowNEGGm1sZSZ/59Daksm5a/va4PGjbc6mtDm0bz9neoBMG1zfdX78
Ytgcwl5Szn891gYZt96YUx7MoT8Pmw5ParWBudoDS33rOaSlaWiieKkNxuH9
TJXmHPru644H2LWBrkLM7jOyc+jK/ONbAy5tUF4hVPuHZw6V+b6xMPBpA9Gf
pbtPrcyisrOLoWWhbeBVojBT2DWLQsMbSWdj2+DqK3pzxdJZFFV742drWhv8
qe++mJE+i75+HP7uVtQGUyftOyXDZxGxxX9DsKINYnyUl+IfzqJllwe+9U1t
0K25GLfXZhaZRS6efzPYBoePn254rTWLNGOPWtoutIEd4593zHKzSIb1dvZx
UjskXdox7sM7i+peN+oK87aDX1VL1dLKDLrElSjNI9IOg+x5x5y7Z9ChcA49
rsPtwIy0FfpLZ5DsxfMFfNAOvr5HCky/zKC7RW8dD+u3AyzvrawJn0EBZuLW
F63a4cmPGAeNRzNIfVEuxvdWO7TetHz1zWYGdXqMCP3yaAf5xA2NA9ozaIrl
1ShDSDsUrQk+jZObQfajputm0e2wwWKny71jBoWHeV/6ntoO72oalBnmp5F4
ssqiZFE79DgnvFNonEbPku4Xx1e0w/qk026rgmk0XDN7RbilHYi7q7MC30+j
60kDg5+GafGn21zL8ZhGD/CnOorL7cB3B1dss5pG9ZTNoHLGDjguEiRIxKZR
YHxomt3uDrDzuiQiIzqNlpgc0uglO8BP7ecpA/ppRCYUB2Uc7QDvndZu94em
0N6ovzpWWh0gVUj5+65iColN5w3vMO4AzeZcueK0KRSj+ceBcq0DgoRiv3S9
mELeYyJlkfc7IPqYtCbhzhQSPsfCeMW/AxgrZ+f2G04hqZEMScWIDtBxf1OI
KU6hSHMtafakDijrTo6w2TWFkBED28TXDqj5r/KZ1/IkuvhOrK6+pAPemL15
Gd06icxYm+7j1A5QiolP//ZjEh2ON9rI6++A7PXnnZS4SRR+rc4+e74DxtnG
xCZ8JlGEj29OLqkT0sysvBnsJlGy3H/dP3Z0QsQdrwlBzUkUha7N/BPrBPnG
AeejkpMoNJEw0KfYCd2ch4jnmScRt8WX7wTNThiIm0+5MjaBGJ98uC9xqRPM
CeQr7tUT6GsJB6/htU44lmMlF5w5gX5MHX7jd78TdKWPMce9nkCivadWiv07
QbltaSHz7gQyCL+tvhnRCY9Vjs2hSxOIhWf5tuanTrDPCd+uU55Aj/24nobn
d8K+7ESB7r0TSEFq+sFwaSeExdLrTq6NI2HDmounmzohtN3Af61jHMU69+78
PNQJSbXCtYxoHF0jXP3BtdwJqg2ckrwJ4+h9UtCZJ0xd4H2mIETAbxyVsYcW
Le/pgptPvm5J2I+jDuInHnfpLiilxnkfOjOOlK+zXFhX6QL+N9xsyjLjKOro
3P1A3S74xf45UY1tHB30iHrCb94FVSErZzQmx9BrW4V7eU5dIGT637J23Rgq
FV85b+zRBebfTuaezRlDJ4TEOTdDuqBv+NoDvTdjqO775Lf02C5oO5CrbeA2
hmp8Qs9cyegC8e9I+ILJGK1f1HDBX11wpUaKeOH4GDLnOCLSW9sFk+/8J/X3
jaF04xSn9O4u6NFz6T2/OYrGSptjPWe6gJ0/oFO3exSFma4WXKLrhjUpq16t
36PopbB2sSJvN4x9CJ/AEkdpl8rlVD6xbqD+h7ZUA0bREybtp4xK3WBzyXuP
kiPN/vdNjTXNbhgnX1eW0x1FR/oSJheMuyHwCJ+FmOwoejcj4rfk0A2zr2QC
+DhGkXOIBGn7QTdEbSjmcU6PoIbrQ86cQd0Q+bx+mEgZQY6XP5SIR3dDLhYv
vJQ7glSPB9JrpHeD7SEli5GIEdTG0X7YobgbfpjIRre6j6ALI1SdsBqaPyTU
UWk6goQX0s+XdHWDvH3K/iLVEXTmfpzaxnQ3/NG0c0wWGEGJV1zZPxB6QPub
0JOIrWHUtWp2bs++HiALF4W49wyjR29F98Yd7YGNvnl/vT/DaO749QfyF3rA
7v4rB76kYdSwu8q51qkHss3PyrYFDKNnr0e3HwX0wK+DvTWvHIfRXjWnI0c+
9sB/kZy6qrrDaEfvLMvy9x6o1A2Jaj0wjLQfS4dUNPYACzdnnjP7MIpSLvz+
eaYHvv04935pcgjVP9KLC2PrhW9yy+r364bQ4863x4IkeyFK/3fKUPYQeqeg
9TJUvRfi95hV6IUPoRdebJ8/WPZCb+DNmNR7Q6iHEO9X/KAXDFMSBdYuDSE+
pQLZ4fBeaAxK0wblIRRYyZEolNkLJppSOx/toa1nWk/ZVfZC8+Ivn+SVQaTA
ep03b6AXvH7v9K9qHURuGmM7eAl9kFZbua/v+yBKWkle9tzXB8w6XupTMYPo
BrvDnwXlPogxr56e8qTZx44/fGTUBxQlI5EBq0G0yUDcz3a7D94wpJBrTg0i
1ZH7xalBfWC0fm0lXXgQRYjyXjT+1Ad7Tgu98SYMorqm1BGO330QzuQYo9U7
gKJvcPpSO/pA2oXMRvdnAF332yn+eaUP6D6OdmX/N4C0eN5QA3b2w5584DL2
G0A5Wlcj7x7uB/Vyq6jJqwPI7b3t7Vvn+0FjuNr1seYA8qi+fvXe9X6gCu58
vy4+gFKGLB4F+vdDjlMhkyvDAPqmIpCf8rEf0krUCtsG+xG71ct9zcX98HmH
6CeVsn4UpfI+h7e1H/KOD1cEf+5Hn9clPC0W+2EHM4sQ5Vk/+iu6/0kOzwDA
aWI8m2M/injg9mfnoQFY/XhOW/VMP/rCs1sn4OwAXCi34LSS6ke3TRZ2kRwH
IPNc8uw9pn40tkWv8NJvALpyPo55D/ehb5zwQfLjAOy6WTjvVd6Hqrti7KqL
B2C9wZLJNbkP3eDb4+fTOgC5KmvCpoF9aOxHJj22NADdlWvHFB37UPqeqxMc
OwYh+1OZLvFMH+qvV4ZR+UHop5QYlEr2ocDRQ8T684NQc+KypidjH5LKNFKt
uDEItgXdIlJDvai2Kn3i37NBUNhCfaWlvWhAXVuoM3EQPDIvPTX91Is47hxu
WMcHQebs6nKXfy9iZfbYId01CI1HmdTNrvWiOMHjvVfWB6GuoPFy+eledF3g
iUbq3iEQWy5SlBHrRZQaR7Wto0Pwbo2x3ptIO9+UtcH24hAUJHPIVfT2IJXT
/pwUlyGo/i2gxvC7B5FdF2b0Xw7B6MiTjaMfexDdAc8nbelDMPzO39Hcpwdd
5oU/9yqH4Ia0y4O71j3ovuLVH/zDQ9BZHiTpfbIHba9wu9bRD4PXk113vAR6
kO+ReyNhosMQ65D2tmepG13cWSBphw3Dvjm+tdqubnRk109lsB6GylsX1XLK
utFDrduFQp7DEJlvahmY2Y2kFxkyCNHDYCEra2b4tpv2/412DRYMQ9uXfwpc
3t1o8E3T/L/GYfjyTnUQt+9GiknPdPLnh+FYzYO7DnrdKMCdbVcCzwh8SvFt
2VbqRo4dH81fyY9AG7P57lCBbnT/ty//E70RuH5u4wAnfTe6KjtpfO/mCDzT
c9zlN96FdqgKcN4IGgHSrXcN4/VdKEbqvOaV5BE46ffCUed7F7qkU7RqUToC
e6ah5l1CFxpl/Shv1j8CE8GZ9J3Pu5DtitqwKd0oBOZQ2Xe5dCHZvGoRC+FR
2H0ybQAz6UJKGyE9NidHYX+gXIjtqS40klIg7mgxCh7XL23fk+hC2hkvpl0e
jYL68X2YB3sXmtyto+EVNQp/yY/Ou893IklOKaEX+aPgF3BdzL6tE803OvjH
UUdB9GB3yZnfnUioWtM9Z3YUrAQa5YRSOpH6ja2Fcq4x2JBUtxp52YlaMApd
78Ex+BfPd+mzWyc6T7cet3FuDF6YXuI2texE2/eKqvidxmAqYej1pkYnsvQ6
G3Ti+Rj4nitteCvTifoEJtqsP49BduJAmxh3J1Jw7sD9/45B2gOV/5KWOtDe
JDO1jL4xuLYjT4avswP9x/uffgthHJ6pn3V5WtKBxCQWVhiEx+Haucn7nakd
SOvqSzXlk+Mws/JS+eDrDrTLJYv/hsU4ZL/en+fi3oG4Wd9GfHg0DnnN4RPJ
lh1Ige1pelPUOATxNHXVa3SgretZtjzfxkGe0BY0K92BIpVs8/UbxoFjIHSC
xNWBCqLr017OjcOQRw8D62I7au3X0qBwT0AdPd5Aam9H8vdXPXfLT4CoKr/p
LN6Oiv7JWVrrTcA9446X9Z/b0YVnwr0pNycggHP+QfKLdpRvwcOxFDQBWMxZ
Xpe77ShOWKNXK2UCkrJqLeVM29HP37PW78omoNjL6XLHSZo/PdvAyYEJiMpn
3vIRa0fk8RoLLdIkqAa8MdrD0o7Sux93xotMwpt3C0b/TbWhlKBkjk2YBFe+
XVv7G9qQjkPEpKX1JLhndRq9KWpDVpy+3shzEjieKF9Y/dCG9hzL+S0eMwmW
h5gWjfzbEFeuXeGLokk42a6MfbzRhkycm68uN0/CQYkvh3v121DgvQul15Ym
QUtar3SXUhuqHOfsatg5BbLe2xsn+drQEN+lrDOKU8B6KqXJbKsVGVtfUf1p
OAW+G7KGN/pbkbbywydHXaYg/t/tm7cqWlHuiTbf7JdTUKt6SfxqRitykKjU
OJQxBeTL6LFeeCviKX/2O/PfFGSkhjvLPmhFRjzGhCNjU5Cumr2+YdGKSnjc
CYXM04C9XBX7g7Ui1nnZEkxqGpg/Gww+lmhFfRuFutVa01BAeHNKirUVyUbY
RJpfmwbu6MRD5VMtaEXVLnncdxqax2zzzKkt6P1r0lOfhGkoHUmt7S1oQV8M
n4ntxqfBm9HK0zK2BUmZHnyd1TUNvoqmxVVPWtCNmBMV5zanQbLjYaicfQsS
2fvYYZFjBur/+ux6pNuCHmcxDy0dmIEniZFpMQdbUDBT5NDamRnIubdPN4Kn
BYnVjd6ks5+BHfm3Ju0Wm1Efc/0jVt8ZYL7Z/YaptRllsPHt3B0/AwcE/qr4
FjcjRb/gU+LFM0Cl2LfUxzejmy5zG0qtM/BxD+udVd9mxHNA8KLO0gwsrs2s
LNo3IxmrZk3rHbPgy2p8t0KnGXlwTDW6H56Fv8Y3m11kmxHv20Os4Xqz8OzW
VfFpjmb0M9VhMMtpFq5ZOxqfnmlCLy9eu0kOnIVz32McnOubkMnyYvx80iws
hQpfcs5rQnJGY8/4/syCqz07/+m3Taj3Mbe4RvcsRJx1z5t60IRC+o55OG/M
gt/fm8IuZk1o89Lh1zF8cyDdvHi5XLUJ6a5WOlQrz0Euca/Jwr4mhBk1EgmX
5oDjNHnf8kYjmjkldl3ZdQ5sufYk1HU2Iol1/+g7L+fA36y7z+tXIxoRro5L
T58Dn9DdnXTxjYiQVOU2VjEHm6+TQix8GpFLh5Gk3NAc/P1zcyzYphGteB77
6kKah8NrOouvoBFFvDu3v3D/PHx+tiPFSbgRbSXYuRJPzQObfNwW/3YDkr11
Ic3AYh6UFXIXPnY1oJoDo7XxD+fhhjrfs42fDaj+Ll3/XOQ84EFvMg/GNaAh
1dtjOl9p56V23FDybECz7fSjCeR50M5P+8pt0YDe88T0bU7Ow4ZSZuCf4w3o
9xpjuyXbApSLh/fq7m1ALPzCTb+kF6Bgfr348xIVGV7+3iymvQBWfiG7Whuo
SHk9qz/k6gKoSLUP9eRSUWRR8+bSkwWQSPKR+/WailhTWA7Yf1iAKnnmPpfb
VOR6WuhW048FILpsEVfPUdH1O1PlZ1sX4OzjoeDLMlRU635R/c/SAshQT7kF
MVKRJrtUh9rORYhzfvIzrL8eZZ09HftdYRF804Rs7uD1qCDfN+CEwSJsmAQa
i8bVI11VPAbdWoTObNHYtEf1iE++uU87eBE4LS8eYr5cj/YbJ1pTkhdh/qY7
04kjNNxC2GFTughUq37R05z1SMKgmjTTtwhqfBMe+8coiPSzT8mfsAQO0x0c
1FIKan8tkrZPaAneRW9QzRMoKOazg+O3E0sQfPJFZYEnBXmdee1yyWwJyuzK
R0dNKCj0gFflovsSsG70y88eoSApN3b36IglSL3CG1XDQUEPfwg+1shdgjFD
L36fETIi0YW1TtYtgeOMbj5DCRntL9J+Fzu5BLdKo+yuxJGRT7nwd322Zbj4
84lg+AMySn6yqUEvswz9Uny9UYZk5Jn2W/mn9jKkFdxJuStLRj899d8/urYM
5k9Db4sykFFQwrPbx32X4fTSuKX+zzrUdVTv+0b8MnCu6JXRudQhoaqAJyU/
lyHAXYHLRrQOvbbbWRravgwy8R4HHRpqUc+DzhCL1WU4acW4Z8+zWpS0XNoi
t2cFtA7pvX+lWIv0DJLaf15YAaZ0b/HiphpUK/ZyLCh4BQZrm6XD79SgHCv3
q+/+rkAuD1bKsFWNmMy70me2VmCX/XQpi281ctEsV4g+vgp3GEf/e7X+DxVd
T7oVe38V1lfOegc6/UOD0fpdW1mrYLfkKtpTW4VyGlZ2VI6vgvWH2e1n0lXo
i5RkMlF6DQJTbGWvP6hEmFjCqa/X1gBvXDG//aMC7am9/6ovYQ3EzFgHfBfK
0SujYat33WsQ4aRRGCpajnZ7u3t3CK6DZ9ZfOzetMuSr2NT0zXIdnPbvYRC2
KkV5MzPW8rHrEMbec/H2jb9I8PmYiH7HOpxtcnuj5VSCpg9JwD7BDejahIgA
mz9oH53u+AfrDZhjGc3k0P2Nngvou/Z+3ID5Jlv8hySOjrkFKY73b0BRgtW5
lpmfyNa/+MtfqU04KCN1Z97jB1pdkHJ1v7UJ3D1zIR5ThcjGJUGeJXcT7l51
kNyv8w1dyvySG7CyCRr2PB9Cn39FjeNRvQuwBXkb+8Wcs7JRyUTMb5vnW7C7
y8Sk8mE6qvmy7V5H2YLcUwcpB60/IecB0NYT2AY7/qMjLwQ+IINA1cg+x21I
2X/+5VvuMLR8xXriXd42vJAMXWj+dgt5ek+vq9ERsPvhK5/mPvgDo+/22L5d
BIxVku/Ou/n/QL/jb1KiNAHbZfd4xuVSNgTXxWByJwiY6FvKuI14ARxRHbYp
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
HTTy/N5qvS3yDxPt/n1bFkL6f5GljDQ=
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
X6JCyGLKx+pjRPZ/Zbg8sjAlP5aF/wFDf1Fo
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
Gw==
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
VIjqvCtfY7eIrTYtc0w2o0JWgZPei5WLmKvYxR4pGyrIabYLZ/MWsA03+89l
OlCBsLuVeLF5AVs9G6W90ZkKRa8nnx4uXMDQ7dmBdlfS34od7noXFjD6+olX
149RYa3sXBzXeQF7UKqWZ+dDhS/mB1TxtQuY0oEtD5acpoKn9UexUP4FTKKC
VzcXRgXJR7fMNf/MYxr5K/g7oqjw10eh7MuzeWxme8jxxstUkJe9ucs3bh4z
4MNGmxKocDZ9N4XpPo/9Lq7P6E6hwsX9d55f3ziPrbfzC6LcpUKe2lM3afF5
jN82NlwzjwrnZBsnr/XOYR8OzZUeKqTC6nLDfdTKOezF1btK2U+p4PpbLur4
jTlswcDr1WQFFV6l57vUHZ/DeiR33LSrocKUo9QvZZjDpHR0Cl7VU0HgUWz/
cZk5LGtQhqv3jfTHf13Io6FZzEmIllT+kwoXCtYE9byexbrypnxs/lLB4MK9
b1Jps5io3vz14X9UwG3yw418Z7GJ6KWUW2NUuOK/x32P6Sxm+Dn8leMcFXx9
3pz2VJzFHO6srlem0ODXF2q23/gMhv2z0prkowFntWKrT+0MZkKj9zaJ0WBA
Ql7QPWMG08sOW3grS4O3bIqaTcAMVvGvx7tmKQ068r6Ia1vMYIp7guGzBg06
jWPe0pbOYJwmr5DeNTToWaK05vPUNPaqgiInbEiDlLDzm67VT2OlbyLUENBg
z+7C36aZ09hled1b/+2ggU1YNHf89DR2zfZo9KddNLh6ZTLhhtU0xu8V2L1y
Hw00OlujVqmS8r/KKq4fpoFJikLN85kpzCbmhii/Fw3WBl8Fw49T2I3XXh1X
TtEgalFgoChrCiMcC/SUw2ggvd2tSCF4CuuPqBF9dZ4Gq8SPhIdZT2F/xrRO
ecbRwOfFj21fVcnzZjc3tZs04F8WPaY4O4lRm3o7+zNokPNOM3D/x0ksWABm
q/JocCYt6tW1rEnsgOjivaxiGuwVMy8rC5rExhYe9F8vI+XZq/Y0W01i7KPd
n69V0+Dw3M8L/1QmsYdu5ntu1dNgzXnK+tHpCWzNldPnn34n+X/bZjtQP4Ex
52Wcf/2mwc1DW+t+3p3A+Kx+ton10iB4NiWuMnACI3J9JexHaTDzuC32psUE
xn6euJg1R4PbgzmPDy+ZwFxKKBk8Kh1ObwkbVZ0cx1x2n13wEqIDJax/XXPt
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
6b3/mRL/HyoOk+A=
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
utmp1BNxiF6bsUvhBOuea/e2UeTPlJcBqfEzEyx306jZo4inRANP1Gv9YxVt
MpivQfF4u2nNS37/f6wPz+ZYqogVqWLvXXn/WHGKN78EoviZx4d8vDD5j6Um
O3L/HYp3akbx67wtk6wDQ9PPJ5Aenk5mwJjPJOu/H1GLUojj7t8MWpc7yaqT
jr67FelH6VOul/v4JKur+5uXEdIXo8lqzdONU6xF0Is1Rfqr1yp42uU1xRrf
8WJUD+lz3zn5BbmcKda+qj931iH9XjBt3HR4ZIplVVt1ng/pmx4mZJWsNs2a
klz/9CfKB3lJRY9Oz2nW19M/BRJRvrSt23tJ4eU0S/x88ntLGzqor1Qnug1N
s9J/7ctaRPnmxvn3a4bqDKtHOrs9HuVjV8Ow7KjHDKug+Np+1f10oDTE4jQz
Zlh35J9yZ6N8viqbpXexf4bl+KR8fo0ZHaryJlU+Kc+yjke+3HgD1QPjbXlm
rm6zrH0vPPxHUL24v+XoOfYns6zCs9Hyu41RPKpWMlM6Z1kmR/9uuInqjbJB
xCjIzrE8lg8/bkD1KGhpyqjbfo61o+1dAL6bDkMn95WExc+x0l78eL1tFx1+
K0TZqPyYY+1eFWbuDHQ4V5clXCM8z3In7lkE7UTPd75l97WcZwkYtb6N3UEH
TZskBcmb86wBSjUobhvSk9jxi2U18yxjP4u0+1vpwJshJO6JL7AUz0hvidZC
9honz4oaL7CYjQ4K5zSQPg5hih8iFlg7qtt97TbTwfqQ9ZMz5Qss94TTyls2
Ir31BQXKcSyyft/8sYNjAx0MPoVm1bIWWbdovW8+r6PDaNNxgysXF1nVIY7R
oWvpICO7fo9G8SLrnA/xSVOZDkVlNYX9s4us8dOFzu2oH3XRzVIeaS2x+KRU
HC4qoPpwJovzgN8Sa2XtqkJBedQfA//203OXWFcOH/d7JIPi24Uf+DK6xEq+
UXpTXgrpO5zYH662zKp4NErEi9OhxX20Y9fJZVb5lbf9vKJ0kMzN4+PIWGZl
69avPiVEh815zvVlf5ZZo33cJRUMVB8Gxlnha1ZYmmnMAkk6HdaPn7Azdllh
eWfn0l1xOhy9V6MkkLLCqjFMK3/Mh/RZKZXZ1LbCev4x/WcTN/JXU+Z0LY0N
om6dNeHgpMPp1ohGjXVssC5YWUGJDel/aVbloREblNb4Kxgs0WC3/deZFTc2
yEwyNz08TwNN6UY4FsoGz8eTEv1maJBzvJGrJoUNGjL2iYZP0qDYM2G3Rgla
H2ZSeHOcBvkHZ9gSW9iALhccEjdCAzuHN9u45thAe7LZL36IBqWvEiY8RdmB
dNS/cb+fBqdig9Y2bWGHR3ee18f+psHezQqdrP3soPxyfHtIN7r/tNqKvTjN
DkQi8fVMBw3u1f+tFY5mB1utnqt2rTRQtX2BBWewg+96Zw9WM7q/FTtWDH1i
Bzn6aR+5JnT/Nm7kt+1lh0DjmdT5Bho4WP+oLWfngGnVP/N1tTTI2KQltVmO
A9za1pxPraaB+7Z3f5N3cMCwR5K81xcamFZpGtDtOIBeqDOi9YkG2bu9FC8G
cEBSTE/3XNn/7s+asX/vcsDn2LDlApIG6WFWwQ65aP1OHj3vdzSwlo1brK7l
ANPF/S8U/0P+Mazm3DnMARl8+7d9z6NB5hnyfg7GCS+C/45dzqXBD0Hd/FUq
nKDgTPuqmIP2e850vWvACVuvJNZ/yqSBfRb/I15XTjiWGLLgkk4DzrRx9wvB
nBBglG46/xTNB2L3S0eTOCFifqo0+jENaqI+ZB4t5gR2HmsnyUc08L1pqPzr
Jyc8SXwh/+QhmmcLhjQspjnh3NcuPuU4Gnjeu/z9kxAXNF/vEk27Q4PJVaYn
3NS5YDD0p/HqmzQI8BrAuEy5QG+hWi4lGs1DBfYFqce4gF5R8kD6OvLX5ide
eiFccKEs6+2DcBoQkqVbOpO44FVZvK9wCA2eP8/nvPwfF9SmhHy/cYkGB4TD
O2S+c8GsxvFf2AU0P8SrfX43xgUGB01CwgPQ/d/rdZE9wQ3VHSo1K740kKxn
Fs0rc0NKGmdx4Bk0D0ybf4zX54ba0F+m/zzR/C5+qnXrYW44ap512dODBl+8
T6z8OI+468KB3240OLnNeEPAfW6oZxrWObrQYCkT8xDN5YYXhfjwdyekt5Wc
nLwabujLqn65D82ff05v47AZ4IbLX64JfDxIg6LNmc6TXDzg2sMS2YHm13Nh
nFV35HkguHH8fa4FDZyTdutt2cEDlPcj/rVo/s3N9/rQcJAHeO8bzD5C83EO
f8R+H18e0Bbvuy6M5ucHtdeGmDd4YH1dSMl1NF+/0gu89foFev+e+P3lnWj+
irfV3/+JBz5BOsMXzef+Airs4108wMjYtKEPze+Zbf2VN5d4wCPt7Ygdmu+l
dRNTNkrwwkPGJsuvaP6nu+uH1GnwgjuZZqunRoNPdzu8zljwws1IEY63a9G8
suLtwfDkhXrji2ZKSjRI6Vw4/eoqL3R/a9N9oEADM+9LwRZPeCGAU7uOX44G
bYPzSWMlvLAz6xr3BSka3I3w+XzzFy/0ZjS0DYmhenDxz+LGaV4QqBc+5CBM
gwR+2531TD5wnTcLqGbQwEC4Y3faOj5IOvOZsZOG9OAlPXfegA+a182vvOan
wVUFQ3vzw3zA/65jtwoPDZY33z65OpAPOPPPdKRw0OB8mpbqzG0+uPjmWa3U
CgElVzziKl/yAdMqQCR+gYCuCuc3SZ/4QGdr+yvxWQL2X7a8dKaTDyzxxscP
Jwmof+43u2ueDxICzfplxwkI2r20SkSYHzQ0jcOeDRNQdkBh4Y8aP8hNFZ/d
MEiAZ4dEWOEefmCdTX733x8CEtol3l8/wg92/n9t9/QQ8NnKNs3uAj+IlSSY
/OhA7+visO4ePyyLpt3yaCUg/+HxyIVsfjhnwbVh+ScBysfTwqsq+KFuZ47c
ve8ETKbOb0ro5octxcnHNjQQcGBPwo0Ti/yQ/eQrR+VXZI9FySMdUQzUWzQm
3asICCuKP8y3EYMI46ptfBUEXL/k2tBkjMHRlsimF+UExN/fP/PUFQP7EM/P
5qUEFCzEf/W5iEGbhgdt5j0BBmk+thCHwc6RwPSUIgLYY5n3aK8xyM2Oe7C3
gAD+Fy/DflViYHahuG3+DQE/xwKVn/diwOfUHpD5igAj25yLvssYFLjNHXPK
IuDO95Cr//u9JzONO1PoBQGWjqoG+GYcsrUX9avSCLjc05LfZIoDz9amTeFP
CPCzr2l97IaD95doP70UAoYLNAo8L+OgIiRBsCURwDe0x1A7Hofden6zVDwB
+n92RLK/wYEMi9MJu09A8EPj0KpqHHyEgmqN7xDANftk070/OIiqSBUxbxLg
P3LlnhMbAYYcp+daogk4/bq3XE6cANdh/tvp1wmIOW8U0qlOgPHNF+fORRCQ
tajwNWUP2kcAskxDCfDtH0h3PkzASlKRukIwsuevoJB8AAHcIRjbYhABUW+F
aB2xBABDXrY5kIDNQ0fikpCd27KHrv/nT8DGrb659iUE/Kp31E/yJZAd750k
mgg4xu5uEnaGAJ4XeYlNSGchjTOPTp8ioF+owfMONw3UR9n0HE4QsF32Wq25
DKrbuO/Gfe4EqB/b9xHXpIH4+M5TekcJ+B4RZ/Z5Lw3WBtjMbD1CwBqJ1pMh
R2lwNuL51y1OBMy9uSmjG0SDWjGlf5vsCRD/q3p0BtVxV42yo1tsCdhiLQ+v
UR95N+W5eqsNAX1Bf16f+ECDknAxdbBE+p2c+G91C+o7sm+umpoTsMuo2LZ1
ggYi+CY1u70EtLLnxd7F0Bz3LETO0xh9L8PGYS+6F6XZxTtdMSRg8ZNgGSe6
1314emwwXh+933aEKkL3VitGa1keEKDkVXjQ24MOuTpDfd90CeBcirqmfIUO
92rCD81sI0CD29Kq7QEdsOtJYjJbCZDkCi68/QrdK3XWKBhqEiDtF1W4pwLN
le/wQJ/NBKTXDFgtdqC5l81QOhXFVecqI+rVDPo+50f8+3qUTyJnnY4KCMD0
t/N7cFUC7g9GfxVTFgCjO4dqdysT8DigpqVypwBsOG315Moa9P11LyMuHhAA
72d2H0pXEbDK51Gt+mkB2HL9iDq3HAHWBRIFXeECMBRo12cqTUCD6x3dO0kC
4NavPXRPggCyPdh1d54AfLD5u61HlACnmINrp6oF4KLViaYtwgQINkbfeNYr
AM6hT99fZSJdMu/ft1kUgJi4mLF2OgFs1n7JHBgDzluKe+kQBDjPB+3+JcKA
8QhtnTh+9L2M5KLXqxjAEG83m+Uh4JSAGMd1NQYYzy3nOHARcPiHjJSzDgOO
bIhxKGcnYPzlCLe2AQO8qy5Yq6/gYHF2uZC2nwHm2VVP7y7gcNo+g63XgQEj
VjLnVmZwOPvwTtt/xxlw/N3Or16TOLxzP2Jxw48BezWW036P4VA/kX/oaDAD
HlmrchwZxiHUbev81mgGNHDc7ugawGGw5/pm2gMGfDnDxTqO8vJ0tDln1xMG
1Evvl5/sxuFbgNqptzkMSKnfExregYP+f5/PXC1mgGVaobt0Kw7mTmV0u88M
cF/2rSn8iQO7V+me9Y0MIK+bvLX7jkPn8HHp5XYGxO+mSXM04LDwwyGmdpAB
NwJiuHK+4jC+Ri8hZZoBdwsSTx2pwmHu03+G3hxM+PebOChRgcPwixM39ehM
MNn4imoqR/4onDnHlGRCJOPQi/hSHOzqudi7FJkwvveXkEsJDisNmmtfbWIC
PsuzpF6Mw+zdDROXdJmQcybXjbMQh+qB2w77jJkwf+TVvta3OPx6xOMhZcME
8w/f3ha9xuFIkJr4gDMTbH7+e/goG4drBpkn8j3ReTZ2r1zNxMG9cPWR0HNM
2Jfh1+OfjoNg7LZF8zAmfPQINjj5DIfH5+/skL7JhMk/vxTdUnHQUmtQ6E9g
QlbXobCjyThgFg9z3jxnwvSxRmePRBz8rt3oufSGCXx1MsW+qI6O+9uQxiTa
v0zgTuh9HNQLbugLVzHBQT24/8EdHIQ6u860NzFh1tqw+M1NHD6Gju5J72aC
wHsd/FsMDgXqDl+8R5iQp7v551wkquueVVPb5pmwZo5XQfEaDlUlnTWcPIJQ
6Hin3yYchxtRwMnDFIScXY47o0JQLxydZ+OTFoTFC73s5ajOx+tZf+ZXFoSf
b8W2sF3E4XzzzQP4ZkH4lPW7nnUeBzFiKpvQFYRbO3TbQwJwcFH7WEczEoR9
e2m2X/xwmL9h8I5uJQg2bbtZQj5o//AibwEnQdjL3XjH2QuHEYfj4wIegiA9
mmbz2hOHUbc72xl+gjD9KyeM+wQOkcOXLRiXBcFCtk3e0R2HOpbPRkakIPSv
llUtPIrD1efZLQL3BIE66ZIi6oLD+tOBlgIpgiAfFR967jAO0y2i9+iZgnBn
/ZvGNgccvmtXPaHlC8KgQPJNQzuUP59/XSJKBUEH21eUexAHqL2uhFcje7mz
LBRskB5uSyfw/xCEIxw5VvcscSiz/NHK2y0IucL6H3ALHBj7l4e4hwVh6Nih
5PB9OLyv/l7BOSsIp7Z293GgPsrOlerLzikErW01iaFGOLRsef53mSYEUqVE
Ca8hiueDtRqL4kKw/8gN0xv6OOw8ecpkbrUQdFsaGkjqoXz+k68+vUEI/FgK
mek7cSjeZdI7oSMEw7+FLm7bgcO2/JPHR3cLwRlJorhWBwf+gMPvhsyF4Min
haPHtVG8//Po7LMTApf+xvNcmii/Xn/91uMmBNZ3wxefoL7fdashvuOMEFj9
Yx803IhDZuR/6i0XhOCd/jb9YTUcDlZ/vt8UIQRKzXJ8ceuQ/eF6tfW3hMBd
+unW3WtxeNZ7ork6UQhuRRV+m1RCehG5lvf5uRCM/WfWmr4G9fndba5luUJA
t7A1d1bAIeBhdu+790LwCv+sJiWPw6IebC2oEILvZHRAswwOFS5NTq8bhaDA
OmF9ghQOfavzbDPbhaDyc+9eZwkc9mbKKz0bEIL36+x/qojh8EPG8fOjSSEI
SB/7OimMw/7k7B0PVoRA8kLcxnJBHHwtD0XcwoRhZUpv6T4Dh17bx08jRYSh
KLhb4xQdB93GyrhQeWEQeXDyhyGB/Ncl4Ry0ThiEvtb2rsZw+JzSsOSnJQwj
X9gdufhQPVLX8T6lJwziRpOsfm4c+l/cKnLbKwzbJB/G1HLiIKsm/8vxoDBs
Uf5jUMSOw1idSp2NizBInKw6nr6Cwbuc0cR9p4RBe2bHdPwSBh1dhWBwThgE
JtRGYhcweHuponhHqDAcjLtlcXUOgweJLnSNWGFY0LaXCZ3B4K9F1dZ18cIg
te2SdcgUBiKvDLcrPBUGQmJkKuwfBsE14qISOeh9t0fsUeMYpBSHfxEoEobC
8pCAu6MY/Iuqt+H5KAzyE7EHHw9jwGEOxYu1wvDmff7j10MYuAqLzk/8EobP
xIjNxwF03sH7ggO/heF3s4pfax8GZR083B1jwlChYb84/RuDHWwv6r8tCIPT
rsARYXTv5LYtP1fJIwKfdgSYaHVjQJ+InyeZIrDf15hh34mB08/TB/OkReCK
SS8rtB2dX/jqjRfKIsC3Y0dzdisGp7OUniRvFoHKJoPWtl8YlGTeun1XVwRa
SqaMGM0YnBchnK4bicClLJAz/IGBxlgz9yUrEVD2ljp8+TsGj4EV6eMkAoHD
5/neNWJwHwseOuYhAoZS1lKL9RgI7O9ca+8nAjf4EuNYdRisF31qYH5ZBMJ/
7rkY8RUDTXsBln6kCER82FtdV41BgvwxUe17IiArlhImW4XBnNvfKtUUdF4t
7TSvLxiIq/45LJspAusf8G4q/4zB6Im4Bma+CKRU8ihKf8LgieLuNdylIpDm
pRoSUI5B9IGNNrNVIpC987hRUxk6/1yy21CTCFhz5QdsLcXAju+HTXuXCBxJ
5Wc8IjGYvCihVP9XBL4IHGLylqC5wiqz6cOMCGTZPrzg+w4D3+A693wOUbB7
9MGspwiDP6pZP8xoopAnI6p24D9k3zNOrT4xUXC6sX6wsgCdR2Ag5LKCKAS1
cEbo5WMQHulTIqYmCuPDD9iK3mIwoJnXn6MtCvb5/Yc03mDwYdMndqNdosBQ
Gbv1Cs0df5KK+Dv3ioLCtpfpG14h/Tx8znbuINq/T+JRdjYGzwxS/wi4iILJ
Bi2fjVkYbKfI4ueeoqDCXF7zNhMD2lqRYFaAKPy7dzpf5wUGBskFW35cEUX1
KkypNB19X+9d0+loUejN0T1r8hzlh/pWD544UUhzvZ/6/RkGQ1dhKOmxKERP
R2W7PEVz0PFBB82XoqB1RSp+PBWD/DGTkup8UViW2+US8hiDQzsDBI6WisLs
xCK/SAqaq7zCLBaq0PdljG9mPEJ6f3L1yu0mUThXsXqKlYTya/pe6touUfgi
E7n1ZwKKx7XyN9QQOs/eQDufh0ifZ1XyDk6LQvC1ETt6PAaVLU1pI2xiQOft
03mJ5rSxn73XwnExKOZwnjG9j8HuSHd7aVEx8PzvwJ3huxjw0/xk38iLQaln
Be3WHTQHXpJrMF4nBkIuuce0bqM5cOGSf6emGAR0Mx+13cTge8pzPADQftt6
30TcQHqMyr5FMxUD92Kl9E2xGNj+TOd7aiMG7wubzrdHo3rxJPPMNmcxKIwc
XxcThcEX/uovdSfEQCDGr1g3EuWrspyw+1kx2CTnuHbsGgarxYvMly6LgfHT
9LNPr2Jwd/Z10J1IMdAJtU6xi8Dgaq9Uwtp7YpCi5JQhGI7Bjxkik0wWg2+L
ZTerQzHQM3v40uaFGPQFBB/43//nP8bZnDz0Vgye0u7OG1zBoGpze9gVUgxu
aC8EcQf/7/0Se7FKtN7nTdunS8i+UzfXZH1D66FIOhLNvVM57h27OsTgnCJt
m3kQBsbNh6J/DohBbUaGpugFZA9X0LrTk2Lw9VCMQEcgBhb7et5xroiB9ce8
zxnnMHhU8xTi+cVh7rK8k38A8k/K9/wNwuLAWFXVsNsfA97OSLlyWXF4pv9G
UeQsBpLPm88fWisOFyOaDvT5YtAr8KNiZIs4iEVvPlbsg0GSxgP+sJ3i8HK+
3OqWN4qX+mZdCWNx2BAUJedxBgNdySLXbCtxMCoJ/bLLCwOmgMFFfSdxcPbJ
3C97GoMc5f7rP4+Lw919bIULnhjUXCy8fspXHN7xBS/+OonOs64qiOOSOJxw
VpF7dwKDTiNN17hr4jAgPCOX7IEBNYbrrr8jDrqDA8uhxzGY2X4UK00Sh9Xp
y8Un3DEo1reqskkXByHJLQetjmGgumrk8mAuWi8QXqfrhvw3bKxy+b04RNtN
KKsexYCr9EK5UIU4pDaccxR3RfUk74F1eoM4tOwX9eZzwSCiO+/njjZx2Jdf
4TLvjEHWkX6L+j5xqOiK2TxyGK03NXjvNiEOjf+5dvY4oX5T0CUzvygOr5SN
PFscMVgsafCJ5ZWAQ+I6Td8cMOgPVHunICgBoUEasnX2GHiz8c7nS0vAQ6Ot
u2vsMMg+4bfeVFkCPvrtMqo+hEFyXaRVxyYJ6Fm0UK2xRfXL5LCX7w4JiO48
Mlh7EAOVUZ5g3j0SILTa99q3AxiY/bgfnrBfAkKqQrhabFC+Sa4JVneQgKTe
WKceawziaz94fTgmAZ1B9+4PW2HwiR5lfdAbrU+7+3LOEtkzGrth6IIE+ARE
pvAiVrjWu3QpQgJs+c/6iO1Heh1LKRO8JQH3Ai0V1lqg80NzUFqCBOgPyL/a
YY7BSkzq+m1pEqB5sV3K0gyDwDFmQ80rCZhxvO7msQ+D8ks7Th0ploDaArmY
kL0YvDLXXp78KAFFRcm3k0xRPAPFwq/VSYDXQ17/IhOUT8IT7NItEuAUa6Pd
bIyBvGarX85vCXhVf7VpzggDoX+DbbvGJMDwSaKVNOLwo1t0m+YloNjgdjbs
QfpKrrztwS0JLivH+o4ZIn86fB6uF5CEUw3dkbEGGHQdKdDfJikJr9MllQt2
o3p5MeVu6hpJuMxPf9epjwHr0rVOTF0S3gS9M8YRP9x0VtlXB3GkYp3WLgx6
3Dw9WvQlwfudkbmrHgabB3zT9M0kwSNB8fNNwCDx+q32TFtJSH1drE2yUD8V
qWIKu0pC1nXs8chOVP/tlCDolCSkZTM55RBvVsrw6A2QBI2XdY4Wuihf9hyK
3RsiCdfpe16H7MAgKnpH9ttoZI+L31Ledgyqy2y/SMdJArem7a7BbRicLXzT
EfZYEgyEJy7LIY7YbjX+N1MSLsXq5dvoYLAkobtsnS8JcZsNf0dvxeDbqgCe
95QkcN5cIT5qo3xYxYspVklCidYptWUtDEJ+T/DFfJcEi4JYw62I9XSBc6pD
EqpSXW19NTHYND056zAoCdWRQy45GhhAu+hg+aQkXGBXOvZ3C+oXHzKb1q9I
QmS8oIsqYnff/0ru8kuB9p9XBzw2Y7DvnUHqopAUGF9g252xCfWLkweuHJWV
AqFhNtXBjWh/i3H7ahUp8Kl7zbce8aiW9GaNLVLwtUiw87Q6ul+NtHIm6kqB
xK7Vr3I3IP3r69RzGklBw2L3uRm1//09pPbDk5ZSwBayf5su4vqVFqdGBynQ
8jg9Gboe9UuODXLb3aXgtonO86p1GAi3bG5J9ZaCdyWvLYURlx8Yu40FSUGf
049pR1UMYvQ9DX0ipKC+PONO+loMtnq9nGq+KQVlkSprJ1VQfJ7np+glSEGM
qVUBIDYpurkn45kU3ExduzNWGQOtszDIeCUFb9dlvm9VQvevtKpr54qkwDP0
h+Z6xLclt67uLJeCfMPstCBFlD8pUf/tqZUCSSF1xtc1GFzkrjbNaZaClxGH
fOQRW4utNIv2SiGlqdX4rsbg9RPVo5dGpMChPUO+QgEDw3PWg79npeAAe62n
DOIylxDPfZzSoGWc+Np3FQaNG4sG39Kk4eMB5milPOp/r9jdpMWl4WCVmuJq
xPbZTi2hCtJQaTRuFSSHwaq5pn1D66Uhwtv+QpMsBhJOZ95ZaktDcP/JhE2I
/7zYqFykJw2a+xXexshgoJwlE7tqrzTkmF/6OCiN7qubdcevHZCGkGuXa43+
x3z3LMacpaEqRbHhuRQGpYuqLw+elAaNnWdqeBH3tXJxkWelYZzncOlxSQyu
+KvYKgVLA/V4PKtSAtWnuIT0mEhpGMxTvqOG2J44OjV5Vxr0h9i8b4mjfvDk
6k6HZGlQHQzaMy2GQa0qEfYhQxqu2SeIOiBW8Jr5qPpWGur77dvLRFH/2mnO
dbtEGjh3lDxSRfzcTYI1VyEN6SulB++IYPA7197fuVEaGtuP8S8Jo/P/k3rx
uU0aVoe/fOOOuG/y8K8N/dJQ9uj2gUYhDDLD1HjvT0iD60/xCRZi/TORG5cW
pcGwY2dEliCG5v+gA0d5ZWDLES4hacQtN/kDq5gycJnweBDFRPcFZ+0Hm6Vl
gO+mp+giA9XbMvxtvJIMbE2gx5xCDKHR1WybZICz3WyxQwCDjDNkl/t2Gejj
UztqhVjG9sW/rwYyMFKdXv6ZjgHGa8WhZSEDL1tKZXQRt5iQtCQ7GUAXFq83
NNSvxiZFuNxkwDq18j9VxN8+zUme9JIBKeq/xVQCnSe+UbohED2f3L1VGrGB
9jUpnTAZMP530vM+jkGap4xYSqwMfPXeEM9EbM4bL8AbLwN6itElMRjKx29s
3KefyED0h7BWDPHMY7uZb1kysIZT/N81ftQPdrz8s71QBngTDDj4ECv5LDSk
lslAyS4ado0P5auA2Tv+Ghlwyj2N8fP97+9zM1LP/JCB8FQPzihedN8qFI74
0SUDjtVLkzTE2k53j+38KwMJA6odt3iQ/x5v2P1sWgaC3o6ViiI+aj4gS7DL
QlWfWVIiN8rX0xvfOeCyYDCncHQ1YgUzOdssEVl4vrgq5QUX0sP2goklOVn0
XdP9mxHfCZ2LMlOVBYnElIAiTmSfT9/qZA1Z+CIhL6SP+LpNSNHoTll4vLdy
dTUHBnyBVeZgLAv3FJMzbBD/WFvec9NKFjLuPXrawY7q/dtT/l2OsjAaUyF8
ArHJsS+8m4/LwrUV6flJNgyORP2MC/GRhactCdbBiLPPJCo1BslCiJDBGgLx
oIvo29VXZeH0A3GPByv8UJO9B/xuycJHe9HViogZjzdVlSfIwoTZTsvcZX7w
jPhuLZKG1rvenGYhfpip0eb2ShbVM4LxdYkf9jtaHM0vkoXw/NxHDohN+tcO
8nyUBcefIalDi/ywI77s9MFaWVjuCpK6gLjzndTE82ZZWP8xhR9HPJys5Tfb
Iwv/+Y54Jizwg+QN4SmjEVmI6HAzWI9Y7ke+X/wsOv88z5338/zwplz23wCH
HLzMr7cxRxzzdN+ZbTQ5EOT5FNM1xw+uH3b/jRSTg9pfPdv8EA+f4nZvWSUH
dOV1jryIu8Zudq5bLwf8bQmTD2f5YepBv22QlhzwjWqyqyPuzKXVVYMcuJjP
hXyY4YeDUeyGMqZycHHsd6AtYqbXx6JTNnJQU77we3iaHz68sNtQclgOmkq2
fQ5FvDqqLIV+Qg7W1qfKSCLuc1hmHvaTg+MjWwZeTaH1ngIhOZfkYBf/yFoj
xKd4Z8ZWrsmBv3B9R8ck8m9gvpPFHTmo52jDziFeETCvSkmSA/XPzEwG4v1i
ZVrjz+XgvLUXlfGPH3a3Mh7r5SJ/JE2Z6COOydyB3X6HznfvqUnbBLKn3tCn
+5McTKoHkQGIxxM2Nm+ul4M9h4MyBBH7HVjYGdoiB/Oiz/iyx/lBxiz9SeNv
OdhvMt1qjDildivvmjE5SPrrpfRnjB/dW7M9/OblAMaZv0MQX6kPc3PhkId0
01ZxecRr9qTdi+SVB5vRr6XvR1E8pXZ8zCXkobF2oMMe8ft/hpO/mPJQ0rne
d36EH9wDPitwislDqciDC/GIvfeWWKyTlod7LuvmtiLWlFh/yWqVPHAU/xn6
OcwPeBgz84KSPHQIVloFIt63xevHk3XywHT6vlESsXWNAWf1RnmIuckXWvyX
HwJn722Y1JSHg49cTRwRi9g7H5LeLg/BF/5ErAzxQ3DCs9DdIA9rpW9tTUUs
7Hwsy9NAHq74uR42QKxq/qTprok8fDrnuNA/iOwRcFx5Zy4PhjKXiRjEuoZ3
lX9by4PDgYrbmxAPPTQ2p9nJg6+4Tuz/NVDv0VCnYRzAd4X2ZzUTNS6rtvdJ
dFlKhNyfLtpM5dDWpiZbWhFhKpmmy3SRWx1KTCUWm1aXPUiipnSTMEpqWkYR
ybis6Kg9WWEz+/z5Oec553nO+T7Po+7lUHZdJnHcxFA3QDW2n7zCaX52YDDD
s9ypTiAX1QZXxocxrASpl/JvDscmmfcWRjG0PZ3AF5Pl5b48dTTDYwF31piQ
a0L0HcakDLM2m/Pv9XD4oRzXWR9k6JiX7RlCDg0a2+d7lKGzsY+GR4774pUj
SWKYmm/x5WY3h7lO+hU5KQy9/AXJQWT+dX9NdRpDPwOn1G/JtuaWegNnGbZX
ybgbXRz68fdbm2YzNNvbP7SZ/Nxtw49eeQztzWNFhmQ974rQ0EsMY7I8Fyg6
OVymKk48WcDQZRBig8l9CbMv3bzGUGNh421EXmFoU/3mBsMe3UDZPQ2H98bf
6hx/h2FNfumcCHLWNJWOXQVDk0/2q74ju47sZgHVDHd3NXUqO2h/PfI9Dj9h
eEp84eMestmpLRsuP2c4J+l09Eyyfmah5HkjwwlWReFNbzk01iakfW5mONn9
vTqRLA8ZKGTtVF+5WrGQ3CHpUS7vYuhT3MZ7187hT2qxZsc7htLh1OYssscP
x75kDDB8Kg+z8CV/tlhgWvGJYZR0m+orcrPvTrveYYYnM1P+u/6G5g1f5GOk
pfw/vvwtlCyenB/kogsYES0ssSCXZte/2MABtg5OHH7WxmFy9sslB3iAuVfH
b4kjO0yvLM2eBNieO/f9QnKPywmr+2aA9VXxme9bOez6x+VM+1TADDYhPI8c
JqrW17EEjLz6SLSOfO2Iwx7LWYAHdhaIDckj0Ud6ltoCDm59lF/xmu4Vi9eF
2AN+k2w4JiEfHbxfk+gM2NURJ7Uhe5wvdr7iDng3zFbQ0cJhv3/spceLAB9O
0284S34qcDTtXwZopcsvW0WeOqpMmLAS0NRkuWIc2Xyi579z/QHr1lxrvdVM
+7xFvtXvZ8CY+0KrHWQDnbqGnSLAZWsnn7Qm7x3tXJK+GTBawLNofcVhUuCb
ktKtgPO0zrXp5BinclCHAxYZpZ0Tkg/IpalDYuq/ckry1+SWeFOtWQygslD9
u+Ilh/VmGZGu+wCfOlY0icnpopEW0SHAcE2L3UxyyEZPoSwOsKHMuqCticP4
2cGKnGOAiwvO+5wh26q2Wz84AdhXtZLzJWcGrZW/TQfU05nVp0c26GU6484B
1m5yGLir5vB2TL14Rg5gVFuUQELuFvzS6n0B0EbWHDiXXNf0TBh6GdDdTaLs
buTwSq2lIqkQsMl08dpc8u3h9VZ/lgA6GXvqBpDdJbvSntwETJ8d3jiRHLEq
Utt/B3BWYLWytoHDxBRhBO8hoF3B6rZY8uOlBq/m1VB+Ar6JO3nXkQJv/zrA
2HOj4sG/OCz3n1+ySwW41Mmsv4isqcz4Xq4GDOkLPr6NPLO743hZC+AMxVvh
dPKjav6Quh2wPOuE7esXHA5FT/v1cxfgttPb7c+Qx0aNnpn3kf+QrvcjCyJ7
XN0+AI7UlOUZkPc25l7cOAgo0k7nVanoHy1xMz44AvjY50HWIfKUqluyXC1g
wsWUFa7k/wEMUYah
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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

      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwt23c8V+/7B3B7z2NvEqVkNFU4F0IpK4qmXWYUFcooIVEkDYoGkRCRhtQ5
UURZRQrZIxnZe3yvz+P3658ez8fb+7zvc859X/fr4n0UHL33ujAxMDAEsjAw
/Pf///0j6P//HzhpYYOrk4J05YqMG1poJ7uUcMkBQVqmcBlOottT7pVntAvS
5q85OZ6iLUl+zk0/BOlX6z796URHMk7tKvkiSGeLru+SYiTAOt3iivkHQTrC
z2LaGh01LFvZ8lKQTt4pr3QNPZNkz+meLUjvTnjoWY4+5Smyc/qhIP3Xtr6K
gYmAz4o6EZduC9L1t1/v3Ib+eqGxVPCqIO201+y3L9rcuJvh/kVBeiLqZnQO
esUmJx1Vf0G6i7xm1YcW47EOeOMlSMec1tqkwEzAcszLF0ZOgrSpaoLGIXSW
/5V/320F6UsuDw1voodia1QczATp2BX2fjXoWzfCnYYNBOlq59piThYCzu7I
vnduqyD9cN2Y7A60g5NBA4e6IO0a/CkpGK303IT31ko8nq2Jxhv0zeEPOxQl
BWmbd6Ft4+iLLU/O5fEL0gbPXJ+osRLwbvvycx1WQfqpKlO0G1q86mNf5ZwA
PbrVNDIN7WQ5K207IkCfa9yV3Ib2ibpn2dMjQOewzXyVZCOAf/Oz8FPNAvTQ
ZxvR/WhCXO3Ncq0A/UDOLeA62mREajCmTIBex6M69RV9OeSsrGSxAD0f+yCG
g52A5AiwyHguQJ/KLtPegT5UdubCxgwBes4xhS0UHb8skf/hngC98GLV37do
oXGVTrN4Aboj1bFvGp3nkC7YEilAC2uaL23gIGArTyy4BQnQDEeH1HzQIQVd
J6ZOCdD8qjoB2Wgr8bR7Ya4C9LN7ur//oCPnayoEjgrQJs9HDypxEjAgc3wq
2UqANvfYP+aAtgC3FWt3CdCqXz1TU9CRij9MX+sK0GYNG080ox0u5/gbbhSg
lS4/2yvORUCu+r9H31QEaIXeXxb70PpNSV/t5ATo5yMvXePRf3fmTQ4KC9DG
mYZJNegAbXXZQC4B2lowooeHmwDqtJgROwOOZ42/iQlayqOuafUAP313Uqoi
Ei1eWv/JsIGfHj2SfvvTfz8vrJTjSPHTk03sRcw8eH8OvYsLyeSn6wNBQx99
Of6Oz70b/PTX3RZzoehjhc/3vAnip9UPbxGn/zPFrPTjOD/tVDQZtYzuyYqa
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
      "]]}}},
  ImageSize->Full]], "Output",
 CellChangeTimes->{3.6036418508047705`*^9}]
}, Open  ]]
},
WindowSize->{1911, 923},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
Magnification->1.2000000476837158`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]

